%!PS-Adobe-2.0
%%Creator: dvips(k) 5.99 Copyright 2010 Radical Eye Software
%%Title: PlayingWithTypes.dvi
%%CreationDate: Mon Sep 16 11:33:30 2013
%%Pages: 13
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Bold Times-Roman CMSS9 CMR9 Times-Italic CMSY7
%%+ CMSY8 CMR10 CMTT9 MSAM7 CMSY9 MSAM10 CMR6 CMMI6 CMTT8
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files (x86)\MiKTeX 2.9\miktex\bin\dvips.exe"
%+ PlayingWithTypes
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.09.16:1133
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: CMTT8
%!PS-AdobeFont-1.0: CMTT8 003.002
%%Title: CMTT8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT8 known{/CMTT8 findfont dup/UniqueID known{dup
/UniqueID get 5000830 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT8 def
/FontBBox {-5 -232 545 699 }readonly def
/UniqueID 5000830 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT8.) readonly def
/FullName (CMTT8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 56 /eight put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 71 /G put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 85 /U put
dup 86 /V put
dup 95 /underscore put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57D06E82116C79486D8
C5C32DADDFCB2CBD26FE85FFCB176AA09FBE325434B8B9D358B7C180AEC54F8D
24A1AB4D5EE5375B963A221F060453E01768F0A398352CB2C76E6E70BA017570
BE1C3D3A86E803B10B506FD9DB49DF5CC7BE17133234D7BE9230BE8B7481B357
08595FAE04D04B14C633C52E303B06EDEEF7CDDF20F34D7F08D991DFE2C4261F
298E0A818EBFF29D3B29D1D0CE2F071B49B0622F65F936F6C1D4C6AA2860E56C
9140A4FA23BA31888345142DBFA79825662511437347767D4A13A976FCF67EA6
7882D7B391B37FC1E22787E484D19BB252C4D73AA3D73EFA5C6341CF6F127033
2B91079B5FF8A164666CCC65D0002EF7E374098745C84E3037324B4248C5385C
FCF0539F8C04CBC52404BDC6ABD1474617D06377A69F4851838F462E82A86BC6
F8DB2E740B5270AECB0B922D4493A75422349138B539B6067C040F3007F04191
CB545ACC01B4F28AF811266260FEEC04057287BB5C26C077946DDF23322FD99F
2B3DFFB62AB8BF12000AA81ADAA6A064F9C34D5F36CB7F66A5EEB7B494FA1AAE
32B380163AEE08F5BD270FAAD8DAF0CC5B6979B8D4FB6AD723E011DCFE119092
D1025BB62280B745BB0FB140E82325F1FDFC029100F922BF206E5527B7D8F60C
3F3E3AE2184CB954391D10A1618FA0940F12159167494E29A46125CB911B19C4
97B4DC76FF53B7F79E380D7375FAB6C30A467E02E48BA73403D3900FBB440C9E
951C081C8D5E04DC0C8E1BC7D552075CC360B7D1007367C655069324713715BF
F8182AEB6F401A1F029FB3962BB3A0B2775979FDFFD834D5559EE20CF54D789D
41AAE2A22A06E509E4E648FD33710B58A83FBC8DB8D6544577E03B186F0576A1
0C1F1FDE425A0AA5724986D953945FD3ADC0C170FBDD241BAC988D65CA8FFD0B
B013EB27813C9B3740FE2E9D8D81FEDAD1A95CC38494DCD832CC92797432F3B2
4CBCF51F4C14C18B1E5146F691604D479DA92E0B1F5CABE244D8761E14138E95
0EF0EC36424D8A7581AB3854188D11AF8339662D164EF37BF8635D5E0A836955
688C6B9BBD36356BF8F5AEFAE3875512A503C38D058F5823D50EB25F683649F9
F9D9FF4C5580C2F284030AED47099DF18280473AB6BFC7A2423D1E19F327E809
4D24A7256E1A20BB90A03B2888E16AADF817FB7A6A3D5E467DCC72973CF4850E
D8D09E8CEE8238655699D103FCF0530E683A96AE274E3AB64FFA85918AD11091
CA12781BAE1F58937C4BEF292DE8D19F299F92B6B7C3975718BD9CEA902FDB73
378141C0D5E65485B75CC9CF6563DBE0FE603E29CA55796DB18164725E17F4D4
AC65FE25D9CD21C78BFAF06D080D7BBABCC5F672256D38952F85B451FD55B8F1
976F35F23E9927510749842FDA197833A0CF88AEA992A8945DA35A724B445CAD
08B4D617CC45364A36CEC6510A316A9D1882221DDEDCF16CF2DA1B7481AAC0EE
A94FA95F2A0A5156B81553BAEEB8FDABDA924C313285118D89487D87AAE8323C
B8E91F0BA461A60F11BE36C854633B1E54B69BDFDE29BC95687B9E8F3201AD22
40BBED019335B72F951C4BA0870094B6BD71D50847306186BBAA7709AF2B990D
03D86815BF8BFFC7E8765615A4B97AFB5E1CA1BB10435F445106127A7F904B1F
96309F83062DED83FEE13FB06B6A64B6906767F935AA260D851E227146630C04
594F9F36C8AB7D740FEE2ABE30A550D99C1740034D70A2DC62F9A5AC039333F0
105DB6493C16354FBE2AEC76A05E98F3B632653C1F0E81179D94990DC2280B6F
22343387602EBB5341F9D3921809329D373DC8BBC960171261CBF652EC184E2D
EEF60684B032ACDCC51A132A390942594453685C06B4368341101438996B4936
77A1C371680FB14318762694769C6274933895609727C54A9805AE9B6CE6923C
56720EF3410177BE269DE3B2C0C49249DCFF9C08C593CEC2D9ABBA53C1CFD796
109AEEF6BF21150E43013DE4C4FA04CD698E4C28B6366C38219F77068C303617
8982698661D56C1C0E66B14127544BCCEF9A1BE8B5ED018218B18B25BBF03F68
CC5119847F5833188FCCCFA9D4C4AF1365C421DB98A70D15F48C2F6193E87862
6BE1432A7BC522D1EF63F82AD5E20976BA67B58B3105002FDE59F75D663DAE8F
6AA70B85A4B70F189BBD81C817C8BF0720E62F58A00937F05F29B81092AAB18F
0D7CA822A09593FDF632A025C7DFD5FFD7076A2087467F270FCC25F102C0C601
E47AEA84B0633460821B5318C33564500EF3013787590E7035571CA3D1639BDC
A34196CD402D38F866E6EF25721AD24496DDFCB230A07C5D27205E78E0B9DD3C
8E16CB369004CC9440412477F590494DEFE9883AC2286ED8B1F65D3B3E3BAF7E
B0EE921EBA5269CFE94A67CE6C271B3C5867829DE8FF75BEA722399A4EE9A9A0
6DC184E287B12C3215D86A416A4A0CBF594486DDE10832D89C02D6FCACF7771A
A3D69FEF3D3CA707DF70B66AB24BEDD42386344C38346B8E28FEB36803016B0B
53358140F2092A6F92F1E94F44C30F135DAA724C2451407D64BCD6437CA49F92
D3B34A8DDA8B71CE737C43165358710D82239A7C4BF5ED4995343AA6BCE15AF8
4552F272B17E5A64E85AAF53547ECC0BF94A8977F0E8B05B7D5EFBD54A1C369A
E5F121FA1E4546B0C5D257397797B1F5E1DF8F2F032D645BB87F6FC157A7378F
8AFFE2262DA33E4EEC8056FD8E0268D8F289FD20D9F0CAED171D4CBD87E4143E
09745ABB06BF47574D0B13EBC01A81CF75DA2B222E97E43B553CF54FE378F8FF
1BC9706EE454EC0AAC8B981AE8F8B8AEC8F42A1ADBD136D95A54B22BF59E3473
9DA5EE5928CAE72CB141D984A8200CEA2988E7498197870C6FFFC1B51206C188
AC20985D8DCD1537384D3F1B83166EFD41C307F7727D43EFDABF1C2DC348AC0A
2BFB6AD291D3C0AE7583991A121F64410D65A2EF4D9341522FE55190787FED8D
388D48382CA491EC44BC001FB1202ABF7A33A75F39501592E28EDA37C729B824
38DEE3304618920A09DCC7AF4AD93658D4A681C361BA38D0223F4534C6D2322B
F06212EC336C026B6E906FC1CDEE98680458DF08487E32FE64B9E361F49FEE29
CCA40C363F272A35D9EED7D84E0DD6427155920B03DCF6F535B96B2B6F86FD8D
28DC5B7C5A06EBD1FA5290116E732EBEC49041DBEA9A4C0D6B71E487A12F232F
5F139FF57350A932A0E7FEDB1BA7D1E39371662DB7A6F5088837496BE66A7F04
4903B69DC31BA6961AD038E164C4306D14993B8833EC19DCB8F0E9EF533E23BE
29CEA15EAEC1C58E68206B7554E27024DD93675C7C6D75A4EA001064E51FFF35
8CAD89402C88861E14FB8153C749EFC6FB826340B0C0A04553EC0635C189B38D
1104942605719411BFC91E6D13F4F05B8B43AA0D76D6098AF4DC566CBFB6DA6C
887DE4C4CABEB1F8DF7EE2A819B66CE330EEE0B1492C825FD863BEF1B81E421A
ECE13A04BB37070DA068139799BF2B55DC382AE95E4A6041F7F46D8AB9983CB7
282A5D2C110A71D946083263050E4352E0DA52EE7D4E5C2067E4206F8D4F86A7
1B6C5539F1870C9DB098488C7C15024C1BD50FFA094D5D10AA8FF004138A289A
A2AF9C1CBB2BE9876185F570DA6C65E675EB42E4F7338D69403214EF6B76340A
5B92C8963F018D06E45E974BDCB8326AFE2EC6F486E975C4C60605A5718748E7
E1CF7848B8F6D3B06B285C7685570D6C1B932A465866A691F43671BDCED35B15
2B144A7244747FCE5B0A614D33A1DC3F24F68D176B4DEA1757C79240E7BB44C4
56D293DBA777F1DFA6B28BF9F81DA6B624A4E0DE6AAE2F8ADD3F32E0E92EA0DB
0F3639576C814174E50F2FA5E8FCBFEFB6C9B2316E505DA6E57C12815A8B3C39
3EE0BAF86EAD77B8C2DCB664245BD068029B2B746D96C93FFB8E022C5F8B1321
C0476A656714ED4C9735FA22C0ADA2522E456CA5446569FC76BB5A21FDE26DD3
C4C5DE59422EF8E142BE3D0072F9C57440F9848E75B8F4B6AEA0AF84EA684685
B48D97F2A305D87E9BD5CEA39A56576E25D1036C245586AF74AA8B1FB713D82F
6952295A39BC7DFEC8FDC4661E3FD3C629322F9B5ECA9BF5FA18C8567FF5BAA4
9BC4E7CEBECDC43408215A272B383FA6306AC9F01CB2C80752BAFE105844DF1C
B6D1B134552D2DC2DD07BF3EF9B0A16FD480249D6B443E6E4A58E2F4E9064BC7
2BD190155412EB919DCC36AA95E8E41F07A0C000BE42EE55DA9032B1333396FD
E87D7B1BFA726C2F316F9231F8968E8F4B347E5CE9C7AC5DCB103A620D68EA27
D26915EF6E63927AFE19F716F0A7E9BFEB6309152A7C469CC61CE72659761B35
1E009E7799416F163091D8A7401F996DB6EF4F56F0A397B1538F212B9F9BFB09
BE2A749E786730F721581D687510324530F580047D855A554FB0D3ED5819649C
A805FB5E50514B9AB762D9B7D1680E9545795A6E62188B98F708AE74FFE681A2
8BDE0F6F144BE77E6683F4CE0748E460ADBDA59906295A0DE6D27259BD985D83
FBEAF7341D8E8F9CAFFA4BC15B304C8868BE432093A66BC1577A36C60CEA12B1
BBD66331212CB26CC7A0CDD6CEB238E477501AB13E1E61C4D0F92445C0A970A7
B6BE7AA23E51696CF25FE1EBA7D3A4C13EA54799869C4F5AE8F0910AEF667272
BFBD38CB4C7AB90F29EA9691547D4E09D95E359883C964C8DC6327F8F0B64188
7D2105EE4A198FAD1815BD15B36887868E5FF73668D4B79D4009E31FEAD91CDC
30B380DE234A25CD4976CC7634B504B04AC7C62C4E39D97AA3F72E1CC82A330A
DC99DC6BE5A9CE9BFA7EB2767E6A3B8C69842016F9D35295E2EE4DBD725BCFF8
AC01064DC59BF99C76A689F21392AB72C2685E4D91B39DE14FF7D45DF5E77B69
45789FE5B71A3009D7012EF8D109088448614EE7A6F7CE046ED18C154D6B04A6
83A07D42428238567A03518CA2F86565208A6F4AC9EA570700B5CA63B47D8931
B62D3D1BF8537CFC2B2E1CE69EF2E7EC8163C9C84991BBC6090E8F8BEA4EEF18
AA113291590051701F15321306CC25E723DA2FC41BC2BCA4F993F9CFE95F8284
C6613418D82007C53E7E8AED44588FC0B87C0D58F446706544BBBE666AA0422E
77FF094DCE449A7EE7C9ED43312773834D2D1FA8D21518B99B51025ECBA568DC
08CE34CB7B0B8449788EA5686D7E20A6A6600CAC4E40F57DBB751E599B0C1127
183EE23C6FBAF23892E81A07F452CCDE016D3F3A149E8B6A14CF615CC850B51F
61F067593AB6ACC77C243F00AE01B14CCA94C05AC840FF180F992C023A5ACBCF
80CEC83C4D5CDCE1C21AD64485A10570F0905663D65E81A176F77720ACE22C99
831E5470C9F7D82464945933529FD40F9CC3FF54E4537A88463C603D8F15C056
D29BE9F7FE9E1B64DA62BB4DD4ADCECC8A269023980FA7C86D3ACCFF4BE35315
AC3204AB929A18BA93034DE3D735CFCF96B0B7C821DC86D0976CC45395BFD698
C1795B5DFE0B89AAFB323B1D05FD995B8C8893A9EE42D6577449871B669E9428
BF8DA11CDD1DD5DC8C24B84138B959B5DD39450D6C048E4BFE448F1C094BC31F
BFFC04CD650B2096389A194770997C0D40FEF9704C54FABF85FC13EB3D8F7D34
5BF9685A3AE6C222715463BF3C01F88CA8D38C1BA3E71AF6168075370F0587C6
07BA697188583645A3089190E10359ED418DD3B4BC6D306401C7F2A70A4229BC
E010F751EB087A2C40D5F08FEF995E6E00287188DF5F2653C608EEC377218F5B
D15898023047236025BB85043E0BD2620B3D6CC62A7D2BEA147185D8111A0239
AC6BB895DDA42AA70EBE5BF799DFAB871EBCB92069C2F0EA478F543A6902D225
65A44D7D18531F9AE8E0655DBC25BD91047B47B60F8E26FC7E09E2CD4BF6B8E3
DDECD90FC80AA455ECB5CA322852E8A46605355A2ED7788536346DB4C76C4E23
B250B010743EBDA6359C19B3B62F28A66CB80F5BC8F426FC260ED5EB36B2C879
45114573A9A728438C736CFF5EBBA80354A5E61F7A5BC1F59AFE03A912FF4C28
E7EDFD02B452F54107B5A98F388495CC5E67B55B5250249EBAF55F18E7BB0410
3095F616D79FC29B091919836C36A179F34578B4AF254A07041413E9867B20C2
62D70204C7ECF02F2226D39DF2799110CDB43EF0E2143979726FC765DB9584B6
9F4D6946AAD1B7D3FE1E78DBBE86128CB8687F168514B6D1B68F821ADAFF3CA8
D44BD174D683FD23466EEB3D4A3DCB4ABCB34D0E2414EE5F728493F89B6ABBE1
729E1C43999146E38DBC56D784A3997623253B116F87B5590E3DC4E27B8D6C33
472DD5A8ADCBD159A74C135BDAC51FA983B8DC3332AC156BE8E12C08C359E834
7DE81D9CE04C5C360DD924807A0FD21BD47CC386719FCBBD9902CCD544831B48
1B0922A1B4B65FACE54D4E3D11BC4AA335600BFE97301A289E830FD42E4EDA50
B608901FB030FE6F7474A1F433662BE89B46A25928E48E975413B35BAE183AEC
8ACD2108B9351C2B0BA19312F634D0E4784B888EFCCB21128C2C2851E29C674B
A68E572E130213B4DC99A457547C59649AA37A0639136FA8D0C9C00A6912F91D
82197C90805C66F30DCEE727E88B0107967769BE036095652ACE1D8018F030D9
0BA2F105C868CFA924E29BB1C57FBE94CE0F7EC461A7DE66E95E99C1D994EC5B
7D317DF542DEE4F32C6E7A1C8A2A4629DA69D499EF88EA2BA4DDF809F9272D49
297E91B28320C71F39347F661A1E401A3AB7694F52C3561D75F40C47CC7A47EF
36EAF1745D27289E7DA76ADF17BBAD7C814970ECA44D523F9DF200BEC225E1D1
DF16D6654B35B65481622E011771D42B2753F4505ADEB696BCE84EC2081F8E3B
27CE154CA8633680125F0EBD8B90409AE9A80961FEFDABDC87422E893F1E8921
247F6B3E1452B144194BBA4C2015B00EEADE44F0EF66FD19708448AA6D38A49B
D6F9377D276968871DF72479ED48556F93E4DDE769181BCC55AADE6F4396BD3B
098CCE53DF66262C1F272987103BC5577AD9EE3D948155E00250F6E4F50CA069
5CEB0E6B33BCF1E7D591DFFE0C106CBB8EC62D24E25DFC387ED1F1BF87B56C8C
EB2FCEEC91D48CB64612F908D61E8FA694A71A0217C3BC54C1BE591BD73DCDDF
5A7A899B90DC8F420B12553DD6B87B97B5392A6B47D91716A698B6407CB7BF9A
F06A202F8736D8F84AA6C643DB9C9F7EF8FDCD85C76E1FC19327771FD469017C
57A318C7778ECE629F7B8026108D34651E77725BFCAB36FE3C1ADC7D57AE071C
07A3BC186A73CF335982EBA005630FECBDFB6E9C28DD8012F932EBC5F6C5CFFB
F7864BBB7710EB879ED713C14C402C0C5D2F5F0B291C9E130BEC79325365F19B
9C358324DB67136D5C21AA479B5B48F87BA86CA725DF76B4F74F26E3EC60EE61
801BFEA1BD4214C233698CACD70BC926D6EA8615A69CF98FE28F35A1212F3C01
8A75829C1B385B429335A9986E76529D4CB40DF62E68965992E75C034A4E1B8B
FF34718A4B2EA7E3D005FDFF853D1BF2DC5470C31F48D49596B51684BFCD3C6F
3AF835E09C80BF018662EBB1F4227A8DD8D019F4096524908B7E1857440D339D
AA9B149E5271B8432F6E884B0B197A7814E677EA688E17B569BB9D1B95DE5A03
E4F17831BF5822CFB675701CD5178E9737111B819AE72E3ED8A9DA09F260A019
9700A693BDFF60C04364B39FB287A1F2273A405A0D8B1743D412BFD928D38EB5
690BA09D7234329186AB798F2C0DCCFA2D05326E5583C7524F380800EBBB793A
0B71577B0C206B73A4FD83C14E6CB7C6800459175C8FE85B348E6D6BF4215B13
346D31588A12BB54913F84E1F0F840FB16FFDF6F03D25F6F0F5188B8D871A8D8
82959C9892C77D5DE3F85AAD82E7969EB5BDDC40CCE1F2BA016B2B0D53EB7330
27D43610442631F34EDDE1C499BA101D3CB4F98B70F574877D0B6044853C5346
E377AD08236F07B94AAD11B61CC4A2214037DE325CA5038D68B32FDEED2BBB9F
534AF6DFFB75047DF3E9022D169D0953FB5BDF7333EF2560AE4A63D2DD6175F1
12B783BA6AB67D1E4336905AB4ED8502799C5CB0EF77B7A5DADC68863BC8449B
B314BD68D94421D7A0F78B0DDBE573386E32654B805CA467F38A67E8AE360BC5
CD84E856DE9BC0E0DF1429FDA982DCED04A35359441974016211829737F021DA
44D4D9D9A8666A8299D27CB114BB59DAB2C948C41CF210D1B781BF07A329A39A
BEDFA8FC130C9720CA1CCE38E7F02B49E17DCE093D586985347BB3B0FEEABD81
F568F10BDBFD9DF6A4A922A23622C21BE4C2B6816A4444764D626F0040747107
18790443228D58917D557E785D5D42D87D69F53F069BCC5E877338AE591F2AB8
195BD626130A1B81A78872064FDB1E2BAB5A3DD49BD6043571CFA936721DC3BD
39DA3DE832AB3C2DA6C16FB0DFA3B58344D12AC9B2E6FFD3B6AFE82C5B740621
D8253528432DD5D37C7388627A91C7AC6A93F02A2B7567D6497472F5B54CA305
1A708F87D5D404889907B23F00D4F602959FEB8E3FDD96DE89740F8417C51D22
F0DF70E4744ECC918C2AD0A01F59EA5C9B877AD453270770C8F3404476E464E3
CC456CE702B9A06AA490178EB02E9304D285706290AEB147BB8FC7C0FEC748E7
CCEA004DDC15908B0A9B93099ADA72FFAFDEC7408EC7FC462DCBBA7A7CE7925F
02310BAD7F92E760CC30911E8F04A79D4F53A083255F82950E3C2CA816FEBB4C
E165EB64F87AD3FEB0E21EEC28BECEF3914AD51DCB0D5AE1918F17205893E05B
801C441997D5057585895F94C7E0B0123BAAC3F41A92E16F98E7AFB4B9A82E55
8E700E6262444BE20CFF7F3CBBE7669647B39D5CE973BB06E726DBE5A541A81B
2BF2D1DDD3C5F1925A712F2F982565D10F34A15A6F16FB41969233325A297AE8
52714A648F7236C27FC7062207C33613129F2FA2BA2EC2C09D12433E660888EA
4A1EED8BB6A121DB2B022566789949AAE5647AA43306C55F253D7DF592359D67
3C7247749AEE2443E4D6C17B06EF3820398329799B351145FF687FB772082DA0
6E5308CB6E4B1735D339E708F025793AF97A9CE3BF56E27D247EA79DFA2151FF
DC5412C54EEE883168B7B2DF4BE1B607AD3D7FC29A6635523A30FFEF09A8EA2E
06DD2E437C122FBCE490178FA2C2A08EF54F91756DA75A3098FBD4BD4503A23A
C6682433CA1F56AE160B33397F8D8B13D7254A17EEC1E93F0E88DC65E5963F11
7BD7DB7C89473BBB4B52A0F68369AAF4B2AB389DDFFD9A559F04F6AF1AC732FB
96C157244525CF5F355E537ED59249C2FE33BF71E2FE57F569F99EFD16A144E1
FCC42ECE554410D27AB6615994E81E8EE4E35D0DEA872388F1EB692BFEA67B11
FE3CD9DD8670768D6640381FB75673C76F8E4880D1E375D192B33FEE92536D6E
ACBD5362BFF03E235C657ABF165312DF2B773FBD4E17081E495C87DE75D38FF7
3B4E2179C00C4A97A7E684D26F22FD73395CDDB13DD3315AF21288B031510100
3F7DE86E4B507587BA9171E4C9DEB8A3FE5AD5140A806FE3DC2544F6A2CFF011
55D68DC9C8CAF9CECA7D93A2994AA78B5F51A3A3FEC469006E67898070C7A52A
4139236556195996B61ABC5B362B21E0AF3A5D0481BC391C194B6DA89F60A333
087F264F76A5963F0D972E5CB837DC871A15665BB440A0A961A3BC6921CDD7A2
A5BF4ACA9069DA23057E4F2150484F901FA170963F05C18F47A163886EFAE0C4
02B4F565EB50DC43EA0614AEEA11068E1E6B874C2B6122A3D2553A08C34387FD
C01EF19C34C9A605029B03F044D319DA5A09C396CAEF7E7974138AE91BD5A491
26568F6C6CE3CCBCAA4476821CBA98FD3AD9D8953CD06AA0E5F29E399B84C80F
8AF8B5A9DDB9E76C7236FF8E86C74202B6F50FBA64127B71CDD487C4D9EF2C6E
EA268177FBE70BB096AE5F99A10FC744F08CF77AD171FC07FACFC7BE56F1B9C4
93B37E6E00ACD0E3656CC4E3089AAB876B50A5BD6D6BEFB98F1DAF57B1D1AFA6
F9E884C464CE0B82B0729E7E03FE2A5A3E23C86E6945097D66E7D26619D78404
B6123F25D2E5978D98E83DDEFAFCE9B76359930813236AC007F7EFB36F6144E0
2F7A25A9BE0A489AF513DE537BF217AF46094B75B95ED468151C3297CE8794C9
9F2D2DB9FC34E56EA5D391D7B66DA37A1A46EE820CE8AE25744698D50965A60B
2F24292438A61068BC34809742C730A07F15CA3AA8F33655EBFA2375D4C9A4D4
B786F88F08AF8CC12E2DD4D47F64BF64E25EE41B65FC873FA6B00BC11C92633D
F424E8AC8E37490B5D510AB40D02F1B56EB8AFDC03CD7CC62D0A4E8643C5B1C1
82F365044A1B2DD315DE71C910E39F8E1B30456D3165D6FB88408DD67A05C753
8540BD2A3B62F56462EF0D22C3E19FE4104A1B595A46DA8FDDB20884A3108D50
1F06AE6B04060B4F5663F0F54A530A75910C758697E2D32AA9542C9B2ABFF7C4
D23E6D1EA0F8D7BC774D35E4C63B51CDD74599AF4F1D16EAB8195023C9856801
BE161D1DACE931E700EEA55191A8715791B88100E42F411BD21ADA99E07FB366
764616479DD381EB85CDCCF92239B5ACE074F5B3193B1CD422C605740A899B69
A0A50B6DB66B018E171A386816259F57FCAA583886B1AE89F3D97418F7D0E1C2
519504B2B8AB98B391EEF90110445A0D07519ED4D09D56E20F8673FC9713D49F
CF0F3227E9DCFF1C229789418CBCCB191DD30B99106C15E8D44190A70745B84D
955074BEB5096C1C6B81C03E9EF084798C420FC61AAA864703D23D076A48FB02
0064B24A84D1DCE900C7E20DF19429762BFE3862075472E34E448C3CDAA8F584
ED2768ACB519FFD315987AA02278D2C4BD41765953684EBF01673FDF2C67D635
9E096AC1F84280BCBE7310619E44A583C486B8E12E0513DA1D4F13B3C82F10BF
4E11DD35D1FE8715664694A8145B91036B5976507794A5083335CB30F2A215A8
9FE1F423589308D69C61287298D47C6C31CE04A061972D50E702A75A06CA20BA
AE198B481CA004F10AA59C7F68FF3E01F963DBC60CD51D33B532C2FB618488A2
33E7D4654E74F59CB0D67CA7A46C6CB59D7A8BC1EDC3ED953929BF8E81B8F677
F80ABE76F4549BE60E13E5B1A27C901D7890E0163B3A1A321B4ACED7E8D34F56
C46049E97EDDF8C3C21E5FD26DF1EFD62E748897F222A1D2C5983BC9B60FE772
37853F3FFAF22359887CE8299F546BDAE297FFB46ACC7954DAD64D11BEA169EC
0B4F94FBA9C6670FD8DAA75D7135C45BA1E3956D03C7FBA45C8DEF6A521E6796
F183B6B4B7B666529E4AA4D10D645BEF5A02D84325590DA287C299189F32A05F
88B790050E9985C43D198FEC92EB07F74687128407F15749CE09DBE7063D683E
4DF1DA76636634E040453BA2BDF2EB908D91B245110323C34F280AA50D4A0CAD
B27AAAB745082FB21F97B35E4B1AFEE51F2B0CCFADB327CA1DAE572C2F677715
A00290318F041E2D6AA937E49606747AC5BC3129CA2950C7ADCE45CADA21F984
9AF183D514B9535A143BC39913D652D8BFF14051B4F11486587FE821CDE28292
7A597F34145A1F1798896367860899754DB7B2026DC49845870338E4435FE158
488679E7D12B768ACDA3A910E34FD0E765DEFE823E571AE56A229CDDDDA413AB
3B093392B0668CDB2BFF5A2FA5E5B8420D89359ADCAAE40D988EB04AB6359C45
A2A22FB64305EE9D536F63C59A13971B42ADBBFC2F565FAA8C168E72911BAE87
2561DF5CC957E397BFB5658EE918AD760635A449AFEE663FC44497EFB5EEDCD7
9F3A76F6815B79299B5C0E06C5172B6313E162ED76726A107CE9E15E1B72BD07
29B1F07419D56C72EBAEE625CC3FDA6FE0C030C8AC9C65ED86F5A95193F2B225
07876B04DE39EFC13E487A0C3611A324D5032056B6D89FF65590E97E7A763BD9
9C1FB20BC9467895A4C7721B76283ECDAA656EB674865159247546FFAE89DDB6
7BB6833FFEF1A829D9C44BE96A1A7253CD98B5BFC1CA02788B3EAC6578F74404
17F13716868E464052887FB53D15A956915C6DC840E26AA1874A120681FC95D1
1A95F2A23142AB6A4A771D847F5E769E55E5498ABE6795360B45D50DE801D18C
6CBDB7029FF0A420FC7490CA89FF5D28712E9FB00ADD47882CEFB3A7BF7B2367
D4AD585A590454C267EF0A25C1268E6ACEDB543A09DBC3D2D6A9BB794BABCB09
0913684E3B8486CC7E4AAD358C36DFE4931F7ACB68A746C38EBE031AF97EE46F
650BA230D964F5D0EAF0D31B51BF982CA44DDA9400BFF49E4EC279FD294A1ED2
7B9543C6B7B6DD5C44C3DF6FC9F86DBFD81F628A15AFDFFB20054CB6B225AA53
06378BCAF4935CF5BD9EA83F3B85CF71F3B395E17E7E164608338FE09327A62E
2E2117ED282D4B8568E4DA882423C075AB67FE4A936A46386AC224BE15B9F247
48B65153A44D9ED94EE6020F4CA29811840EFDD3A63C2EBB1E243B00C3C77810
AD5C4AF099055ED0E9982F2FE83ACB9765653C8F0F2E1401ED4D6BBDBA673D00
8EC245E6CE207CFBD0652DD0DCB6A0F346F5159268971577D8365E58AA7BB9BD
BB7D8E16A4AFFD2E09CEBA69B0CC57D1026373337A16A2141775A76CD6BFE715
7E0806F00DDBC824161A641F8D7892EAEE8F443D6953D770D87E7BDC90766978
B7FF7F7DA8FE8298FC37537CAD38E6BF157F1EC5BA4BEF07021C17005FBE97C4
BF38F24122DC612727985FEF45F76C8689E47E2E6101D2CDDFCE0F217EC8D66D
B2DEF3EE777D0BF3297C5937C264BD2BB65C137CA27ED576FAD7DC824394A743
4CF48783A0C809393DDA2ACA3701941B74BBA26780B8A5670FD7CA2BAB4712CB
D2F30EF4982A4375D971FCF3D3678EB9466455ECC963927D1BA8B823F2E7FDCB
D732EDAACA572AACE38263AFAF28811700503814AF1238343753A847006EA6DD
3A25347DA264C8C879D76CD8B5325ABB90C1234A8ADDA9780BE108B73C18AE16
7C0AB290B3B13EF6417B57D389063FECE4DBB9593B42E7CD364286042CF5BE8D
B9AD5766ED8FBD7F135502565D18099D4D85F287F774ACA27C64AB34FB3FF102
38D8DD61AD606B6CA18AE98E30129DC1C4F2D23C7524139620B4A37164CEE731
C35B86629A18AA5429ED39CDE41646C45BE57E96532FF9CE5CBB41FD1F0B4838
B591DD24962FBE3BC63D7ED16C27032326B096B712AE0C68746A9640A9171F88
0FC7101F3FD024C7FB7F5B8ACC2925DA9E620DA37090A3190D142D64ECD9B117
361486A4DC76AA57A3643C15D59BD1B60BF07496A32DE66EE4EBD6737DBD426D
7FCF8BE488781D9FA70F11CA37C95F73948B78DCA7FE878AF4C0A923BE2AC550
F0409D6DC941982A9460990B0EF3BB2C283EE3714581CFE9F6EC2181F55710E8
9975EBCD9864ED4ADAE55B01BB4209EC6F1A6269028485A4E67C484B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.0: CMMI6 003.002
%%Title: CMMI6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI6 known{/CMMI6 findfont dup/UniqueID known{dup
/UniqueID get 5087381 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI6 def
/FontBBox {11 -250 1241 750 }readonly def
/UniqueID 5087381 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI6.) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 110 /n put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFB83E8A2A6085DA11
61B1632328B94B21D3CBF2E7752D441A2C9A03F6681FDAB37C4B67D5857720F7
0C4BCEE266586738012A2237A85FCD0425DA7E8E8632543F5BD5D50F9DBAAE69
9E053AECA6027559DE42F7291EB381D866F1293107553809861D43508C6F2341
5E4FCC431AF4A9B3660386AE63E877DCF5E513D0D5702B98D58B34897FEE163A
75CD6F5A2196F91CE5060CA5E72F9C5F79D18F242EEE58135BFAB02D5CA430B6
D1B9A376849751A45E52577B1810C4F0C7F6C8196071D5B08FDB731C5384CCBF
03B460347E0CAC959E4A12620B6C2ED62E06A241D1637F418B5599A7FF3C1390
7AF66A00F7C31B4EDF249C56C268EC9D546CD0489DA51B734C8292CE7B3D9E30
71448C85ACC64FA99B2DEA91AA4CBCBBB9DE20833700AF96395DEEDA3FEB7D6E
D6E3BE4A62CBFA18BD0471C14F3A2FD025C88E8166A9830C5B5B94624A3D6482
D1A1D83805D0EDAC1C79EA858A523D9FA3356DF42BC01886E77F6AA6B04E4E3F
AD107D861FC626F0A439BC3F125D48649E5101BF79C71507FDACACBBB4C4335B
C41A5C15ADF1DF69E1D68C3EB9BE30BDD5385F81D26EC8F2F206C1C7032B9EB7
0392BBCA23B4693686AF8D2E1ACB2FBEE81D75667CD1DDB906BC5B675660ABA4
E63429F16623F20B6A040E4942107CCA26CF6C1F52DEED9EC7EB15BE4F18F2E3
9ABDEEAAEA9AC41E9F20C37C54B33F609F5835AE5A1EC9D674DC50FAFF6D3511
2198195590F62B3B8A6FC8C3431BB8895A2F910F0361062DE32CDA9A7F41E761
B09BD8545CAA2D7124B5688B54705AA52E4716E36C0303FEAD38E0510B3CB496
6C30B115C37E02043D47B4ED796C671E30360800EC13F0F0FF3E0DBF5A642396
EB0F39A9DAF0974678EA1D041F08BD73867065DA91B044EF2AB15FAA6546031E
189936C1FD302BCFBE55EAF369DBA4895DD0996BF7292762551A86C8A3604E9A
8AD29E38BF6FD40172051EBE7C694249F3378ED0139D37EEA3ADB66F3A80A1D9
9C3655F054CACE93BA4AD42DC78A03F42455ED1BD5C122F234F21ACEB8FEFF9E
3BFE0DB2DA6D368478299ED63912A234ADB1DCCF1E519AD20772B71F8522B5DB
24E9658BDC1333D76F07F63D81F7A51D12C445ABF698092A24E5E5C36A52206C
0C41F7DCA529BB0A4D146DB6B4B341459FC17FFA357CA5F93DBCF30B61374613
4846D619423BCAC59B7EB40C14C70ABD985754A0094C98350D01FE9FA371B0F4
38884690DC7700C49236EF68BD6E806E8937AD8B77648F552C0C907007465A76
1475BDD3FBE1CF69C706E703226471C249A3448F81C240ADBE4B5474216D0235
6B0816BB6935A2704E851E20C002F85B653BB0700915B358DDC168ED3FAE3D91
8280A5CA5C2708D622B03DC47A70E5FFCAD5A7C8D9AD563857BBEF92A3BDB588
8B5B55CC9B960F20CA4AEB598DA8488004DEDBC9671488011E836D9D8B6251BF
256D08E6F1808E9D498449DF1F18E48B310D561D4DD3146C2BA64D960E66447F
6DA8B07194E3BFAF662C00737BB7222B55A5CC206A1C46F252ACF93D2063BABE
2BAB874C01AEC438D3F86AE37C9D7FCE4077F5B5785E12C1E0B685134CE2E8A2
2E4DCDDAED2D53D13014E428FAAE22447763D4693E82600F850CA4A49E1ADC5D
C8DFC16E97B9F6164095CF7F31373B591F815621F45DFF77BFBF89EF60C9F50F
0C2FBBA4EA9602E197B9447FAB6AB57B19B1C801DAB66BF7D263F6572B9EEF88
E06744C1FE197B8EAA71E1EB67716B7CAB30C859A2D1B2DB95ECED02B83FBA32
E62F97EE4403FADEC936CC8DAA161F7B509B2723BA2B735572A80D7D087E6395
6A9D34D5963E3C6E37F307C66D1CE551D2F055BFCC7360FBE93ACAFDE2B1A849
37FD373F62BB23C1A2E3DF61C9452A8C995B03D44D6210A968C6293B4A3BE662
C7B0B59E6EF6D53FD293B2C290436B0C448E7D15A63533DE321643E53C85EF8B
060C434E46A736EA617EA00D185323460E77B95C49070B035194A2E7693C3B15
104ED7F56FCADABE49F27F9A576B354C574B5BAFFFC57FE9AF02FBD87B8874A1
24C53826659BEB1EC50446AC26EF3A95877ED3D81D33A8BC1BF7473FB9C11ABA
0F27B38EEBDF77D3D3EA63AE6022DB0D4F1125DF274B86EF0A4A263E108D6044
7A885F5E87362293A53F457CBA6C911D23653DA7CE4BB7D4FF4481AB97C0DD81
C13515F0E3BF8A7E8DE2CE69B25BA9C185D9BF31A65DD290B0D4FDF40B61E2D9
AF92BC6468B3F5AB5D5B88710C489ACC69198D697055B39AB3DE8B3733825C5E
6E763E2698574381A01352A7042A36EA96D17DD2EEEAFF04ABF7BF7D877B0FC7
B6BA51BA994D431F472B6EC4B4C327399576470A1773BCBAC61CDBF0F95DA6A5
0BE5239B7E9CD39E1E4D27EF6695D1FB56D4CA2C2370509547D6D01273CBE6E0
66A696C35D2D0282CB8C85D7B1C51453A0AD0BC80E1D183D11AA78879643D9D9
A3D0B2BD8EE3EDF29483CC5871426232A20CB058EEBDAAED85378B163425C270
B0F7BB46B7D1B89CF84E6A06791195FB17F11F34A2548FE424DE10E376B39A2F
DD9B0BA2F2FDF3ED4AACBD0D60E67C0749D6DCBDE6E79041398DF3FC8D9B6CFC
693B870683CC425C52705902DFD324E157C9829F25B14A057AA92AFA17F156FB
0BA949698EAA0657B03D9538288D887959EF24A427EE7EDE47F304A1A6A715FA
2966273831B5B3A9C11021C153E67A73FA606FE3233C3DB217404C6AED6A4C59
DD4C2A98B31AF5604D8DE8354448B4CEC66022E756B0056CD32E9B002ADC712C
0545C2C16D9457E271D98A4ED7DDE01BBD1856F5C3DA28794D2C7951FE2FE6D9
18643CEEC41CA4A3464D3D3A102653CD6EAADA59CDD44918523B8811C2ECCABA
AC0D188F5E07B37AFD56006B10B32EDD179F4DA693EEBF4DF5425D996585F21C
8780A4D23D24FB0618C12DE65CAD42A0138E28A100257978EDCAD168C55C6F07
78A067F0299890356C2A184820A554FB07448395ECE36C45211757552E288ED3
7DFE46CB92EB2070442AFC85864A45000C4854D728096AD3D4C552EFC26DB6B9
C340358451B50AF9F1B35C2E32D495DE85B5848D78940270DEFC07A14D960730
878B5B55916FB40FD805116C9C2AC8C6D4645DA67A978F1C6FE705EC188DBF7B
FE7AD6769F2EEC4A9B05306D5BCD6EC3A240D6A29ED07D1D82E697DC8CC391AA
015DB6BCD1DA5C9A5A7BE3C5936681215E859E9837027D108A54F42AB24E38C2
4A7D8CF3264AE049D4B1AF48BBC564BCC88AF19D37DD81CCC431D0C554DF29A6
94ABDF8126EE4FE1DFB78559B9BF36FAFEC9791049C865694F9E2FFB7A308FEB
EF0195FAA6BFE7A081B65C5125623903828372F117EE17E588B2FA26DC9AE37D
9A6F0043C019624D3D87AFDB4B90C46AEA78919CEF5D7ACEE316F30EA0229742
55E02E0E2533CAD78CE9BD6E0260A695D776ABA229D89CF9BEA92CE0397821A8
830A557021B3B90CE0B07A4B34C24337FA3FA4A3728B6E013BA01071CA7FA667
6FFB4BA3A28B5D5614ACD4E80E00938C2589CC6CF885A260AF7589240BF8987B
20A19FDAC73FAEEDD93EBCB3D46F735214164AFAF1A7828FE96E2BF7CE1EA46E
FC1FC4527A0ADF2B81CA51E3D96F3E786511AF00FDDD9764CD3178362CF9DEE5
F05D100EC21A301F40FEFC3EF05AFEC140A9466AE68FCFD6CAC1A143BAF2B7BF
D0DF808F0CF87FE2399CD9D2DD424227CA7D4073ED002CD555FBE8057A797B60
313D18ECDD779FA7289D4E7BF82D95A7535CE3F0F4164AF239AC666653736654
C13E436B526EC5A1DC97E1D85C4EB563C7061AE1E81F0B38BC45B17C15FDB0DA
E5F6332721A925D4DD5A97BFF3E3F11D4F4F43BAE4E73A294D314527397F03CE
AFD12DDF9D07DAD8D6C8EFAFC2F52E20FBF62026810C0C31A1EF71FBD612654D
C68B7A24112F0ABDD20EFF3DADBE447AF9CE568F873ACE72B63283CB26B89BED
4B3315F26084453B1EB0877065A76E7B704B27F93DBEB365574A78E92FDB4B82
D6ED91A1728F571FC9CAB636A6E81D0C1C4F5E3F6F4574B6EED48BB61EFDDC80
1831E2AB9327B37881F0CA5D5265575F210BF4BCD8653B4193F74E3FF65028F9
2968B8127C68CA2919DDF529EC882EE99901146CA629A07B4DC59E7868DBE083
6E546C5769655EF6628FE2EA78AC891D130108192053D5056A7BD06C09592AF9
6310B3586A2609DB94CB0079550358F5547B9FBB2B77917A327EFE3F972C7263
54076627B4DD74638C3105FB25DA246484799D5326EE80503F18672B893289CB
1FFF8D3F662FB33E93025D86803551A8A1DE363D1534BFA3EF968871B19FB189
DAD841C177E2AC98B6B69A78048221C5EBBBB86511939D3A9963B3BF021185AB
0B26CA7D0A779DC2F7693C7E48286BD60EE46615E31B93FB0E6992AE20C792A4
72AD6FFAD6682D0F606807D7AE63A6280B5967FAB889DCDF0F76347CE302FAED
A59E1B1AB785D9D0ED695A0D05DD3DF0EF0B275AFCF9EC7031E1357E99A3DB85
B4D137567875F7580E2BEC96B08C97ECB40876000B610E0BFE81E7884C9BBAE6
6BE9C2C612475396BC10EC7FFBD1118A7971FE1971DFD0CB677ECA65DD837B5E
C7D36FE9F20A15A941F1E77C11093C902DF5B7639580B9C0E4AAD13518E1901C
1162FA095F301848770C6C618E371A0AC3463D0D94221EFCC0884B21300194B5
97E03BCD5C4878CEBF352EDD1D2173B56C9B6A08BF3F33419DF226E1633CC5CA
A88A57AA85E21657569916E9B4B79E51B5535A57B2D6FA3EED1D0AA32DC0165B
12F8F5A681040B456D8DF175AD6053A2954F327F4EB4CD453A056FB1701242C2
59755058640C62632C764E002CE928E6B908BB137C28630A3CDBC7C34CF2B643
FFAFF20E345A86F31756C78A8EE2B9B1C5DAB2C863B29A44190770FD90BC6AED
0C25942BBD6A370C21650947B49AC8EB6825BE65DEFAFDDA32007754DFE0273F
B995B8986E505F95E58A3F8873545DDA6F3FFAADE992F3FF7B2DAB76D663280E
CF2BA18BC8871A7C361AA3600B192948CB918FEB0F2900AF2BCF169576828325
449CBF0C7AEDC299FCBB061F491469B9ED1D56771A03F9F202550E17FDB15B51
4772B2F06E6AABA4027D13E8730999532DB2475630D2F8EB98242E36F5B45A94
2D8083014B63A806BB9A01906143482C614B5CFBE8C5354A3F2438B2160F6DC0
81AFCEB201EC67F66DC5808C907A3C6CB664F444D24095D9A11D4978A7B57037
87C67552FD59F5713D0FE03462F9A1A323BB3EFF0AAD61B1792CB109CA9AE4D4
D7F7FBD3FB91258DCFFB4634669FA13E03C0AF699165311CBF37D24378022787
87D1320ECF878F859149B2F994E700A32CB7253297AC58753E4583A08A1F83D5
CBFF10F2D26D71CDB20E1C69A666E9C4D23BB0E6BF1097FBBB204EB736E61FF0
C3FDE1986938F8099694B9F998B3C735770FF21F73B1A6B750498BFD21184F11
5E6AF0F1FBB08EAD436C4AADE1E6B815F5E58988C113B4B2335A340798BFB201
40586D0BCD6AF5A08CE9AA042910197F47D98CBB4411A6D435A46F46B3964F85
032D7F8D880732276A8FD24DA772F642F06C9F3EB4C9090AE4A3AAE67D8768A1
7B2A57E15B7FC626450372F40E3EE28D8D997CCC8CC89C644461D1110740407E
F6D884A0503E05AF830994AD0CEEA924D935749F6EE9F2DD65A58ECD59229918
A303C90E19E9C411FAF24AD5E9B786178F8182692CDD508A4755123B4A594AF1
A8E7287456C1CE2CA485CF4CF9DEE5238AA7328DA204816F98B7EF49EDB30875
3CF8C48E0465BFFA8F2A1CFB6A8F165B63CC80F54C669D02BFD9A0EA0FDE2B40
D69F0101AE4D2C10185AB10953019FE7D373BF40C2F6D4E36693F118866D1267
12BA7987ED4313E8635DA02A4FC1F7815105F8EDFE8004A8801CC1AFA8D123FD
1768A6C39E838BD489C6BEFFD3BDF650DF48D5F8D99DD5A2E8AD235F2CAE8BC9
C13AE9B214CF3FBFAC7BDFA54CB6E675273330608BD35600775FFB2A96FF648E
DF55A78B43CF54CABC0DA8D574CC5C5C62E9D658EC62035EA5028767749E48D5
658212BD39C7E76ED0C6F3E0A1D138A0DB8BE574987AF1E43070F1F12C560009
F48993FAC935EB56A5793BA13C28293601D268B4880F9BC33D553FF3B6A7900D
37900BD3B4B558C84BBAB09B4BC2B14D32E49596DA090E586E28D560903B9744
7D014EF2A6AC4F711A025DBBC841F1C1C93BA1F8327DFE33C803A0993050D590
C7AE262261DB7D04B9DD91F89927161A69E14BB2A48D29578410E312A4793101
B6CD65B298988AB798F45B76E1F58BE24DB207C7E07014E17525B436D41FDB28
D1072CBEB526E17C72DDA00ECDD06394940DEE8BD02CD3C81BFD12BE0568A459
0F53010A0655942C932905FEE87183CE357887E2ED286DC1E89F2F401CDDDFA9
B418F218D4115043892882C09F2E3749D4671E75AB1AD01C78F59FE3F54276D2
A91512C21C68180CCC0E147E834002D7799FF393842CE88BEA714672E1952C9F
7CEF2FD0115B0E292079909A7775769341A7888CE6063537ACFF225B4F396972
41BF46C599D278906F3BCFF81DF941BF5888DE8A53CB0A2D71610CDCDCC1760A
7844F89FCBB892AEA853CF5D967648995559EFE852C95D2EFDA2CF063500F88D
2C83B615618831267BD8F5438DC53C6433CE7347E9C55E103B450EBED6229219
20E979C00B0B9D86345FC3A8EA2B049B7E148A7AA1C859AFE93381DA74CA578F
8FAAB28175D5B57F6A74F9869B2F530009E953913C6925D0045CB2E817A17742
3C5B7574E9BF3BA7B769C161C2496EA2D346B4E19E434120FE92A0ED3F4A9ACC
A8BFE55F04D17DF035D01FC0B06182D8C27B6D32F36551B9AA56D61FB6A34254
D0DF918C6716D8D05B973C8BAD5AD52C06EF3C6503D4E0F7F791511C79AE74E4
4B707612149D583C5D96E534CB45F1E7CA5B23642B1BDBC881FD8E4F66CCEE96
7CC0509B5CFB0B3596682A81E682DAF6AE58F605FD7A1F414F62572298AD8491
B76D0A23B4AC731FB8E7682F506B5CC02F7029827FFD866EF4DBF56E07E7743A
D42CE65B38EBDEA193CE5B172E87DC88452C3DE192E363EB9DBEC4EC65F53002
BE9E94180F73B53CE1E8EE9333DC86DF5FB2561FA1F9B2511962CBEFACA739CC
38A286651CEFBF451FF6568CFFBA8AA68555181147C1CDBA18C4F5C77BA8548D
2B1BA37E05EAF7F69879C3ECBD02783028CB1A8649842EB71023F89CEB36CEEF
A9B04E9ECB0577536B88ECE7C1D81B0D6D5A478F8E92DF83D194759437088D7B
E93C6AFD0CC6D568E60E2F1265A6613F97A6C4068C8EEBA70F6CC4E88A80F65D
EA7B498395390A74BA57221B86611D3EE5DC4632F139CA8A15E5B9D2DC97088D
7CC65197CD93F4803BE4246394F40EDC2CB4904BC273C597F13C8DC680245A3F
F1AF2D7BCE5D69E9CFC81E5E9F46927C5F55C719AFDB2CB1AF2E4D55B0E3ACA8
6BBBCF253CCFF8F02B8542F296CED0EB8A06A88549DC959E22C3D6C48F310452
22B32C44B046A61A4F7F8AED613DCD3C464DB2280D56E517CFD16DC32C83EACC
D3E936D2F3A883B265444D818393E30EE3AA59E6FA73DDC421F5A0FC8442F89D
CCE98189ECADC080F1973E14012C2B87F6A8289D7E1B8958E2220FA1C68EF82D
01A2B3516F320EE84950A6A54963ECD6F606EB5693F6A0BC74CE2B5AEF26AFE6
7BF5D5357C3D53CFF50F60599F2165B6E742A331B47F46D977FC721867EC9CE3
7E9BFA2149C9E3A47AF0D0EDBF29C1E6D92BFBBEB52F816EFDBA9CFF83AC072C
5FD264F8F24CD5A1C0F68399FF4B29FD77C4A54D8296523413DCE938ABBAEACF
072AE89B1CAE513DF9810B85613549445F8E854424603C5A41EDBB163CB453EB
25FA6960DDB94274EE803DBAACFDE460906242B2BE4490C189A50C4A3E4EBD20
03DF730C00B53D3292C2FE93C0E24B41AF38F4818C7C3BF8CD9086DF5C8D66C7
63A9F39D48DD742378793441D86460571C631EE7CA4FF88541A127B72FD37BF1
AE78738E9FF649AC31D8F038A43ED4EDEB31DE6784F81211716CCEA4096F6E41
6213D58C61C5C43CFA59EE91DC6C46042403B000F9CB1513216BD494E269D168
E0A8D93A74701386EA042CF425B5413673EE94E630F85B34A20B0918274B2705
BA7AF9974D802919B4ECF77F5E4EA94CBD73C537C78A00F48AB4F063E9AA8EC2
5A38195B110F359E750A98974F003264DAC21F0D026EFB5105B74D00EC62CE4F
023C7DED6ACEB39BAA5AC885C23C3A86D69B3114C450BA9A7F25D929197B393B
EBE8D3B5E719A1BC59ACCB18B2D1C0017F205712846EE091E1EAD6CC3F98A773
603BA5FD9935AA436CB0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.0: CMR6 003.002
%%Title: CMR6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR6 known{/CMR6 findfont dup/UniqueID known{dup
/UniqueID get 5000789 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR6 def
/FontBBox {-20 -250 1193 750 }readonly def
/UniqueID 5000789 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR6.) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE339BA29C1C6F656
1DEF13780383DAE38A868377CC7D396B2A05F341AEE0F8BD0A0191F51AD11A4D
2E927B848A1EF2BA15CFBE57A51E3AF07598275195C9613041F71C1AF39E61F9
EFD5F6512FBDA76E29DE6B508F62F5CF9F73F5288DF1C7B0B82C92D3B6358BAD
EC3CA20BDE55DAA7CC58004AA86B6CBF8C410D8287E88BF20588A39309C2B703
CED322F030AA6069869064486CA651DA054FF3F5E56534CA358B0829A6B954D8
9103436E6B06DAD1658BD4A95AB41343B01F5866FC87C4EDFC71F1477C98F8E1
1DCF27EF743FF90BF918AB8C4E5AC35841E2F745480E5EDE1C1DEAFAD8D0018D
2C1F1CFCAD9F6609859DEDFD1648A6CD23D8ABB80747F94899F17C8F3E6CA55A
E176F19CDFDAA0D7C920B3A72051A4745560AC81978C92459EEE5AFE85AB247A
32981139CBE352B248F4BE5F73503A084A3E91F05328EE521D9669E44E202584
5407E7846F9FEE3D54EA18FFB144BF2D6803BF65AE402034B3CDBB40DD24217A
3CE0E95E2717CACD603A958187C42B3558AA38D6B6390EEEDD396F96E6041FCF
6F8888221AFA87EAD79F46E0E32CAED91E6C8500879AB6E580C581E8C8CE9B68
2BB5EFE2604E8DCB2432D39D75EE556969F1B2FBDF6A4BC72D106AA7CF22C268
464027898B311613E06E1584707F262F71D9F49D2149306A88E02BC60BBD6BDB
EF41D90F19197BA9AEF32B5E63D5B9FF41B5602F9F786E76621DA54D574981AB
87A72081EA05D6C6BA940EFEBD0904EA4E77BBCE17E20B42E1722617E0F6EF32
F1ACDE9D758594E9C81049CCC10605A27C2A06872FBA9F159CB155609B496ADA
4886F478E44029B5E620DE8319E257697E93E1CDFD27D560E2E4D34507020E2C
D9FF06BFA14E056D81DF701FAC3ACE4BE6C098AE116E079F0044391EC1661F6E
7A93B9320BD7F91E8FD2E8EB3F5CAE997D5CDD35107A1D35302260D1499B8B65
39625B7925F97D917B66BAFEEA992873F07220714F192839948CEA080BDB9A03
77B9DD032273DDB5629CB28B5D8797EDEFDBC601823E038384C90C79012A7D96
8F27784DA15BACE21501C26E3AFA5DCCE81B52B0ABAF71A35D33103EA86F2415
A39A830D559C5C6CA7423945BD3DFA942B20A06D7A8D8671F9831DBB52907AB4
4E54776D29C6085CD9970B6DD21DD3EA8EB09C49CBEC6CDCEEB0BBB1B8827109
3BDE64DDA024D67F098D6C1998506DDFF7907ABAADA1C39C759C850E0C6F8E89
A392D1C9329ACFFA92D361218D75E115F70A47C53B73B356D703E9C499AAD098
AA9C8119EE9E9708A9EA3049E976FA19AD04210D5F6092C7903FD155113F3A3F
269B746560F70970AC9F8D09956E0E84DACE4112C4E7C7F6B3F0B63D26EFF95E
2B2E9699D16BC8AFC4AD9113AA3A974C9E82E877288CF71E9169D2DCC61AAAA6
C536E5604EF0716F6487292BBB677518504B52C63822BED3BD5FD14EB41EE6A8
AD4B6CF90D39F98E12A765B645CBA3E8552FB9A986390212CE119E7C3DD675AC
17BD006144BEC534DA2A860188619F17589008409C5A309CB83FBA70F6446B6E
2B56991B6A03B1DE10C621591CEE45BECA27C54BC8B4F1754A9E8F660812710E
117850E1BB6FD89BB13F8CE391C43DA89EA67E9C3E7A4697790EA26B0E4E2E80
DCA508873A7AFFC11B8C02EF86C2316E8D8B6BCEA37F81A3A87546705F070C3B
9D4D28C366CEBC1EE485B8E2357DBE46E86C87B9939DADA60888AA9F1B92FECC
CC1C198DDB594BB70A8FE690ECAC21A414BAC89BF019F34D2A130F485EAE35B7
2A10C67EA3A48A4D9734759CC93AD85C6A570500AE5AC9973FC76EFA06BF5DDC
26E20E28D16B50957EE01AF2653F8D860817967AA5A9BF9BF7ABCDA710E9F34F
4F0EBCC32B3C9C2971F6225D2DAA6A451366B83F32B2ACB83E746D365B2DE38D
C1AB7447FE7B37F9630E410E5D8F0ECE74DF46C538947B3A167AD9F3E4A7EB3D
60F5425AE75AC3A27D39311DA35696C3DC7282AF1532E7AECE63D13DDA0296A2
01487185FDF1875AEF55A36C17D6A8DD329279D229259463A2F05CB7A874374B
E2320E1F6CFECB9C1CE62FF468C29751ACD9754AF1EABE8E7696C2888914416E
235B6766F20FFBEFF285277B639A51EA2F2E30D207BC891B00F0436008F980E0
9EEE7FB375BB069B9E0BA11DA951A99D8E60B4F920A0495C247FA7DE904765AB
DB5C3B2D634757E43EDD6FAA4DB3C67F82D6853E1170F0B2D8CE496DD4E72B0D
28277BEF172F1402959F64527F9B640619F04416DDB9D05FB2ACD019CB9C119E
E544D24EA6DAC5C69785394EA50E6EC9AAA9E14B904EAF29A733C6D7942B63F4
85729686742F26DEF78DF0DA1CA7CEFBB684F4CAD99021A3B3D1FE03B9C5A4B1
BD04CAC89BB91B11952A2B17A61789BEE0C54B46C03FE9A1AE73D17CF94BA30A
237C29D414C3BCE8E3E2DDF83C0BD59DCB66C4D2C3DE73DA8378F3C6C8035D28
7464399857E57651A53E9C4AA68DFCA91B2376CF98AC5290FDB9BDAD9EF1604E
9B0A70EDDA1E564B6D2456E7BC722454ACA8C4950FDD44B6EB9AD01169A9F845
B06A0DDB7897C847A5B1F42258AECF3807AE936C8F52C3A7A0A85D68160AE442
FE81543DA6702D76AB6E8701F80DFC1D87C961E350D0E52AB2A298B9E5908600
7E14D2A87309043CBF13F69AEAAB1BC239DEA88EB5176624F6046664B1D2691F
FBB2071D3706F97DCCA355A6DCC4D09FD35DC078FBAAF672FFDECEC61050A120
10B5A96629041303FD01ACCC7686165DED6AA712FF8E5E85DE33C4E7D877C49C
6C469A90410BAF60BE65ECD91CDC2EE7AC0CA8BA7B53865F26092BFCAA0BCA77
B80DC51DAD09C93C8DD8E43502B4B68F3D5918C3492196292447732BA90F5AB4
9F5E1D634ADE1CCAAD028DE5EBA9535F6FC5908DBD2D643E0A7E059C8C386FDC
E72659C0033F535C0D7F6B98D0335552D0BF3C6E302B672A5EAADFCEF81912E3
8F54E6FB7EC2B325125159713D0AC50DEE3673B9B148643727E94C80971A2E73
5E1E13237BE69C84FC039DCE02ECE2668AFD047F21A61BB94A9F498C9FE5CDEA
B274B40728B6F6CA9B6C15BAAF92F465B0D7311B46545CBA90D874839443CCB9
3110F052EB247B24B45A3D2FA6FBC7EB2A4BEC2A5892914B3C5EA3F4F9B9DCBF
6F932D95700E045B49E4B1F2C9D2A42CF39CA2F5A2654E6E8E6E92473D28AACD
5E35C6705EA728F704F5996D286BED433F976AB7E018621A577AED7C0AC0A84E
A032FE1869F603E6F20386E3A190A30A21EA886249ECF8CDDE2C33D73BA8647A
3DCA7A8DD9E8EC8D9A415D126BA38B6771C489DFC419303EE9C1B83FBFB3A0B8
97D64F30E4BCBEC24DF603FF3BF541E00D5804B6B6543D3D2B661CC551D497A9
9DFFF535AF424B2F3150BB39AAE8CDB306AAD37767BA10BADB031DC2FAB16955
EE78342CCC0E8B5976BF98F215461A8C6F63EBE6E2F1A1104662DDE53388CB51
8B44F3534853B8095F3B746A2459C2EF800FB1EF7F235EBAA9731E3AB3BE4369
1D3636E3ADD5BDF0C34FA80E90D8A1DDE770943FD196E0A7C5F1FAF6970B34C6
4673AACA6B2B5C12B9608521AE736C1F4B97209B063D991300ED5AF3D7F27E76
68E0B858FD8BFF86581E2B9548C691E3E5D9EC4D39C9715CDE86C7D22223CCEB
8A38C776A30AF14912390A7546DBECECD7A687D4F08646E57A12C80DCA022B7A
33399761A50B8E0ABEFA1163EDEC3DFB5DA3248792EEEDD894872D4E6814B4C3
548BAFCDE0CABBCDB97EC6D1BA47F2E77CC1389BF19D73661749AC33F46A618E
A665A85776545BF9662F2179D7BFD604FA8EF4700591AF3AEC647E27B24B76F3
133F9198DC15C1AED830E737909E43EB91C334C44BA35810007A3888E33F5DA5
B3B2C35481C648AFE630CC3E08F77744E401B2934E407D1EC17ECE737606B076
F8DE8EF3344F57495EF49D11580D6FB28AE0B1422521B320843B13467501CAE2
3DB93D7BB779F73B6AA30050DA74BDBC3F8DBB30F32EAFD07734A151BB2BAED5
C9B1F790059339B64BB4146470F30928C9A49AE88906BD6FDB7431A4B50809CE
0F67ABA01CDCC2320B0B097187B9299E3D80CDD7BB5DD5BFA7B28D924C5633C5
45A23CCEE097C41C3759C1FA8DBA0DD95034BCA89BD23FAC18C70093F40FF2F8
0FAC5DD4835F2DFD40540E9A9E9FD951A8AF2CB766597DE00147B163BACFB7E6
EFDA4DED594F1C746D8B46A1145E0E4058F5917B3F21E9BEBDE745EE72CDCA64
FB31EF7A2E55265F32559480E2B6726D3DE26FFC97EB4E3160F117E890C4B2E5
8DF310E6A728ABA85540F571C024F8DD58E1D7827FE97CED5EB31547EBC36415
02B8C0E10B7E37D816F01D56A364B8552CBFAAA95BC4BDDCFDE91CE0EF005B4B
7AB56FFB47A093AEDF0DE1EA48FC8103CA3CA1470864D2693E360006D05668A8
AA422CCCED20DCEEBEA5CE0DA1EFB00FB93E922B18124FA11A88D0F6E0F719DA
57603DD5DA42E1C56C2FD9E5415AA199D4F334C151C1157E75C107FBBFCEB706
5F4EA47A29B54ED8CAEB8DDA2F53D2A703B95487619780A52DA1270011648A28
AA64338E04AA5B92C1EDF3D8DA34FA6D227A0325EA6F22E9B38B6338C657BB21
CD4C582DC04010330F62923F817E4EDC6E5C0E6500F2A975A8A95BAA30C4A134
BB31B5AC45A2E7F6E9CDFC810D41344C4F606049445F8E93D74271C1E29DF7CB
5459593BA28AECF64D903D3E4D77CF5C04B06DE44A41EE4D9FC769854503AC85
69E4A5106E84016DE3D59865D4AB30BD6C9E45C45DCB5408421CC50CD6179C85
34E55CC70FBD8FEFE9F1D5160664981716E3BC7F24B6F54E0323D9BC4B692971
24419EE62D8B0BA726E2B4294A9A76F328B8101DA29E78BD5C4AC383350FE196
4D42DB1653637D19530124858950C22F1E9CF5BC07D46B7A58CDE19CC88DCD2E
7FE4EEFD8AA6047E919823C8CAB2EF5274F45E861E6508CC11A8AA90AED2403A
B2BF1315C2157B3B50A3685205D93E40906EEE9DE5985405974BCE0B84BB37DB
080A45C5237B269B93C0A7CF294A18B45464A41F604C494CBEF829A381155CFD
71CEEA54CC39EEDB6DF58A9896246B09F95DC6BC40BA6916AAB5ED3D24F66154
3662F8978FC63DA9280FF7ADB09EA5BA79D3B66E0C88BEC1EDD78DA93839073A
A4D7B0E627000C4ABA76C47CCFEE92E319315333A5584A951E34C55412049C4A
A5569FE65A006F77B416E0530AB6A8E7AD6C72340AD4CE25937158FABB2153EA
281E1D840206F5DA38E00815E9081F81DAB9FAA8F4DAB305867AC84735DB4F52
A36129929BD2084A8EA37BB6889695204BF7290B68D5E722540BF8A276F8BB6D
451D582EE59D2FF03F6B97DDE05FA00C3D375D2D0AAC8FE298F85CC067B15481
48D70B6A0354C705715B891915FE8EA45244677B9FCE81E72D66177E309F3F83
F744B9EA9E55C3B30DEC6E5E03B3988FD526A82A5E8E1DC79127FC62B2FA7949
B3AD3148868DE22BD4B5708E32CEAAE6ADEED1F463EAB9692411E18F8D6BF391
126B2700B4CF3B59D02E3F8795130C96285A63FCD1E0F647ACB1D35E9C58BD01
1DD06BABA00CA4343BEBEDBE677E053E9732B33A7495DF51782A07DA07F5646C
770C957AD915CC70BA8E08BE7A1F4E6BA5BB9C603E38F6FB0A2578471C4D02F4
283069856D926B9076EC73AA39CEB0A061AFF1575C7093FDAC9F89C3DC06EA45
06F3C2A3BC9FF21128B10CB758DF0F099B459A5264A8C24C098110D2BA1A8532
8FAE146A91BA7D033F591AB1A94B8A6FE0FFB610F698D216D58B4EF6C87B1524
8037CBB7E23D8550A620341C6625A1A2ECE7CEE2598D66277F857231A36155E3
984F147783E9B93975AC38A29F2FBCF704C8A04AD84C3E04A12D2321FA56811A
5B6744813CCC187968C5C26BB8D3E6615A912FA5369C01CCF8C0DB790593B190
1A90CFB5339B8771F325C5FC448D36C7312B11A15A8635BAB59CF3CAD176131E
026F6E141B2619EF7F3048750CC9291397F141591EEC8B612D6656DD34DB54D6
DBDD303CED74BE76664E7DC86FCFEEF2001C9DBA56418FB61F589566A47AF36E
C94671C5E8939AF9F4D53C0DE7142B7B63C86AAFA65877EBBB48C64589AFB2CB
1280AC099FC48058855CBDEB6C2D2A0D092267996591DC3B5EC8252984E9B27D
2E9EDE8CD8303F0905DBFCAE497DE1B755B924452CDE11CF4F20893DD6FF7251
427F520FE00580DAF1703FD968E0F8ECCDE618E1EA5820EE6CFED97C78864EF6
26FAFEEE194A268F24249D44829AA360D731C34DC285501E966A959180718F72
6330E4CC060588A2F65AE64A720DCAA818D49D4440F5D0B6C1F6C3A107E12445
F1BED2D3FCBB87A9597F01C7332AA79143564056219BF87D4B907A04F77621AD
054935E883B2B137D3D1C4BC792E8335CA08B6D83227F35736C41312A0BB077A
60FC6488C5E02FD51A10AC113D4EF70038C649C1677B2204A77F2ECBE9B3C341
F4126BECBCA61E3F3801F9188A3775924A62D30FB096B440286FA655EBA00A74
9A4162904BEA07CE68EE76018346DEEE20839C9A2FF71179B58E1D4AB30856B5
F5D97295A097174467010B15D733AAC5813CAA633746B430B1AAF9F997FDAAFD
436844D1A56B8E25A89D2CC4BA6EE7ABD167818FD4F6C747E07B262C99EE2C35
323F0B471586CA50F54C6381B052B15B0C58C19DEA82C0CA29F00400B727419B
2379979CDCBFA966AD513FA903160C571C3BF1BA239540B11EF2371A3880837C
6D6CA2F374280CFA1586427AE975A2AEC34244874E4D441DBAC6CD1828841C91
069AA87FAE849C5DC7C9EC1B9876E59F3CCDF8BB23D939F5348D7486934BFB02
CC5A22541ED352616830A510DE7732E5D8F7E785BBD31C2BC9D348CE5632654D
2C1740F89D57FB2AA1FD8FA3304EA03F757BB8F498ED98E48485722E78D97B12
A05F3A28438084D1CF90AC4C3FFCD7B3365941C45E1E02CB13CA1E99F7FA1D00
1C9D489D5C95F019AB4CE89FA3B6604473DBD2CE8E278969E0A0FCBCE68C23F6
9381882443D3FC16966555FC222F3FC4B1207522201AB7A15A7A6F22CDC9D392
360BF4C95DAD35770E0AC7E5EFF015F2C74ED7391F40EC94B8D1C163B5DEE5B3
911A20C2625AD3B24BD94D2A42405E655DA47D3F94F882CA2F479437B4E0BE71
8AFA4482C6FB270F8D05B4599A01403DAAA90C01DF3AA7C2BC7E66AB6AA833AD
FB6E5EE13E45CC7CE7E200FBFE639F9CFFF5D08512C02764997FD28368969BFB
0876F236EF6189BE73AD827332DF1B2EADEAC0ED3B939CE5BC3CEC78975FC636
44FCBC2CCF4396AC7343EC62E0E4F3DFFA2B880BF31D93ADFE201BE9CCEC8BA5
0B9B919E05B851E0909968DA259EECC6AA0743F25247978CC09C28C4F878E29A
5070E4023BCE95FE0ACCCC01D0EE219FA8344E8F6D7D4347563BF8AC030B9097
41F24D4BC9494915A82EE9FD37FBB6A46BF077B728FB569B1258CEA5F51F36BE
4F4D0F890D782E44748CA3FE8C8A515998371D9C7D2311F192B4B7E7C68FC6EE
3F7136714C282A2570FE591F247A08319CE9EF1E43274E4E57166E31A2ECA506
85350DA31AA4C33C9687F5210BA225EA1007C444FBFA2126769767E47A967884
9F68589E4BAA9ED32A7A466DE35554C132810C68ABDAE536D9D884352F28EA02
8A555D2CE11F30598F44A65E2D86B43ECCBDEED9E4E5B5B7DCDA20EAA09D9FF7
422FC91F2201431A9E8FC624FF44D26C0100183D77BC7E6B1A6CFBD3FA8BABC1
AE4CB0FD382E26BE0A83169B46D91429DCB746A0326243E212F802AF6A56C709
6E70C6C7CBC54F807956DE75D7C0E689B2684E95F1E619B02E026111A02A8BE2
7C22515F25EEDEB353948E35E582F8DCA2C44BED3F3B18642ECDFE919299665A
FDFEA129D42686CA54D497D94C696B040884D24220D76E44941BF1A18B33CA5D
EA6D560CBE38CE01088DC057E29FEF0AEA4B4168A952D0B5A7FF2C1B3B478090
24C36CD8DC2487F21901056FC8BEBCA67AA96790F83C446733340E98F9E80E02
F055F4B45F2470F4C21972CADA01A47250C143BFEFAFABF8D46632A48F594986
C30DCAB51168B2D9682C427F67D420B63A7D252B5DFB45D0627C6CCABD8D5F09
040C3EC3C3752A781CB248F39924F3B445B3C12DF049C08849B6EEC7FDFD368A
EE32F0FE6EA767B16D88697F182E52F05CB1CA210CB696069E73E6135847EA89
8C07EF5AF449BF57CF1FE36AF62EF5ABA4A973266955A1C43A8619EC79C02391
776AC8EE11E2EEC3443FCAF16A8FE034D25B8DE1155C6E93634D0D83D7EE1374
9F95AD2C92C390BE93CF536DA43D742FE6777D1D60D0677C1DA704ADD82B4F76
2EF0039A3813773C4B6848ABB9E96055F432C32AFEBAF21EF58E1DD3DD6378A2
08D816F3BE7E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSAM10
%!PS-AdobeFont-1.0: MSAM10 003.002
%%Title: MSAM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSAM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSAM10 known{/MSAM10 findfont dup/UniqueID known{dup
/UniqueID get 5031981 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSAM10 def
/FontBBox {8 -463 1331 1003 }readonly def
/UniqueID 5031981 def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSAM10.) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /squiggleright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE2340939CE40EE9186A0DCC3D3
D661293EC5BB40766B73935EB54125526067D631E1E3D1D6569AB3546CB257C3
4C12CA4AE98C3F99898F1448AC0B416B8E5C3EEF3D74B5FD6A1BE3C23B160E78
79A9E0AC4FC82364F946003C1B2E0EF3CEA944727E7502B65BA1331D36C159E2
1D107580F28A32E04CB876822CEF478BF4464CE4F7AE824FC786E099A1BE2A3C
7D2BFE2A748AB092AEBC2021DBFD5C40E912BC5856F3EF8615147350E75D2BF9
E428D7948E2128053FDB1F90CA9C7D6581E25A6645879F50577FE7F0B32B873F
13F97C524E19F1CFE3883C0DE1DF80FB61111978B0C2D028A99A712D3DC27D8F
C83C4EC335F0DB9912DD2AF009FAA56C5BD5855BA92851629EF6C47E6AC303A6
1A231558746ED8A78C76E476ED71246A2E15C51F465AB21A22ACACB03014B06F
201876D3C6F49E2D38D8C4FE8011F7BB148FC3227E0BFA51C0F9AAD64F0C6095
77B3D875476B666F9FB9A46763C49272FC504CC0E817A1533409D293D6D62CC8
DFDA666BC9DC70C4510BFB0DD2BC94B33D457EACFD754761B696163DB4C547B5
FF8994977A7C9910AF486487CE0320FA1E705BAF4B14FB937229D80F58D01E6E
9D9716EA3EDA84840B5D6BDE216A25814ABC4DE4C6818266C33CD4C3DA4F23BF
DAE6ABDC6D64E7EC7DE918DDB0B05D8413D32D99D15FE112C1D393D21806E0C9
7CE0F0977AA36617B8DD50937C5B0B5698947B0A71A167072FE1B3AD6F274D97
484926DF52CE7D9D2A4928A188E1F867C298E6DB475C0CBE09F0523D8BC6FE24
E1CED78178EE1E9D66A906B72505339E62499C0E4B6B5A2D596C4F8F4312F582
9413DC88D6EDFEAAE0C86BEE44CBDDD79BC02C844B80324B1FE3512E73C213BF
ECD22E7E13F98AB56E4D693B1D6045045E2F01DCC2AA1F70A4699B7D718A743F
D749133029EAD1870DF0B00EDEEDFD33642A88EB10DDF4CBBF8A7D8F7781179F
A91CF398747D52769A054CDACAEDC330FB79ECC96CF43C29515F5895D3A8C1E6
828F776844C88090405F868A872EF54467B72825B001B46F6496817A9B928BEC
ED212D4368368778F2D1B66D005F2D6E3DF4AB9B9791AF2CECCA3AE524781A41
5052FD21CB81D934F0F12CF8C8FFC656BAFBE897C5E86A21D3F42A38F7916693
ADD1DBF48F534DA16099FFCF3E3DBCB254BF49D8F72FAC2F9548477F9AFA414E
65A29F24FA16A9E0955A9A6CCC47198E6332ECD1A791F2E36E6656852179A94C
E3CF4477A9A6CF507B8184ECA5C0304FA15ABD8B0C379EAC19B9D16A630D96DB
A6DA819C2E481AE4870BCAB5963C0F9D837C97E207F7ED58B776799586B9F755
B705AC31C09C3F74AFBCDACF092B05F9E2B072C1B17EE6347523D3D5E1D404AC
636C33DD94121C3711C3D05F48E12DF8489F894E4913263176E81927BF5E3A94
99D124F64D00BCC288F03FD14F89E6352083333EC6C2044E2F81C477DD4CA9A9
55135915C27654B09BC9099FA966AD440417945879399B39C7BF20385456878F
9AAE7343912927476C2C88A445C03E3B77381F3F9A82FEECADCCF8C307144775
144279EB14E0F0443F8200C0FABD54A075EDCB83EAB07A7CAF6EAB17C6CDB239
077DC62173A54E93BE2911F4A45F72B80DD9C41B301B292EFA78D361AD74BD7D
2E94D44A2D79BB7B89708E094A21CCB28D80E0FCA707D742CC02BB81FE4B0E06
4A5E93DF0414BAC27ADDB044A0D444692973994CD028E1C62F1FFA4776554914
2D55B0F81C06A2633A4AE42AD00422A619E339F2E6F0C6FC74F70552974509A0
812F1007FD7055E9ABB8CB39F799F847993DB9593A76C388F9BC883D4A0DE2CD
BFD0F7F2A5F1C50791EB4363104B49088E6EA2C5E61EF256A9FF232357D62D78
0C876D200E4136F7B0570A3B0988F3E23443081591DDB861745B4F6F0FF7D854
8F558F995A283B346E266DB6FFB54E0761046152A864F710113B6BF12967D022
2947517E1CE2079849CF8EB01BB2B96EEC2575AAAD1AA1E019D7E72BCFDF2979
8E2A6EE0C1525389C16411E5DBD416467B9900F07223117A77E0B4C3B0D49A96
C2E3A61AF9C9B1CEB80AC6357FC0CA446FF87BA0CCCD81924F6209198BD6E1A6
9EECEF233B17CC4E9F0654024F7E857EAB409F4B9B9ADE4090F2B715443A80EA
130369A193A32A4DA3730F13E3C9E717CCC9E74611D787277B73EFCE14FCC3B8
6B11AD88F42705F65E9C747B472F379ECDCB7F8F9C3FEA64402972623EA0998F
255892C43CEFD7ED08957C495AAACDA59E9398B43788DF27F7433F72377C8F88
F54F5E3A5564244827EBF92227B94F4FE896FEC6519769AAD567E618DFF61B7D
B93EE0FFA2EA58BE1FDAA0025259789FDB31A1019661C18080567EB5C6306596
F97F039E3C9ABF9E40B4725A96F8170B49B73B68E308786FE99B0C005DE01894
7CC93C196E1F830570D51F0AD29BF27CCE45AD7D3B4332C9D50F1E9C2D04E033
1E197DB9BE1D44566F738CD26A13B8EBC8FD49E999D35F042E8A24F025414F14
D9D11ED702250F1295722F68A022196A0E38B9ADDDBA997283ABAA62898EF32B
C765387E238CA3475ED5C6EF2803CE32B5A90A8287C70386F46B84C332E8C00F
85A8CC2DE78D433A325B7862AD4D93B3EE2CABC4B688833BF263E26879AF213C
934FAFEBE8D804E2BC8433B81ED5DA99F08C2C11B93019D3D9C1C952F20C68A7
E141DEA2CB983DAC5A2B9426A98262FEB13C420EAA315C890F0B907BEA099C1A
10B0AB255AF99694C722166DCDA72FD58CFBA3328FC5EF83A52A750C5E613E74
A8572CB8B78ABDAC27B798E727E3E5AF9451416493FE3F4E95157B4ABDF3A910
64369E34A2B40176A5E0E30F472E33A41B8C7BA4CB1BFB9173783909161370AA
EA40C83C60AAE242358688CE13193C9DDC3544A959A1E6A16FCC4BFAA65A63C7
5AEF208FC201F88DD047B5E6EFBD4BB256F973269BA1B06CCFC186D48BCCB4F6
A0F512B1D6541417BB6045045CBE72B72AA2549C345B1BB466335226A0E76A10
9645C25A0FB4CD8455C7C10C0F4E7E9914D2010BA1C95C6BAE4E62C8B6A8BDB4
92281B366208ABD9C010B3660C5E150D63D6927255CF9081C0898E9B206FAB57
B306669AB87AF405C537CA7D3411DBC41C53EEFD8071C094486158E97BAFE90E
BA29BEB83BA60776D33BF9CAF9C7FEB66D4B93DA27E499B006D243FF59CB33F6
AFC65D10B74CC522BF4AD45E3451B395AD5029B148A1C9B710D5CF02B65F9189
0822C0A33C4D07F2DEFDD5B4F6E063891F0456F1BCA4540F9DCD3B0F9F39696A
52336AFCF0A33A029AEEB448CE120B9D939487EC8274AD4E1D5F5AF4C14EC910
680C5E312735DFA3A5B1835370A76DFA63A05379021A64EE55E25AD5218398A3
6DD66D1B474A2E7C6E236E0E4A9BD0E4F7AD1807C6478225C58327BFE1822000
26713D01CAD6951F456504D79867D523605ECD78F2D5DA05994BA4812BF65E7E
34ACB732150ECB3D212D03387C71677F617D76A9A42C708C89D61614F280A5FB
0BFA84A17CF9DF333C9E13DEE82A5ADC9D2E588338D247889ECFB090CC63CF9B
8D92B1CB784B65BE80E3B57998F9ABEE702E07BC127D272C67B0A97734E405C1
FAA87E6B9DDB8ECAD2B9DCD56D687DFF71BDF29BBDA0A0812695F81C5EBB83F8
0A810D6560F28D7CA1F89A11F253E1B3B4EBAF511454E4BF2C46A333BC186558
8D73374455A32DE993526063AE70EAA647454ECC62BFC5A53357F2955E4A8A02
E20AA64AB6511CEFC5A32874C8F2BC2424C6B85BAE80191216A22D93BF2813EA
18A1A961543D7C58C4F4B263D76AD6C61270F2A77468B3E59BA9D861E5AA6CE1
B7A9C4C2A13E80C4052283DF3529210B3F6E90C2EFF205866865E7E96F34513B
05A45939728619E02FF1410C0D220F6D615718893E7370A0B91675BCF681B2D9
56112D9D37ECB819017472DCD38FE4724834869F82985A69E33BF862DB420DEB
AA1CDF83099114501C037873E86E0D33FC954E12D40038FBDC78E7159B738516
A078AA386D9424B8D4913B7848D8439D2ACAFB7C81C9AB192D77F316D299D11B
24F67141B1E0FDB564B70FE68070BE6BC00F22C11A1291BA6401C722487BFE19
D7869DA874C9059677DBEF958B7AA06EB924A17B3EFE9014493EA1FA8C4C67B2
B5DC483ACFAAE88F2DFF9FAAA7825854671ECFD522540C9F6C3817C11D3B63CA
8ECF710EAC4F27506B67B972633D0821BD15F4511F305A5677F2919DEBF7DE88
4F60E36360A7856B6B6A8A866832534279AF45B4232877F45C92ABDFE0910F7C
F86825A1B6012FF93479BDC9639C01CF2C783356B33127AEC7039D40529EE54A
756D8B7524E069DA60A38AFE592B8B228ABE22B7BC9CD9B23277FBB567B1377C
77E21AE6F55ADF4F8864F4260562F0384165444385D5A8C5966EBF191900B898
85240634EBE8A5DA382E0EE3583B1B5D102B6EBFAD60AB9C335919EFBAA55A6E
36CE4887299E395EB5766080FC0B6F93B1247F28842FB817084C9C090616AA72
25F4ED6996D36CD9675009C615BA26BD4904F3130991023E4116A7E6BCB26C10
7106241DE039BA7F26E137040BAF587AE03A476526F025C70F16EF23474C0EEB
6E27D8562C7C733CF470EA198494A505A8F871E8EBA31D4F0D9F0AEB9D0EF63B
738B582F7BD73DEFD5D83707BBC7854B6FC7FA6E2636F0B68C4858B247F70C4D
F602764B9465975E9AF28C2046EAD743CC350E747D6524B9CD7F325946B9287B
F7D46E4342A71B0409B2BF5FA4D340DD549F6A5B05D2784EC5A248560F4E214B
C5304217B3AF8451C190FE1C312527746E45DE39D8D43CBEED9A19FFE143CA61
3B65344C26E189D790A0211556C609F107C78F55CA120F3449A697D1305DAD2C
D3EAB88E2CBDC022A4E036E232237C1C16ECFA62D6CF8EA3B6610B58C75EEEE9
676201206E4A8B8C7CF5EF409F2C0544DAAC926497B1FBCDEA07DF042ED870D3
9D74709FDB8CD2CAC4726655371EDDAE78A5D9E0811ED4DCE8C23DAE1ED44D06
F4DF09BD9A00C1DE178E766E05CD3CA64301C592BC01EA4F6D1973586547B170
A3338C60FA1148DC5F3F7B7DB5EAC870239BD137CC85AD54380379F5C30B0754
D0A0FD8DDDC7CE725B58F37DE7DF077916C912F2808D0E4CA32808D0439A148E
3B1E18B9C88C8B4DF23FF5C53B2881D7C23D1C239F08137BBD8FEA326E7CD1BC
C80027A40463BD58758F4402D3DCDFED46C2E3C405E1B1E8DD0062E1272AB5C8
91953946FBB4B9EB0A74D0F7F4FAAD798571EEDBF0CD4C92A6916909297F27B7
5135990685B849E8244D2EE73D5C7BEF1D3042CA8353210EB4293A2B2F1BCCEA
7FF2AA91F52D343BFBF5E91F2381AE5B6803C46605D471B7BD122153E87D872D
EBF37727370BB683A194C4C4DE13F54AECB116BEB3E0750E10AF272E0C015641
0F9264A21BA79821B29D8CB78746C314E6893765AB9BB7BB1730D758F687E615
D2AEED695331E99591AFA000AA540ABD36ACA911E91E20912AB819A80D5183A4
CB88E08E0E9911612639C05043942AC8EA0072E9CB7154C415C0FB37DFE3F01E
638D5052C87A8359DD979C44B730F06019191C5BED15E6E79FAF312ED8EB0B02
3E712A0F6C89A6F7C122A561F133FB4D2A98EE09B11ADEA53702C92C210334E6
8D5F3E1BCC0E81CE178ED749B00FF4089C1AC412DC5F6696C9D8B9D2EB24B35C
3C1F8F63EA348A95622AF76CDD5C4DFE06A8C7534A55FAF937777E864C98062C
CEAA3ECB5E518C75FEAA240910646EF782303BF34FBF8162C8650D5A6F0EADB4
FAD9AED7994003F74E09A3CFD8900A33160CD1D49AA1C7BB5E42A2B0AB5A9D20
A5AEE02435D84A2622ED87454A2867E112A9AC72653A7865E2DDB9C236384228
94DE4A396FA798ED1F370AE5247E0E703D4D4225ACC1EF410631555D7DBC814F
F84353CD407284FBEA1D371CA578165B888D771ABEF7C3ADE33DF899E55FB0C6
A99A97A474739D07FF17DDBA267EC6C0A6154094D6E7354FEEF9723F23CA6E86
D8467D66FC5DEA43D700C9712BCDBCB15EDB628F4B840A76D761CC213376A0CF
3F137F399AF2F349C1D7FC9EE28CE88F416F1069D6907C3E917AECDD245A1BBF
4375A03755C145042232F87BD3F097746E41A70FAE7761AB26D1FDBABBFB56FE
D8C80879557D3849CBFC7D25D84D137ADBB5FD4F6FEF8CC9D54824EC85DDF553
FC992F823952FC7591D08F035BDAFC9317F144C94E828F09E29A02F0D6639DF5
08D32902957CF0BE88694AA031FA8BCA9E73D48A60FBEF090FEFF955FEF964DA
F53A9B58D2732F986DD20814A1C11963E4FF24011CB93D616CF4A6DEA6ACC5B5
354626A142D85BFC4F03DBC32F26253B97414C9CFDF3C3EBDD68FE0B7908AF88
1961CDBB6A94155524361C0B95E42AF0DC1542752B2129938BCD020CA19D64E1
0EB5DE254B638D700EF4BA620D924D65E95A329AC2657D2CCA597A4FEF7F1347
05419CFB59A93578682671B9A2910BBAF099C877288C19A4EBEBCB3C64415248
C00D0295332B6388384F27779F0B0A2D05A9F3BBCB3C1F587EAE05AE4D2C5319
478E8D848ED75B368FF45ED8B2D572AAE502493D2A3660F8400E1AAF9B27AB35
99FA7E39E250E91A67101F20FAE8BFC13A07FD2F7FD3A45002C02AD891458739
10D221602C35139358B1F23E0DDEADDF0AC07B1689EE95DB17A3B6888D9BEB65
C7A9BA2CD903B2F8348489A57F5A7191D1627A2C76A856C9E178B17A40293F98
E9CACD819DBAFBD0FFEC6EF5BAA6D8AFF764786470A5B02860DA35A5B3A2BBE7
45E6E4882CCF3A980B0C35F6C170D7269F7263FBBBF4051A51437A218711AA18
A408F16E7C9FD7D61AC4E859A91CA4B18D5BC3B0F6EF0287298B75C11FBD9FA4
1BF203A988C21BC2C550839E432350ECB4471F8553F7B4E42128DCA6B1239DAF
6C9D4A8B8AB7FA8AB013EC3060F02D6DB609F59E0BDE4D05891811A41F7E47EE
7166D88DDCFF5BFE1AB84D873C38009A857DB436100CACD8DEB98548A2FD3770
B44D6194717757468A9C84238E5B83AD19921E31485ACC168C25DA73D95767E2
27EDA7FBEC3FA6C8C58DED3649994CC965F81327D8547181CE06A73A6D696552
6A6EB8009B1C40A46791E8DD0AD66E125F61CA6810BB4B74E266703F9DE0E322
41D93C72DF010EE7DF3B7AF46CAAA9463E68D5C8B792D3197C4EED52CD16D5E4
493C1F8944901537C4E6AC73E5D6621CBD177B50CFD7F86E786D6E6EC176F6C1
3D7E9346C2859A185793A764E960F236A1798FF5E3A740ADDEF422FDA93FE058
53A9989A0A7252337DDCE50B6A040E49421069081644A51C80D37BF73CB30254
BC1D8A551F71FFE93F068070448334307A87526A86A3A7D53AEABC3506E78DD1
849BFF403701D6059D6CC2CCFCBAC8BEBF440B8D3152C63908C6882E56EAAF71
2984E440F40B5F355DAC74EB02738BCB094E40A55A48A26BA9970D09EF48EDB9
C0C6BA95EC2A5E98325594AC418DFF541515964C77B8D2C8E953703063F17F36
D042EFFB97936DA27FC3601DDD601709B71382EC67BB58C8D07254A6BBF7FFF4
EADB3B735D143E4654A5F06ECF67F0305606CD0619022A5DEC8206D4F9B8D3B0
1CB47BCDCCC4F1898958555F5218EBA0BB9F6BDA92E8A8F645C51D69C597141A
DACC7696EC47C399F6BC4CC2760FF9366A7D1F2ADE54B913F1ED476D606ACA25
83D3958E9EE0547A5C54C359AD40D487FEED3555A936A7F9A2098050930339C0
DB023D22CC949331C13287D1108A4F840235AF8E613FD6176485B22A31B165EA
8DE2F2534E57BC3E63D44604D095AAF56667F587FBFB99FACB6315A21101C80A
6029178A3D776FC5BA1371DCFFB848F4119D1360A8F4877EAE2E091DD7659A4D
E41782F4593FAFCAC17CA91511592569F50BCA5E2EAE8F2216484456987EEAB5
7173FC1326E5980AEEBE4C9BB4E1EA8C09A9AB468E408B268D7C5C02BED4CDC1
3D0AA452FFB97821C615377D4C4FC80536BAB69FFCD6AE82C5B016A6D528409D
8CDC34C11C1ABD217754D32BBDE9E82E1C676A4C906D06A29CDE917F3B768231
EA4192292B734513A5334C0DB3CB07840131C0A1E001FA800D11752EA22A6118
81302640752651AB06879690063E4867FF3E636B737E2923D8259E2EF88405AC
94CE63DED1E5A2236574F27F5ACEBADA23CE79FF4C12A228FE531B47E40A703F
E88FC49058478ADD46178E1D968E21B7D842B770088B4FE66CE27EC9B172C1A4
848D473763FA49ACB07F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.0: CMSY9 003.002
%%Title: CMSY9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY9 known{/CMSY9 findfont dup/UniqueID known{dup
/UniqueID get 5096650 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY9 def
/FontBBox {-29 -958 1146 777 }readonly def
/UniqueID 5096650 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY9.) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /arrowright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A580F0834F28818EBF
F29D3B2C7C9AFD969BA6D3B7429E222AF78F6DE00CE2C8008A5966422936DC5A
DE549B458EB41026E123FE75E703E046F665B7DC78298A145548DEF8D579E008
39279A5208EAF898A357DF3FD9CE4450811F20B454D86B2947BEBB11EABFC62B
187B12458E022CDBAA6EDF4A89D79300F635D8CD973E35FA8D9B1240B3D30D72
4F30444BDF0B51ABA15A181A3196A6CDF9CD1D38D64C83E745A767446641991E
23EAE067609DC2E84B44D923CC98407812813D5AEF0EA21E560B31BD77D735BD
E35EAA564A570DD3294C703E16BB9F251D54407269C8B23DEAD063018D6EB748
4204A415AAC8384025FA922E7074FA7B8A6C31FD3761E7B2737D4D9C9992B7B6
DBD0CFDBD87D42E1A451FC5C7EFAAEC65D10D278470DDF42DFABC836CF15D042
6900E0DCDD36E7153BA186B8358E74F91A1D43D62EB0B821C0E97FE63F1586D0
98F01E8F6B6F2A435343A25CDD80D3AEB42DC8E5AE02F8837B84EE5EB508B02B
6980D2349984FE1A0D3ED12355D556BA483CA078B7921FB336EDAFC22AE05C1C
5614F5025B890009272DA8C838B81913C872A54F7E932237FB1BC2CE5D64CD04
2D320C8E2E610E9EE36EAC7C28C833F8A14048E751B61D0CEB342CBAAB34D104
311B421B8CE4D903D2E2518BA8B734E2637E2CA55426C4A87EEBCE637F8D71F1
54626C52083262A5A9A3B49142948BC1AC0B7698811AE81FC3D3B1C14E6C274E
CFD6C480514F3649D7725A0A14C82C9D537B1C5A9ADC816340B8B4E484AF55AA
905EA936A83FE2BE788D084469008F407447E0077417096333F163CE94CD3098
4B9712EE23120829AE2695EA63975492DB2615214B11C87ED0ADB776ED4BA0B1
40D09D1A617D4F57EE1A9B05C8D5F42AECB9C6AE67757DE6307B1A9C467123DA
773239976AB0EA052B23F263031ACABEC9EEC7A43ACD0DC2D7AD66664FB0D937
6A0F463A173E8B90B2596DD323D2350435D9D31B638112D70492F44769FC0C6B
40A291FE78AA598CAFC19E5AD195BE7264F0EC29305D36C7AB8F2A733797D75D
94C8F7AAFC49C13C108F514745A394F460294C6F3F44162BBFA878F773A5115F
062E934253B786DA2B9A6E8E843E06B97075BE99F21B330D6684998C5C340B72
09D69B655097354CB682D42120ABF5109E5522ABEC94D05E7211DACE8737A1A9
0BD3EC16F48798E67C7C85560D79366504BBFE5F7F5EC1B05B9F68F98149A02E
E53F321C213456D802C01871E9024F965258F71215F40EA71057C15E349F06A3
A016BF1B7E44DC4766FC92EE500EBF7C47D36B1EA34981EE6FE38FF4903466A8
C9020B91CFC731642003AAEB145EC0F13D6281B0838BB4236C220F6F467F7DCB
C79BB9CD5B6A180DD2ED7F94DA6B5CB833E62E898BE832DF601BFBC8148F9430
C8AC459F23EA2536E301C9DFD3FFBAF4D01E7853B60A69B5D012DCC0054C0BA2
1293D3B4EEDF7C5C78118138544A60FB1A500F72BA39E63EF5D97D68369850E6
9B6336DA577128DE68FEB71877360D97204B5F3C06E808BF95AA6D6013524BCC
85CBA9FD2CFEF383645E7E960E7AD471A6A3B8B8C3A0A0B8464836499309D82F
52004FCDB68997BAD9E4B5B881634FE1213283B6B19308BB67F2364F7ECD5534
467EF07CBE71989FFCBC6224417C0710EB3EF2676B9DE846E7FFB1AA6608EC9A
76C31724A19ABB2AD08CC102F5DE8E4E513F90A53F06D440A66B000CCAF6AD12
6F4B161B56FA5FAED65A24FA183B84F4B45407AA69624068EE0E3E47BBE973CA
C72137823F1D676131C8CD5070092CD73FC2A93E0480310E21CFB14C031206AB
411694AFE7B639ACF35C28705A115E98BC69C66F6C58E9E79902453798D76267
29B780AFB6B895B34CBEA51530E8300569EE4D500527BA294282FED81F730A46
6ED19AA5AD45852739882216EE937FC45D75116BBDBA6FF4B4423B398E383CCD
A7D705B8BA85076133E823300C3EFC9EB9399575F5F6BBF868265304B299AD77
B6B4EEA04C83E163E8CE2BFACA65F9DAAE3AD2B0F8DA1F986E6A12DDB2AFACD2
217E37B093F46FF3E20E587A9490401C2833F5844763FE2C528E151214E8CA95
018E1D8D47C9EB5FB4F0EA2A6D064680DEFD2C5489298F83B58EA7FA8CB019E0
671028C59C3E007DD86CD247889ECFA6AD6DA2433B02180DCE6ECF9E495D0976
D063A61B007233DED5E3F351D790F26D4011582735A69F37E7CCBB0AF254B925
B378522B748BD9BF152E2187DEA12BB168C42AD8D67D18567393B35DB2AD8403
5A7093EB59FC276525B8796FE81944F7F03349BB077110E182A61754ADECECD8
A5255DBADB523F3DC251A7D97F17DC76281CC632FAEB382A972D60A15FDDA57E
2F42AA338D889B47F6A3C1FADAFA8D11D63EF8D0C8C0FCE61FBD8AD34EB8DB3B
722BD86CE5B1268F704ACE82A39466DC2D96C9849B9422567FA5E728B17FAF61
59A77E9B3289DB807DF54D076139E3DFE176C3131FA4540C1542AE5AD6200FCD
B92D5DAA77DD4D3022049B6EA2A037FE96E0CEBB1608C663F1373246FA74D70A
BAE7BD37F3AC23E003204FA8270B4514DE1FDC5401B69CBC98A67A5CAB5505F2
87C242B6ECC86E88EEF44B9C79DA5F88CFADAE8B4CF437A7CBD5E0C01A9BC479
E92EA48C808820C567E74D62ED7597FCEC53DE9A0B3EBB9A3FB50AEACAB82BF9
2AA56D029357AAE016582592972ED01C0ADE565E87607F17BCF4983E3321F606
ED664B9516D404B277C2C1B0F873D469D64A9744D9C1897125FD471E71BE060B
A3A617DC8D812E184664BD83EC74EEB5197611380F2D859E1A61A14404493D04
B5537C04541E557CB5039905F37E72B762EBD2321633E12C38C409338AD5AAD3
1A507BB2B8F5235F0614D0CEC2BE44CAD504C9B2CD3E45437A493A33B9BF8A1C
3FE66B1E673449A54E8E3C3470688E94EE4404C888583F7C96B43A592D586D25
8AC1F206EE5FBF3AFF7EDF9BA91EEC6BABD573D455E0AD6802E7E23A662D4F12
FDDA00EA054CD331DF86C099C4BE8AB4EAF5D8EC1BFEFCF50302BE61E6FF26D8
1E88C544570E8D6F7D875466C70AA91D6CCD4DF4BBA34FC67191D1692D3FB76A
66F114152956A5E38345E7495BEB1A389B7D0A59624ABA784F77C1BF7728E556
F9D97D71858D61624C22C6914A3A995BD75922A2C37EF2CA91F923A4561CD3D5
2DCEACD9C3A65A9FAFFFA4822E79D6D89D6366DA6362DB16FF061840582DA35D
E4EE8308040C2DA5F298944EED470D6E4E1FF58DFDDA96C20C85E2DF2652E12B
2EFB8F890D301E8CE777678FA786E552A62A60DFC369AF4BDC069F5457FC86F5
1FB1A38A2222EEE86FE1AC9A8227663AE33217C1F381115CCD04D2F381A27E97
36D356DC64615AD63E1952B37AD4F967317D76A6DEF039CE8446AA634086BFB7
7B0B34F595B61ACEB346F51ED10ADDB7B852B5B2BCFE416D0435A7CAA4C9D9A6
152D9AD938F39E9756AC752F1604D884992BAD768C720C45479F5AD8E53A4832
1B44D6109DE4460A662DA6081465E2BE02ACBEB52259E046767DA24E1416FF44
D5AA1D303CC4249510D703CC6CD0FD7DDB078A91089FD86ACE1721F875F019B9
82D7C5B2530567F2306F47DE90EADDCD12AA1C693B1982827DC36A74C86474B7
0A8A2E084CA403AF654E2F8488806B943E38ABF544ECD45FECDC441DD970B180
FF3FFF1A50D5E22216B240A527F95DA1E43770A3867F225DD2A8AF01A965E06E
A063997C4CDC0B16B52F9B9C8B0DBA94F88F26A7A01E596DCF8F33DA3DA5B02D
2ACF771F25A1372F521A80B93DB0337886FCAC0A2E8FAE0D7E1E0C31EB43AE3D
B4C2020F322A9857A9EADFA7782CA70DE7421B9A83DE1873EED8D096701370B7
7EC33B9C104E9CC16DF8C80ED24D1F91677E355DF037621ABBB75E09ACDBEB82
30F1AFB82FAEC4D9E2DA93303F72C1078679EDDA35ABF2AB38DFF091AEB273CC
5A7B29C0164977160CA75F62BC20474C7C1F127AE7E4DE865FBCEF852698AB80
B61340CAB6F86017FEF570104E46B6FB3320E78D387CC58DF1C4FAD8570C0126
B6F54AB5BCD47904A9255366AC9C88576456D3CF605822269CC65979EC3CC740
AE3D09257BA3AC7A364A7F5EECA3E658AA20B53423553C416D98FD8100D80A30
A1B19F029B7473070D7C60CDE51BBEEFD2B45B1C82F4FE32A5BB6BB5BC32BBB8
F600ABE893B83B806A5435AE2B40E5CEA9068C6ABBCE73C9B3533520439F28F5
E171DB1DD90B2EC04A1F36767B2B97D4EC0FBF217D4E80ADA5383BADCD7E066F
5F4B23738A14F19AC7D765119AAC9AB6CD0A8AD4EAF8955CB9F5BDB0156CACFF
236D24E8A12AEBA549FAA9D7053D10AB7094B5D9B86FC7375E245EA8D7FC64B9
859A1A37C006E0449AA8DB8B89730348C71C7E014A2EF8D871AAA856407C33C9
392720173DA60850938D0537564455C3957631AC8F8C0B3B29BF6163828796E6
0944C3000B990715188203B32BC4E3FCDF173A4A9C78753AB7D76BB9A4C2DA4E
3EC638753D6FF6356EBB07D0A9E8D3F50EA5451FB6C836B9E5EBB8F1331C8CA0
B0CD271AF316502CBE87F652B5ACCD43176AAA32C6530C69E77E3C85DA496F3C
06980ACA739DECB5D986622AD81F204579218660EA791774C2D11878DE23F858
BBC4ABC7EBA01B7FEBB32BC914FEA8E5720731FD43F8A5CC53954D13455827EE
9C7BADAE8322E77EE7413D6C86E6D378FF8044F50F529E765A1CAC29E8B1D91E
CD40F70F2D4890E0FD04502933212D5AB176DB143831958605C1667B8841E770
CB4D513DF0C3182C23CA653A7A714B2A8DE29D6B203F5A9481E0CF3FF073FC6F
476B0B205136DA43650A940035A970584DD7D06B7CDA8E960186158B75FE3917
9B1D0FFE45EE1606C875DF635B80F5A9E5B67A6ED748F52A53A710A45AC20BCF
FC96755E685A3B0712D5E09D860986C61C631A8D2A505C57D57C1D4AE78C552C
DC5C9EE15B82A4C3020331B78FDEFDE53974C391F375E8118EB7B2D23DFA3F15
389043EB6F33842C82B896073760197B13D3DAC172D77779DF517AE31BAC43BF
5BD6F75B59AAA59C7EB81B776FADB720282DC06BBC9C33AF5AC0BC59F6A0044E
3898A4B5868EF32BC4F980DD863E8EDF6DE3E753A7B3E39F8E8BCB3D3BF14EDE
3395E73BD07440FCE88FB28A96878E823C1E5519650F2054EC2CF733EB8AEB0D
510E5659A3179C3FA8E31EED621BE0EA648D76C370C3CBD8043BE206F28699D7
5871DA483AA5D3580CD55902C85DB9EF5CF5D3191738FE64DB42410F5AB8ACFC
CE07E524BECA5633B082F4793002A4A7215AD1BA31159A30D72AC60EDD0B2BAF
73C9934C85C5372B47BCD3ECEE463CADC05CE8352EC1399ABE2465AA53E5965E
79400336B1F5D1401EE2DA5807F9701D1086DE505F6AD4E64DD4F3E5E90CD64D
FDD25E6FA03B679597CFB8C5C1F03641CEB7B9B40787E70BC6B063621382E3D5
1287365426E44A2EA208C26155CDF782F404CA7B3C6D379103EF4A51CA3F1343
22B04A0B55CE5A7633175838B9E50480E9B80446CD3B541362E7A10BB3C58A42
88C0FF580B4A0296073F5B6505E4FCCA5D4BA2F7E8D59BB04EC9ED4E664BC2BB
8754777594DB26DA0985663D321CCD13FB261BE8A771470DDDA783493E452A87
D0AD01AFF8EDCB7BB159F1408FBCC52F126C46234CE6BEF241B49472102598D6
91FF2DCBA2CD0E6658A61DB3591EA02E4DF202954B655C5A3C34B14CB60CF9C9
2A6683AB282DFD79B33FF3A6AA524582F174F11A5568159083496B242ACD2770
0ACE8473D363AC11250E5DCDCD3CB2281B71FCEB8AAC1367D0714796AF3BF01E
80BD4B05A0A45E6CFA6C672850B9DF113F5EB15923ED885A0E4488D4914B62A2
FAFB6A63F8AF0CF0DA498E1BA68C4150B6E59CBA80BD17026FA09920006D2075
BC6F1010D0A10648A20D8ABF8137BFCD6A5DB3606F6B3CA51E8A4645D32E5966
6DFF7537F65DA4268A86BCA5791C21F5FA9F4C2F1F6C1AFC4D4BADFA63609C4F
5F5158608E6FFD9C5BF00646C3AAB983DDA5E37A9C2EA81796B161A06201FB6F
8EACE87008EE7A008BFBA69AAC04D73A8C0447FADA0249D8861ED405537E23E7
BE68C4349FD64A14E3A53D6C6484E704BE4AD5FA0269F56D3B752A070D9872FD
A5CEE543B413F13CC4CFABCE885BA4533EA0969FDADC14DE6846B330552CFD60
A75BC8C9DDA76102E48DB6B81975A1F3FBE182CEF410841CC6164AFA0CE51FD6
8E8E6F0971277052E21126909B5EE51508306B886E945C11DFFE1C91BD0D79E4
554CC7D6A774C9B98610A1E49C3326D62F157CA9D89B56699F32DBB9D49C716D
CBDEC052133F8E18E8F3D7A59008398AF3E4E1192CFFE4D0B7D2ECC8DE2ABC1D
4DF7F2EA5EC0DD756CB2FF9F95FF10E506463D3037BABD221C08506FA603DE1C
DC45A5998921C4023E501DBA494C1F41C0955A761AC3D5B13A88EC4F0BF40756
BAE8645EA76027B8AF74726521DC129B9AED4BAE67A511EA56EE9D0D8D30C7F6
FA8BB890375A263A0BC4E9CBBBB8F8F8613A43B10E964F8CBD6BAA2B0BAA70C4
4CFAF6EBF4882B610AE13689823D37B046FD26DA85BD96B896CBDAB6662573D0
2CB87D45A86A016146513441BF7A748F1E9C2AC7172460EA628BFB22F9797905
F6DF6749F13C7F234A2CE4829D41E0F53EF3C5F52165297AAC4B5AF4747A9F53
60370B4C0110DBB42C25308F489A856B6664371FC2126BAF4710790021255653
CACDE1B9ED6AF5C696C3D8BEA4698DD9045B3004A5C4C03EA994A5445C9D4EB9
865266850047E28F2D82A08617E9283FE637CFAE4F7F261CC2D616A8C746EF23
7360553A6B434201944C04B1522533C61F615A20BA3678AF8D4BAD1FB548D82C
72D41699FB96EF40ABBABDEE633F05B4445BFC4E6E661DCBC8EC473BD2BBAF7F
75F7FC86CC7B1F3A2343EDEDF6B5F7E98A0BC4443E21611F4D807FE7F597A37A
A4DAF8A8E6D04FEFB320E0E25C61E156A72A3E4A69EDA04B0E3B72B69FC19E63
AA33A682663A8F37F4FFC1533CCA2A80DAA675DD723A7E13D9DAE3BB0F5F3E07
99BAB9B9BCFB29B73FC76EFA02F4F632690651DAAEC2B3688B636F0FCB156047
F8EF7239716BE5D3DB2FD1DAEEC11DC2D65CFBEDC1C950CA737A04FCCCA509C4
7E47664E160322366F70CCC641B9B49192AB839E0AC609AB2FDD3783095293C3
11C56740FB50D23AE9FEAF66DB13F35367B562F15161AA270EE44713881B2387
7889FD10198AD4D750390811714DAE7A8DC6F5770224E93408F8CCD4F8712A9B
3C583C983D98CCA7FF9DDDEF8AFA292781B1D7089336CA631413EA0728353E8B
3650EDED7ABB6E5DB5B85014A3A9C4C76EBB664A5B3E0F3CB2ECFBB6294F5C4F
69EA3AC8C071B122B129A28E04FE989DA9670EB6246806A516517DDBC52DC001
4C027D51EF1F98506F21E63D57FEF267B913F1ED4770D892239222F3A9035C35
FFA38D1AF3ED9A8C02235D7422695D30A2F801389DADF34CDC489EEB38089B6B
026D884EE1C24FE5785C383B988FFFEB5459A1644CA44D353503AE117E87F956
393DEF6C47D4E1C5B1A33835C9B8E1B98809DFEE43C4D6DBEF1C2B1ADE4B8F13
3B5D224C25927433D5738B0FE019CB88B1F373E4AC2BDB5BD86887FCFC50FA1F
3E01CC550BE5FA0703E1B89486C67E8A16C560DBC051028078BEF85B349D3058
55D633040BF5853FE9E50A671CA0A088959B2AACA1B614DBDBD906FBCB6A6B13
7ED6C5BF448F92E9EB110ECAEADA36CADF4B6D79703CA2EA9BBCC810A6E3532F
63C155FB86CBF6A6049D730B4729C613BD759AF3742399C6B118C1D2B38FBC4A
22154122B3E325ACA78A9D418FB443FB334F67F8BD2D33A8491FB2E85BA2BB40
F538F5DCA031BB3A7E6FB3A4739D0FBF029D44CF15CF0F4E368461034E5810BC
32C823771C5024D82679CBC9CF43613C60573795AA9E3B46495E299C54B7B118
D301B85C4D2420F01F7FEF73DEB10EA3E72321EAD4E1CBE4DC791FDB0F5E9B1D
768F764C46E7D01EAD0555B0FF0911ABE3EE03FFF0FCBF9160B502AAF039644C
3A057C26B7356D770E5828BC44EB166C04F3D003C21576EA12B598C980AD08AE
B93D90462CD7BC92244F507253FB5D258F025440D4942D01B55FEA03C96A66D4
AE9E4BE532127A626F1BE915BB0A018100E93D2EF958DD468BDD35AAB82EBD47
79085775DC7B6B3020C58A64
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSAM7
%!PS-AdobeFont-1.0: MSAM7 003.002
%%Title: MSAM7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSAM7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSAM7 known{/MSAM7 findfont dup/UniqueID known{dup
/UniqueID get 5032012 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSAM7 def
/FontBBox {29 -552 1490 1102 }readonly def
/UniqueID 5032012 def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSAM7.) readonly def
/FullName (MSAM7) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /squiggleright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE2340AFF0840F4834DAF35596F
E9DE0B4737F3B315B02C636FDD0FBD7BE0EDE9A89447919443C9E35CF9397982
7A238B1438B9B38C4BDD77DF9A14FDB8B9498F92C30C8D8CF9F00CED1FFFFA5E
4B180FCA9F198C85F6897F1E5CC4F574173CF34E9F435D48ECE6448B6147A276
0968A1701742EC94C57DD6C0A6D241A55570EEAAD527A3AFA8F5F62061BA2CB2
54C795C8D29C0DD60DC9AD070CD5EB46DCF0D0BD09D66E422AF7E5C32149D1E4
FC4F9825F4F3790AFBC832EA55113BE4CDFEC7367AA2947CF36D198266CAA1C9
8520E153BB5AB0603BDA1A2D7C7E1FFA634884FAEB28BA8F3C80ADAD8DB891F3
870708EADD906CCFFDB87329283332FBCAE1E5829A43ECB374AB710EA115E84C
D51CE560ED3A2602824BF4D665C9F070D1861B138C9538A5E840D2A81397D957
448464C9643E7CF3A6448B458CB10101608AD43B826DC097B4F09CDE961C51D5
5C4A8421E5CA05D7CEF9FA6E8C9969278A4FF94B38F0688EEE4925D1BF1E477D
1F598CB4E86185D53C7D89D225093561387ECC29ADF76347670FDFD42E4F9894
BE2721031E45B10B8D51EA0EB34E42722DB2C6644183471B519B5D647DACED1A
164C889C7143E7A3A4E6F1CB95493A7FE8EA938DC49A2AC98A6D5363DE686828
6FB05BACC24EFD91EA7B9E443F1CE3E8B4B5DCAA2C34EB6BEB731682AF7E8063
A8106BC3268C142690715FF150F8A705851A022C6353D7C08C8E7F19A10D2826
D141D8AE2B2E699BDF8774CD1EDCB27E2196654EFC8E961822B5AD3F52B6FC4E
E1731D95BFEEDAAF648B836F92EEE4B7FB419DBC5000859FFA8502EF39B1A196
7646CFC2DF8442D295794B2EE2C11FAA9F876FBAABCBA3EA3AF7CCC7927CB2A2
A2BC20403D6E180F2E52B67CF148F33DE9DC2E7660BA1F623FF4ED1B2A86DAC2
57C51E8835FCDFC1F711FF6CFE969E0BCCC9E4280E5EA41FC346A14BE136BEC9
0CB802FD202C988A67C792070B5A0A9844789B8BA633BB0852EF439F050ACED0
ED2C832358CB420323C2D2357D191866232E8232D6EE24B6554918A6346E406C
045A148757435BFA24E5CF851965E5543045A2C64F465BDEEB4F3FF556F49B63
F93B9499A606036FBB7F8A2ECD109FBB28A5417659A2FC59F00EEBCDEB3FCFAD
AC3E09ADFDBDCEC1DAA1C1137430D9F7E08BB3CEA595FCB14A633BC7E5A337E9
EF156FAA2989A4F6E3DDC3D6B4AA90584444846AFA025B050C7D4F94B8242B31
B79CEAD304D065B5F073EB4448324C3B899942E1A4F28C857B588BC2DD2112C4
14822251D47DE25B8B91C4BFC7D4A9FFBAFC46F8FD8C919AF0CF52A133514C9A
39EBD2DF8770DCFEA2FF973997B162DDA56DDE247D82E8A881370FCDDC5A3E37
19518F4D2C90AC46BF5000E9A0D39365C16750716FD1D36C2F6A7D2D82FE3167
3AB38362B290465A82C2EB7DBA3B1091BD4B03B9727AA76B81235DFD47FB8E13
481145B55AC229331830C2453F768DF481EBE9CBDB8DE106259DF4CBCFD70FC8
DF225B0B3C288795FF091D0F542592EAA0051A1F8C3EC52E418B1D4626E0D648
5E15E8D6F488950C4DE682A76F8DD650811E220D2ED6CCADCF65D46FA81247C5
2DA15A39CC85C4B8B00E8F1C1EE7C06DF61BFEDCF898314500A5910BBCD8541D
72B9B6C6929BF9B522C145E06E0BE7420ED30ECAE1F0F5AC5C1F178772ACBCC8
0961B4510668E8F571D78DEC6C213FEC6104B1CB23898374F9B5AEF0F9DB16A4
4CF6EB08680C290CCBB2A3AE0549AEA77E761F669248EB27860C55CF003F8A0E
60CEB44576977E198F182C399D81A229AC8D0B436A94DA470741719E026029DD
67AA974CED29FD939272C7D99552B3760EED0E73A15254047977A624929D1264
D6861D04870BDDA31AE48FA370228BDD6C37B306D8E2FB4E9BDB02B1BE6C15E8
331704023561C78AA727D9FA3493E5828455FD70C9A2409800A73EFDF73301DE
D3D2B56F731F3E46ACF660CD2CF417464FDC00D1DDA0CE2135F7836FB27F7822
F4B2FD0C6CB81C885C456FABA96C6E91D8DF17DD697882263742D7B8C3005E9E
E059E8352A559737E8670DDB5C6424D1BDC8AAAA0DA8FC7E5A366781D0684878
730841AEF095F0B0DFE76A107A28F510F7093206B70190A341EC8D818BB2BE22
C956C2D7658F7BD36699640DC3AB69D1844FF91B623E8C0BC183BD58F1191456
FD5C7D29752318C63388426FA1CEFC310ED6C4715BE29C56779642C1E625E141
F999C90E88B2BAFE996880294161067E83940741B82869AAE6FD54B196BDA761
5988BE5905877090A29A08C484CD5C4B483E7D2C8D3F81A4435E2CC3CC126C02
C881F604A1A6A13223AA3E53054497D90373B370FF3E6DB8415D89CBC3A6F6A4
5FA94D40118C1F60305AF7147FEF206120DE0AE48D44160CDB7B02270C34253C
D6EF5B6803C511162EF351D9E7636424B24C300D62E8F27CBE0AC5E14AA999FF
7491DCCF42B0D4858D9EE93313C0C19EF296428B03591255F8EC5057539EB533
11F954A88BE0758D105A331400AD9CC61A68A3D72EF98715D2242F1806392499
D5842420B5C182C5CDDD92812EA62AFF26E250622149A1A594FC185CDCC79554
B61F2C597BEBD61C0010B432DD2099AB9B4E675DA66CF013466154FB0EAEAC31
C95E0715F8C2007AD70F7D6504B47680E766D157C1E956A638F7BFC0A33980CF
B22EA049FE2767879DB61CE8DE3E4901802288707B6FC24A52A6828A8C6D27E7
1CD35550F3E212C477C7AD136278867AAE3876AC8FFA7B4C6933D6C6CE650508
DA3BABD53A5E20AFCFEE937A7809899AB31F89F3CB3B525718A96AE2EEA82169
5C77E9687E25F7E4754A9B9296C7B23BECC7A8406772C4D71D56C65F61C0CC39
9684A6EC31CD9427473FA28F1A402866881EDDA8F57F59B6F807C2752570DB41
BF080641B1BE3556CAD5211B3E2F9C2BAE42375AB023C29555501A055BB2F03E
C9996D698D74D2A649F6313337E73589F25541F0919D6DF1043C17C0014AF138
2CB674BD9F618B99779089D3BBA0E84359594FA53E84077F474CFAFD414803B0
C58C97E463A739B8B572EAFFB85E9056EFC3B932DF19B1BFA22EB50E950DE560
1B7DC5A1238DB16FE9EEC31B62A3B9DF013850A52090D6E201EB25B14629622A
D5F2EDAB13882147564BB7303BA1D5DDA47541E2AECDECF55424CA3E5E3565C8
70EE11D92DA5626D5E09C622C3E5E59F137FD862F87221EBF409E2EA8BDBB04F
5EE840C0EA2DD4C60CDE524A14D9044F56F29971440CB46893F076D3482B8DB5
6F7C367FBD0D6A159844C910C1F8D15853FAF73CA5E5E1E5DF835F3073289A21
FD9D046906977157A7029329A67CED2EBE4D4189B46A07B0FE3FE639319D5D8C
0BAD2D8D54402922292A90999E7B798CD00DF946100AE65C40BB747F184F01D7
29FF0D83F881CEEB1889924F09CF558E34F1C1B4FB2835D08C7711E9DB95B781
E68867F26849D4CAF213E204BE5E610E8A179481B5D5035962D794ACB811BC54
0BAAB827CD8E5E171F9FE0EFB717EF58769D1BDB4174CE853390F1B4D502524D
EDB7D8938C7464987964F66ADC3037C4493973B8B60DD4256345CE84D0B9ABAE
3F38FA1D59EF989BC3D2D72B1A060FE168ADDDA9BBF95B0FDA7729B18758CD9B
E28D1D899A07810619F26E4F33A7DEBEE7EBDDEA99149D39F3637239B35AFDE2
8860766A0A7877EDC666FAF81E9D9AE10BCA9827FEC55E71C526B322810C4533
A7FB239C2DB3876FFE3D0853FD098F8A865471190AAF8A4372AB998C35767818
0DBA18E06A435AF7F4158B3B3D4074C17DE7F2F7CFAA4B2938EF5CA6D834FA29
BFE6A44386D57ADE553AAC22E92685C80B56DFA539654E70F0B10BF47F82AF8A
A1470104CEC9A7FC4B15AECAD6C2A4170E0ABFA2746B1D31AA7A6F7D265A472E
C782B2EA831F24154AFDC6B4EB7DA00465ED85ADF5BCBD1D5ED773B6B09B671E
FA7077CC63CEB191649C73366CFE7E015050F44B9F6DC23CD73DAB18FD706DE3
38C298A7526D06861BBF613C19DAA850FABF9ED03C44A721FCE3F5A783C613EC
68872FAE9A3C242666B5448737C364FC64A5178B728F566D13C49F89AA30870E
62CD8748A31170D42278C863C5B6DB6DD35721BD65307FC181EA1BEBD1DB557F
B8341C175C1672D327A1868B222D5951DB4623872BB7ECAFC158EC7FC7C3F1E2
6652DDFAD093D0262F03BF220B8EDAC58C974C66F5E918804A0DA28F36F6B147
FEEFBEB9433986A069DAD48EDB6E1569AFC8AF0FEDA1DE4B0BB43C5850B50AF1
03055441E1C8AF8F48A10DEB2DCAAEEF70EBE7417ED513F1AA4FEE317AF24F53
39675ADB37ABAD3C066BEB486EB588EDD1BD1F8C134F8078B91CA4E6E4FE3295
4A19D7AEE4E04C5AC79B85F94E0D3C678C1C00B45FF779D6403BDF9C2204A3F2
B1AA35973DE5667160516FA3BB34D62101FFB365FBA6A7B0B58F6D0DE14B0FCA
B574B291D78BF2EC5CA84CC91112BF38AC688C57A2DC732746358862C1463882
E36E0DF66C7583A41D405B96A3E6EC988F440A18FA1DBA61D3475265234915F8
1D4052176AF0DD3C22905CD172EE5051D720AA1821A57CFCAC3DFF066C8C13B3
73297C1138AB6F2F7AE02E3B1B6315E3E3B416F8C7C0EA2F364D529864658FB8
C0CF58EA95073A55334918272D47B57CDD142CE8E61C3F6046F759EFC7499608
B57F96ED27F8F3A8ECF484BC0CA525F241C23A3CDE5B136739E07B925FE97A78
2CC2F7D1F4A6B02AE12B08530B3D458CAA08AC5B91C5389140A7F1EA8932894A
031841776C8B8DF05C5C73F37063EE9DD61BD44B183EBB6639782C4D42A137C9
B14F79B981AC71981689689EFA2DEB3FE63ED7907EFE432897CF4E44B78C6DFB
C5F76AD891A0F860AE2064F3D62F8C51409A62CC68AD9847094007128F6ECF91
D034ABD22D4F041440F4645225B702C0EF575A1BFDE3E2538DD6CA182F54CEA9
50CF135592A2ECC23AA20C7B6CDA039545B078B9FDC3C6FB3073D4BDAD253728
763FCBF50764345DD2BBCA168A38DC766344D0671ABEE5399BA0DF0D32CED3E0
B35CB0ED2A6A5E970113201001B93F99AEFE381E4497C232256276307A3BEAD7
5703439E2AEDAC2F88D9A6EBC18055C71BD859F393702400DE5FEE4A9806680C
30170F7A73497A83801E474929014C63F3180E91F184BA31D4E75691085FF5EA
8E0B820C41D0EE65191A4D1AAE6C7A013D2460535C7DD320205FAB5C66495E52
7A8A2827E9A9140D298D77BB36DA1856F7CD4765F2998A1803301BDB6147F5F5
F791ECA588A964D84CDA4E78596ED46C3060CD7BE4A1053970F5443B4CBBD7F8
83A49D7FE63ED0F9EE804032B723FA5C59A924BE5AE09C2CD55A181FCB5E775B
DA6FB586BFBB7D4B9FE5A47BAF5F9B7CC5737607755FBE8A858797590884D6EF
BB82F0DADCF4543672F2D6B59D63E52FBF68D21973945CB0401F8F861A2B0EEC
B36D707FCA9A5B9B78AFF6A43F589F4EF5F8D23FFC236F094CFBFC72A8E436C1
FD64C058ED3F24800FCABFE8762BEC2C0123047F66A6818108D8CA232AF3C4A5
57CF6B320B5234C0603A16BDC8770ABE3222816D7AE23FC344C37224AEAA20B3
48B9C76C9359DFFCD279DDDDF7C3C732A036D1B7E123F7323D3B9A878C0D3335
37D780E42841016960BEC9023680BF3E75CF3C312404CDCC442FAE09F3642AE3
B6D5094A66EE1244C7DDC72A5015EC9556388D75E52276D3C3D6BB2193FED188
D27FE62CBDDA593FEA6B8D5F616137915035E8CF2461923F4AC8FC66AA61F864
A651480223058303FBF7313D078AD94B88D50BB1ED8795241565499436B847D7
6A019E0E73D080D0CA82C3C386D207A8709CFA3F45D936B03EB76E26108B167B
D5CF733EFB5AC5462CC1B42515B3DB10545A66751DB087B65641C9E7D9A25F4B
2887A85BF7BBD0BA911423700A7D59495A741E4D68B69D292E0F19BB71435E4E
A09E2D2E657360C30FDB6D129860C8E45E9B40171074BAB9B4C9562FAB6D05FA
DD9BD0AA6457DEA22FB213F8CAA07A43B71F5CB2F5309CCF6070E29541F62090
BD531DAB5E006560F268B5DA652B59E4295D9645A16E4DB556844257ABF09C6D
DE1A7097E9C99B880B0689A9EB52F349FF35A42348C8CE3E7C3311BDEA51407E
842693378DE93A05432635E9EEEB09200F87D517B70E26B240E1491C7A769AE3
04F92DDC40647D6F64B2B15358AC2D2AF29F8B05636960B876B16A8BA64BDA9F
60EECC8DD53A5E20424359D36BDF1AA408D406F1D2EC7B0B46A354A8B09BF87D
209CD957AA9BEBD2DE01A4268063F3813EBCF4735CBA7A76A94C74B1C12560FD
54CD3195658189063D01F77384FE34345F4E1CA6BBE2A2C5E03B235DAE139CF8
A3377E167F8A3714768DAA968495959AC3BF20C586A43E5FCE5A4C7CE4521097
04EA0B68A6F5198DBB6BC62AED7CA9E82B42E1F4F14C9D0D97FBB61B1F8D0E34
6DAF2AB76A31082EE4EC89F0C37617B2011F19358E83185F851AC725F48AE0A2
630728B48B96D0E55E9A848795C9D95234E13DAA70222796D33162989FDDD17B
6870DF6EA8693F192A53D09B4BC58763013D5F561678AE06C248E9A23A5B38D1
3AC344B61D078D11058D544271E003AB85B9A25FE09B8F05AE2943365C0F646B
6D0770EC9EB2F5E5D8F2E458EEB1E7A92E1D18FD162760D776AF08E78DC889A1
FA49C8D1431EA685536C4151680153FC871DDD41F97FEC101B57EBEFACA6B341
A2B4F7F9BFDC428326E945420D095C4EE05DFB7709783B6052F41EE2C4687B99
2197CD3F01DBF494062E95CBBD669D9D16527BDFB61FCFC93DE7D935734ADAAD
5C54A214DA00B2EFEEDC79CCBCA09B303407A34D2F27B0AC5CF9CD0CC5324D66
7FD7C0A368ED4FD09A79E82CB0EB20A37922285B2D9CAF5E37E86D918F65A2FF
3E227DD1AB8FD61F139D958BBF0E621AB7BB35A3D545B24074B8C77C5FCFA138
5B881D12CDAE74C53156D092F1A971E740CBBE5C8AC34F0DE017885A6845127F
402AA06652A09F926D0A5059AC7D0A6146FF49EDA2D742F8C83E733C1779AB23
6BD5B2E75E8E105391146840F1C3E9D0C3807358BB10A6F3C7FDB73DE8CD081B
1BFF8DA0E6E35EECF7D0B6B797D96C8E3A2AAF6259950AEB94BDBE2329A1FB2B
CBA2C432898BDB71A109AE470CA37FFFCAAB3877E4C1F44F97FD223E0D51B495
E287081166E43B665FFB903E3689222B71BF427849E6D25084EF7CDD80878A03
05F898B7CCED2374099E81B67BB255A1A8D73C59B7F30FD97D38B13B76570E7C
137B60A6EC7E44F0A807375619BEB450E456B409F7C6085BA2874E038AF1B7B7
B5DCDDFAD3181488A8DB4F3179FFB47220A737EECF99EF3B73B87A9E2CD5EA26
388CB4294C13D666C3E9FB48FB954363F0A7E9944F93B27997ECD296387A98E9
803FB46E168665BAFF7744201225F1902141DA11C62DAE39553A7A28CAFCF585
72F03EEB1D709DAFA880DB7B200FF83176006D7F62A750D7DE8C1E7EC3DCE7AC
473DD63C5C50D28A9C8CDA3229B4A495B65F8A219B61B09C0FF0A4E00FCA6222
9836A7199E8F0D3595D2555130A50D094D712580DBD0E6560CCADCE6907B6826
ED6F9FFB5CAC6274441FFECBA1924D32555B620A199BA2A5C6D06D4E043C813D
A0CE1F3CC3C6B6D2645F8EA27F254490E04CE5E0D38F1B3CFA112EAEA648E379
817760012E13B142DBD0CDD518CA905BCE5758C38245E415F460780114F9E0E0
89B3BA15A613D59013D40AFB8D6AAF8C8DC13630AA0C916D3811B8EB07C99FA7
98AA25C91B3E8BF9FECA3BB5A479F2AE9C206BA0CB36C1950186E0DB76B456C5
2F858E4CFB2CFA8F22674E8EBF4F66E6D62F31BFD298B7EF1483BAF9D8A00370
377B7CDABC7EC169186A4496EEEA7EE90523C2486861D32CD64C1C751A2F3D48
BEDD914B65D4D7BFFF21945B64C64DBA357CEB457D44EE705E6E8102340A6070
AACBCC9B9725DCDE1F7AC2A828B0C5EABFB1E59CC0575F048BE9779B4296CF09
DFA2858B9008D3D9DAA09D7A41B592E6E6CE56F84009C3A03B270CD366F0FFDE
A0CCD01F31420BA2F699D51812813B331CFFECAA69D4638A536EC5AABE4F79EF
AB9DA5AFAEDE52572AA9B97B842FFC0AB91CCA49D2B0A16B370C0A535556225F
A5EC85C64E7B6A378D57CCB0032669A453D3264EA69A149FF925CEEBA1A2D0D5
8E3EF4517BEE16BEAE2892BD0C7B4D1E8412E0BA5C9C4CEE4FF7AC99E4D31EC2
76149336CB8879C75D0C77BFAFD52E8E00C731C5E1F641F0014211BB73721DA3
A3E2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTT9
%!PS-AdobeFont-1.0: CMTT9 003.002
%%Title: CMTT9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT9 known{/CMTT9 findfont dup/UniqueID known{dup
/UniqueID get 5000831 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT9 def
/FontBBox {-6 -233 542 698 }readonly def
/UniqueID 5000831 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT9.) readonly def
/FullName (CMTT9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /quotedbl put
dup 35 /numbersign put
dup 37 /percent put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E6BABDA4215500A0
42D1A3D0D02C0C98BB1D6ED0B7791274C38B038FC7921FF1FB8FAE7258C09259
4B8E1BD9EDCEDE9ADAD9BD9598EEA9691589649A9A21539161E374075BEE3457
689F308A4A7AC9F2FE4B301A6C36B0442FB92E3B002623493DC087800B5A0521
0DB96A23175AC584DE166F59142779F26FEE9783E28DE49FC3A8D6583EE63FBA
610DA773CA18ACE6F64A4867A1A7817120ABF9DE4D17782866E6CB6B65A9F6D8
3667C8D3E61E5356E35343FDD4C6436DF73934470916CB5F0ECEA6BFF092E735
C7C355B56189D1DD5715EC97E50145FFC17BB1497315A9585D713A7A6DFC7933
995468EFD0F59E3C15865B87925A3F2930E20D5A35970E2C44F1629FA16E00EE
EE21EFC50D49F5BC02300D0A7BB85E649CB4E2E828C8B1C5469463013E71D723
2CB11BCBAC191AC751A2AF7FC228395CE9472DC1809052012AEC2CD66695DAF0
4CA04234F0187F4116C93F59A7F1F8123DE87F111853B785A20CA8B49B3B0CEC
B11AD345E1A11578D2EFEB0536D125237086CC8CD9F34A5137AC5DDFD8746014
D74AAE8239B81ACF65F379CF2153B06A238A2D767F294CAE0D79228F0B7D45CE
510AC9657A1776202FEF42F96D476E7DF407786AEA12DEA0013D3B4C5D0640F5
BC5BB72C34066270399CE595827175B23B25072723BD24E07F6BCD9EF0175DEF
93714BAA53960F81103CFB731CED4A267B53727BCA3C97B0BA5004055D4EF0EC
F725658E53AC86E4061B489AD4154915C3981B3B703E1E2A8D390CCECCA99385
45EBE35441B062D7D12DAB2B31569387187D74A4043FD71F1C6D352EAE0F6757
4345FBFB6DB15CAE47CAC4BAE47AECAE5FF5EC19057DCEFA1B23F47364ABDF47
088A7C6A2AE26B10459B6D41CB69182FD1472F326CE3A15B59255D1DE3B616D8
9D1F12561038839781E657C896B8C58A32DF5AEA23732A0966D96C68C988ED7A
09B7E2C8F9F3D0D56879764781566299A4EDD3588BDF70E3D924D25074F30988
E35BDD827AE4D0B4A06F55A9976BF0DB3C0B1D09CD08E8CB168B50617691638C
0EC1A791C228177D4FFB021EC3DF5082CA3487AD2EFC8DE9466A690ADDB4C52A
FE2A6DB4CC275CD33D9136E735279FBB2008D59E667905EBB04326EC33C98B2C
94744B7F540D86E90DED64572ECF1EAD3A58EC101642B245A9C7232DC8FB8741
03F97883BB32FB955C22F878FA0FD114451A3B3859B0B5537AFAB73AEC7DB2BF
409E1FB41D473714F6BEA73CB085139879FA31710E01915C2938C37BAD6D7D71
45B897E00857D3931A489EAC7B42BCE4E65F73F67FE027CE482DC47598ABCB95
39E98DA8ECA3E23F0799D5963ABA6E2984DEACBE7B46B40ADC6213E0F4D08971
58F68C946C748E4B4217CBA2391BE2086C9758F4E32C9B6413E48D84D33A6E85
84747029C0A9C9B92841D217A902BA8EB333999D62FDA9F82BFC8ED11F67988A
0CAE42182E414A9766AFFF4B046A09D476F8E3F15A8C7829BEE982D8350BDF5F
F215F2BBBF68D4B567BAB798B9604C79306C475926E9FEC0F07A99F43473C6FD
B15AC29C3D07FEBAD1BAFF75AAF2FBE94F104F1DBF838044FAD94B661B06AECD
D9AEBD02B60CA4546DD6B5B5C1A3833ED07845671CEFCA8955CE0DE5DB8FC93B
3306683CBFB8E5B79A863DE78D455DE9D592043C2686F88A43140F8B9F3B553B
7047420E93E753829F8D47AC7621CFE3626F271E31F0019CC02D0B57F67BB47D
8CFB63E902EA3231C00EC66EEC0D30FE8394558BD3535C888C4CEFC6EB72E737
712ADC6300162D5D79BEE0CA1F6E4127A0BC90656C01692F6D82C85550AFC97E
C2693E379160FDB9636FA41AE9C75B7F6643B05971C6D67CE30971D590FC07B3
E0B36B4D1C7F25110B5DA2130D574FA292B47322975A2BADBDB39AAE69BDDBDA
A880F9AAB580117708C79204DFFDC08BF4A48919B5C22228845CE8C3109E93AC
2479E523B8A1C12A6E541118F121DC6B4EAED83491A03192D5C3A2A45D1A2467
757E7B377C635CF5CAE11A7CB49D49F3A1BB2286090B5F0E4F89869D1771D50C
54B5C5E091E3048A2C194F0ED00DD64FB95BAC6FA9D61ECD093ED416DA3A4981
DB07CFF17C4F55C62DF628EBFF06FAC3F3D3F91C30EBB34052BE1A08F5EDA4B9
08977197950A282B84E21D43C64BE3AE4BCE22C70E7D392DE09D89B7F23351AD
6AD37225C12BA79EC9951F5DA1E505DB26200190ADE0E549305B7530CB86EFD2
A896F13A97E51754F70B609CB4511CEFC38BA579C071E9510A49982389980DC5
336D6C4A2DB100DFEC4055C7AA9C55880F94FBEA9EB280BEF66CB8E1E38A359D
E5AFB12B540CD599085ADDA7FC2C72E7C873015773FFEECA2C596B75BC39A3EB
3C43FA2E53C0D7993042F3D652BCC483E48B7F6C94C3FF6D38E276086A6AE67A
E5A571B9C72E0D7824E0BC2ADF51A393B9E334649F786EC1923C854382B89627
1B9E701AE5A6C42E672B2C6A33C8BBCA8F69B9061E787D6B92183F20CF4C3903
FF5417427B84798C82BE28D2C81624E3920CA61EC9EADB364B5A6E50E49A1A72
A9A090A1FCD84814B8B2708AD787D2B5015DA1305874F58C5EB62F843685FCB6
465FCA80176CAB2B2FE65E0A270BCE1E3DB97564BEDFAE5CA44395A8DF4505C0
3E103CC3B914359B2870DA6CD30382EAE8949131CFE31E9E75C3E47A3834BB32
CF183D4A8B9001710D0A11390C9DAD116196568591D38C2AF4ADD852F31494EF
573462759A35415900360882739789D6B89ACEFA251C5ED90ED704DD7C3C80CA
9F6CDED69537D201D520C99E69EEAD5D3C0EB84C166660B3C190166D93EDFE6D
15BCB6DC5CDCA825E48D33845CC2FB15291AAB823F25CF8BB0A1EAED8BEC524D
D9CA016027141FAC9D35B64FB9C224552F29EF6B32497254E319090E698FD8A5
15491CDFE1B988C79A0E3B9D01E12FF084E9FA86CCAE02A3EE6F2917B61A2CC1
64B8CAF309D1AB48A34227A7729DFF99CB6EC282E3FAEDD2673779AA7E4C1789
D93FDC37FE95F087C5F88F53D30A2DA9C913BF205FC6BDD060A40184F4AAEB3C
D080D63B89CA3DEFF310D09EF0A83F3914BD5B7932980ECE139EF0313C20B4C8
576EE0FE3F28FAF4D3CE7CD0890BC824A85B8EF4636BDF1EF1BB519F93D36540
ED09FAF93FD71992CA2CE2E83F5355162ECEB32AD218092F45D5A61A44E67135
EF0453589CECDC6962D0E8DA7E7567603BAF50B2C8F1CA65EA5320984E7D69AC
9A7D3D7F92565D79E8C9DD2D92CCA7DE9CD058545E9F98AA47904D70E1897099
3C4C852B3BA131DDD348433C336BDF5FBDFB62120DDEAEB3255E3207B0C84A0A
1ECF9EC869DB9BFA3693B03FCB27C5A5D3CDD62630DEDE91B4DD5B9784BF0BDD
FC6EEC3FA7ACA9E15FAE47CDD9B7FCD2BF0EFA10716F08C0AF25FF67CB6F9598
C607D2FCA452417D2C69DC808A9441A66492394C3450BD30632AE739EAD654BA
4343459CA36B6D5B2C12C39495952F2EF93D82C73E33236785A79609E260C4E0
CF3A3C950DE71DDC3939D42DB1CB1CA917CEAD56979A70F8F3B207C805319FA7
3C000AE2B21D711A6D78C7BFB901334DC06F59EAB6D94B507734C27971F8458D
D00193645AB92FB8FE163D5C51AE4F40BDB4F2C51691E76EE0636F071F37AAA9
BA78BD12459CA499210EB0CE2F8BD317387797C33F5933AE7A6264DA06B4A6A6
1188326147A16B205D1F965872DED7D8EDB3294FAD2FCDF0D423329E9CCF879D
4E0B966D509F45527F7609DD09694D286F6FF7535EF8971B7DFBAF608A19D442
C133207EB1152ABBD11C455D0977F66A9B73E51381D1CA4B66E87C0C7175A63D
80C699A052F00C41DAEF42E7A40E07B1B14107AB0787E24E17C1462960E3C54C
AE73BE4924464FB177EC62F116B2822842541543EFF7ABDDEE197D6BD8F8D4E6
59175D8C5957550B70BE775AD52FFF6E7C00DA7CDC16E1DF7446BB5D8FD82647
3E9F87D5EA365C82A2D991321ECB14A9E3AEADC5A56665DF7072D6DAE402BCB6
14D92B17F9E063E4E9D8D239C91F5C7C0BCD2FBD936C9D4A0B57659420343B59
B395BBD1AB5B6003F653699D57E7581F9813CC98D4F072FB78899D6DECC42D34
F2787EDEA64058B46C4BFAA2BB96E9BE5CACE8D91E4C080ADFC0FA0D4A29C6B8
54FEA9E11DBCF53D9CA40A21AE5076451EDAB3593E56B6D453DC8EAB8C78B588
34D4C4F36861B5649BC1E9F3091E704BDA7613ED45C911DFECA74EEA05165191
825F95A947CAF382FBAF01F3B8B041ACCDF39718D7DC5BA6CA12BB20EEE96439
BF2E2628AA3BD2C91998E6247A690FCB0CC95F286F427345CC4F1115BA3A6E54
4743355F2CC991CBDFF5725902C1F5A6DEFDC8638A26EA456C33C27773D6214F
66536CD2E44FD253531732D5A8C44B336B1BB47B0477350EB8CF74889B93402E
2356A9CAAFCA562315D8E0B3F42F08932CB87BA2499A875AFA08D11DA73B38AF
F46D03B7F639A8D7BF88CF07FFF4E91716DCCE6E2CCAB60A64D5E40EFD8B336A
1BFCC4CB04F49DE1FBDE7AA5B2092A6EDBD913D161A3271AB6411622D0E14416
37F81E0102F5B0F2F9A2B27819E4BACD7C50E29D6291AE5B0973C657761545A6
741729620EF2BF1046B3913399C10982EE5F4142CF461EA31042E432CC79A1A1
39C607D22E45A6DEC008CB4BF6007CDE9DD5802B49A62C8E02A6D448B64177CC
887AD71D171B99E7ABE2085B37D90B3BD8513995D9A57F53184DA474F6DB5E49
B73E04CC214EA5398DF7D7541F94E623E8687B511640457A48A68E9D9D6584CD
15B57CC044D8091C771D175F2EEDD411099BC8F7B4317DC503BB5E405AEEB526
5E6E1B1F2705275D274E012A98F66075CEB90AFC648B964DDC0E9C4AE7B24CE1
80B051022E5781A533A21DCFB97893847D685137EAD85BA708A7E118C72FA839
A9E460B5D17365A0AF1F53A98319FB64A5819B087F554BC056C4BE44113A5404
BEF759F890C1CA5E7AE156F4F8106FDB4F8DFCCC640976983EADB30976344048
2A86D7B2AF4A01CA736B98D52ACE392AD4BECE7E61C710B08B66F01857CA460B
B8376E257113E10F6DEDF14CE2A4E6A99ECBCD302C36CADB713D849EAE9EB598
F29DC98531D793B79F83091F9B136809E006F34E423D528CC4309AFFB3EEB47B
9A9DE4D5B25CE953345C326BCBE2B4912641780637783084D3D12693F8135483
CBB0AC4EE0B5610D7CEB7DF205830BDB9BB404DC1B28FB0824CC187B26C19A91
DA0025EC739BF3993700101D042DED86D67F5FB87912CFC51AA7DF53F2162D62
6314A2CE13810D0B8D81F45771391A236422CFA0F35F7A0CDF14ACB2724AA57B
7C2C28D53029B1146558610E0CFBBF72A85AB9BA308F846228F299F13F68E8F7
D963B2EE9EF7D4C21690632B640BDDAD0556EFA4EFBF035F13377ABB5CBC280B
9E0C12AACB153C93351E5BA95A7D149010E204950A59C7FC6581D9703468C1E9
EFAE37E7E6ACB892B3F8D1248D9A4A72F642FECC5E0B25C15EEB921EDDE84D12
0E524FE6133C4921FF4921242392C12FBE69744D53739F7E849C1B96C4020AB2
1FF10DEA608F111749E2FBD8DBCB17F353DCB3075B4F4B8186963EFE95A76A10
85AA5BB6DB4095291974221829A8E436680F4860E01C3843BE5BB3101D0869C0
EFCE08D187BC04F58C7A450A59093680A0F09E8E3F12DF5223E7EAFEFA01978F
D8354753A68022CC92C71F2CA732DADAA8A466D4AAE5999B0DC077715671F518
E6277741F44AE798EE50DF44CCF71FCF8BC71F76374005FEBC4883C6EDA854B0
88C0C2B476709AA809ECE41AE786DB1A32B3FBBCC14921673578D3514C8CA842
E1FF90BE33F7B93ADF6BFB8B1AFBBD080783BEF056A6BFAEF676F7BF9F2DFCC8
01D255A9F0391951210D60D4D4DCA93AA858B38C0D7B8FD740D5FC6F277C2A68
54CC2DE1F40B6347201FCA2A0A91822708D820CE645C3E4E5A09FE25721AB33A
97871ED448F38FC5A349D81F402B34461D840D5768BFC6849439AB6115104F78
B87115B1DAE12542EA898F86ACE247709817850B067F537E6137196101D46DD2
D842EA03EF4501E34074E8458E638ACC4EB349A7430AB035BEF2DD4CE00554F9
18F9FE32A55AC1E7E50D64AAFDA278D77A7149C59DC5B1E3064A4B281A54C9CE
A5EA94ABEAE4C6D5674C208ABC72563976487136AF2E21F835BEFD232D7F0D13
1D19932367F51D5379934DA7F1635AC51EE5CEBFA63D4D32F018DEF13624EE62
31DAE68A08DBE3B4FDAAFC75291C8C6CC7A657E3C7453C7D1461A36E88E633D5
408253B673AD87A9FB2D0F56DF1305916D14D5DD62051E27BCE09CEE9A1F14AF
1D7164BA5FB6E6EC8D38750F7E28BE330909F303ECDEE692E347DE13C8C2F82E
29C8BE6EFD76546F362A12A1C2DC12389EA95ACB4DCBE95620F0C193EAD91B33
BAAC5801AE827B9AB3FCE5D11D1D7854F8FA8A31670119CC0CA98628F801838B
AAC7EF90AC5466BE69CE3E3CD9951A5EB9AC08014285422F6DA6F6E221BB30F8
0042A11F2E4B765BB0D142AD52F4D85785EA71B2E1CE20728B9E9306CE93268D
99B822A5AB5232EC7E26EE1160850AD3905864A01357F22722B6A54D4EBE58CE
480EAD9FBF068EE965AC4B5FD2FA8CCB91ECFC6E90B9C49268CA0B0FDAD23ADC
D5A74B41149BB08454054C451AD0DA4CCF8B60F2EBD061AA03A011D548B6B481
FAB00AF9225BB5463F27FD67333FB51F8664536267E95CFAA0BE3BC1B8F889CB
587A3A4FA2B45864F07E11372C9507A625C0030EF7030A0B4D931BCC48F6DD51
A4D1F63FDC4B59C1CB18E6242E9F4B4B8AD9755B870FE60D640181FB7EB8120C
C56F51DC8C47FCC6318C2145EDCBEFA7BC4253315BA67FD2B3D4AF6A9F3F229C
AB75B592EADE15B1FB5FDBA1C0F786BD21A51506B7A2E42C2D086BA6F84D1B3D
AC7531545F0B01346831FF36A52CAC1E390F99AEDC265B44B0FC9C581BBA6BE4
48B723811EBCAEA5FEFAEA7E5B987F2C7B3E9A65D2D14A7B74F099401C57E367
385352D0776D2A908F7A5A2E4D4160946C5591397877025C8C387CA413EFED56
8B142E8341E349DB4DBA422A4FEE56A573972A0C66590175158E48850A9F7F38
4B95726787B8F969FDBC97491CC81CABC976CD00A27D1DFCA7CF467A956C1C6C
839817AEF8794B6151FAE9261119DD5DB787DC9D3B420FD325ED6599FACADE0C
320D54C2E0D296537E22C1783670A9D9BECAEC63853EC2F05A990260DC189D63
7CCC0BDDF2CF7585071ABAC14630666737041194D0777EA4292AE60BD7F7100E
DB568C90F0D899EA006CA423CFFD6EC70A5D3D8AC43C747DBAD3B02219E47D8D
DE030631F4678C357A58ECC52782B31B50CFD44EC33F41585E51B27E3997D33F
461BEF897220AEC80007F13C5A1EE3A0430CA899047DF944831F8B010A7DE74A
BFD26001472DC00CDC9F17CC435F61ADAD4E9AE062ED477FC621FDDF9242C449
1BB3F77FDD1519A251B663A693D84B42BF0962F537757F38CE5C5D56B98AB10A
3B70C8AE8D52DCAFCEC22E7B09D3C4EFDA1841C74CA975E4F8294F7BDC796500
0ABE197ED3737A65F7BAE601C91DB3983EAE11DA3EA18ABBBA3650DC361C2E77
EF9F97618B0C337A906FF39926D2B0B7883ABBA650816C4C6B34EEA836994EEA
AFEDDE56E0099D0E09EB88EB093544B9BF4871200746A0409C475FC4232A38D8
F3105B0FF44E4F132378DD12D9E796412FD0F9478322215E9F59E69396C35AC4
097C4995B2C3BAB2DD04B1A7097DE16DFDD76465E79ADEEBA90489ADD0914EBA
53E11A43ECB11D072C68D2131BE1C7C43CB9DD5FBA0A67BA43D6851AD4CD3BC7
39AE2E22CCC183A56CEB71D4F9F578518E376426E42B6390426A8434B5A83E78
77A5B9963BAECD5FA5521C2A29418764E4EC1A72462B04957F823E2817A7F8D0
1512919889500024B1C42EC107E8B8533C0B314EE4E23313A4C1BDB009A2073F
9BAB479A3F9DA76CCD65629CCEF78015ADBC2D0D124B3BB2D322FC4D209E417D
84BC3C758B6AB64A01E25C9C7B71D741AF90A19A339F99A0BE9FC39622F04C6F
737474CFEC19C890A657BCE192B9DCD8F273CDC5294875DD4507DC572551C934
9C362FD595A429FDA2D815959461B0CC2A804C1142BD91C7567082699B8E274C
6A22806D6C51B7DA809BE9F612EC537D4FF3122644AE0718BBDC6ADEFE7EDBCB
8C8A76CBB280E70ADFE563C01CB9EB828ECFCD365825941C8B7E1B1401AF773E
0D3E8A6F2D62624F8F5FD1EC3CC76254E4CCB4D8E4DF0D5E6DE10BC1FD8BC325
05E773E0925B6838E0D7ACF12AE32E572F6642EA587806FD2805C9147B873194
788B8162F3C20C915E4909B72D0A62D4A2B63B3825F96C42625DA10FC0E9ADCD
77F50821EC585E180E41394867808979C23918F676866BF7C9817B5DDB161598
48D2AF4B0DBC9D59A55932AF70ED4859B02BF8B67A1B73C9606AE8C4D286CC54
83A47C5E99A7BD8699861D8DDFA56B6BEAD008C04DAB5E433E15FA027E71BCD7
2704E17FBA104A339B26AAB64EEAB32EF99EF2C6EA902D18B4DE7DBDFFAE171B
813E524A2ED2A4638A8B13ABCDE732232316DFA2FB060F1A57A5F35978EE0850
35DA3F0450432416CD412B4F645E8F9B14DA53D6B31190A7D7E078EB6DA14B5C
ED87F47BF1FCEE902C50AE56D2A46FB7E9D51169763AB0139F20F96AF30B680D
7B44E22518565379D61E502D5ADA22BF8EBD0B851351920C6EFA019C0CD3BD91
D8643FEB1564277598461BE0C4BA88A7272542637C3DDAA601BE794400FBAD11
1133F97B5F67118646E0EB9CF319708CB3EFF23124F14076D7399747835850EF
98D3F18D49053C8116AC7F200FD0C37D1C899C7049318834F27BB90439B720EA
3FF40AB90805ECE217C9C8B012882ABEE024337ADDCD41C533F1A74CF62DE36A
AEE8DFBE985EF5B5A6CBF8F52C7E9502676726A268DE2E1DFAA37710AE731AD5
38B95A2B94C9324F761C4E82298D89375F2FF2FC19BAD4C5932CD3758DE18D3D
783CF1609CF37878377612F5478CA2935F42101A0D6626F0491948CB6B9CC5F4
4720C9BEDE24F8BDB1D15B675F017461766991727006C42F076F1F4D9C9F22F1
28EB16E9972A9D1770109B577314583FD4A8E89834506E212F55E82A7D0C11ED
0A078B2A6B0F442DADBEBDD132D7FB2A424D0180C0A2832E36755A48DC533A57
5B32E6A95986E1DE1FD0F80A5BD13338F3AD5E296317FCEB637EBBC5B7C177A4
1E60715D378B440C60A67745FA6B4C0AE8F7F7D6FE5E82E0CF6731AE80BDED81
78ECC825336DC419F8F8D371471A7CF07F5D358AF52CE6D2786BF55AFD2A2563
2581F53D0A38B43E5506D57043634FB1EC1FD5B874D89919655ADEF2496EAF45
73FB9EDF11B109EACA8B7563B1F4C021783C7E07B5C5017A1B2F32EFAB33AE46
3F72F58E27AADD3BEC9FCDE70857B7024A68CBB2EAFF60C18DB3852800E70835
7CD2C71A4EC55C84C7FCA14376ED4786C8BD9898B7B444172ED29A9C75DC1ECA
47D639124372C2BCF1BEAA2C76BBBBE75B40B77B9A7E27E67F47A18E510B146F
9AA514E33EC054225E05547BDDDA14C8389B16B76843DF2E990238CA82835F83
EC28FD7E3BDD59A316C925692C7E1938F8E1C171C95E40B2453462F87E4CDF89
CAC7E7A35A8760B5E9CA2193ED7D4D14B68D59C269EB00ECC759803630C901B1
19FDEEFCC3F5D90E1BBCE5664CE09032EDE0D0A34726AA58A7030641C82E732A
A47D7E3B8D274679526607EF648B1C532BB42AE507DD7ACDCDB517BF4D69A8C7
5D2004ADA81923DDD5C0004DC4508DDFC8D44D56597D9C884F5CB0F5A1C897BE
FC5BF81FFE826EEE7FD6A134575167F7CFB30DCA41F8B686162D5024D333FA72
067EAFF58B3C9E6125F827CCE60E44F72E1EE4A75BB5AE8232554FCCB0F72E11
5CE882B735E8CD035FDE56F740884A016A3A208A72529D2BF14B4426F8525067
23A8F726BE1B48939A07253C494526510455D095908B5C99684EAD5D96A05773
5E33EF14413ABF08FBE5722C52F6493EBE72C6A4FBB76CB22C9B7641C67821C9
6C66D4C3CCA34E7CAA1F8C9FA01AB26E9AFE6CE9BC0584C52B799272B6D4E668
A916CBBFDB6A6BF5057FE5AE4670C0B0B61EB5397BA1AF6DF1EC69F93A926ED4
1FF43F1555938C81292AA606D794E26E5860F7E558173D8E13012A17C6F87FCE
5655485EF760A133461F5215CBE8B36B2B3B7ED24C3E85066FC1B5B3ADE5B567
9A5EABFA0BB9DC46A3E01092F5B4BD06F62C27CF24E99E5A8499C6B73BE0FF17
D32D7B233163AFAF01EED8AB840C53BCC0AAB8BBFE5C886265506DDB1DB23188
FA1E6F389354A3FEC8E74699B29ACC7C38F97C527AB079EA86B3B7FFD2698E06
DE46D36300B0987BA939AB9914D74824E87DCC38A6F2A33C05395C1FB597BAF6
B99B0274309099335FAAE4CC16954C30A41B969EB023184D7E49A8201ACF9388
199CE185BD697FDE369390DA52138C58B1A0C4ED1DB795AB463ABC0992CB4BBF
5DC478AB71CA71ADC085702CDE87AB9EE63C91AC6945FF312F90CDF8E8E15A21
FC023270C463F4E93354B7B31454E2AF0B02AD2E4426273A4B016A97D14BFF5A
B78C02A701432BB5846D630967777B9832F748E64130BE1EA12484EA8E608067
453FB8B8AB4B9BE20EB64D2BE53D1F6BF7AA4D8628655EEBD4881A623998EFD5
BB8677E2378105AB88E7621E3D80EB8667011CECD1F1B60B2D3931680CBE1CF3
93A371A7C2155A7A6641C0CC4F48F9918AEED9BCA110A1AAABC9D709B4357C2F
42DC06D574062619FFE76A06F0C9D517A50D92AEA31FBAADCDE071DEF75A96EF
3B62D014214D70A7471A7FC35B2E20DE8E201874F2465D803202FCDEAF4AE428
6ED6A14C7CD211433C8276293F1268C3A03B8A7554867244DDB09EE0DFD37A15
1AC6C165DBA9A642B162AA82FBFB0009F2E03602D37F040AF5A623EB6FBCF61C
A8932525780CBB54C1B94CE551F16F32D283E4E3ABD2F811166727D536CD1B62
09010F2657295D7C98A458364F118C10FF5048FE5809CA5C5C3DC3A756BFF912
3453A676C7AA106717D122D786BA263A7D62A989C07DB0DC01AE3190C11B99C6
B0933D4DD03DC2DF0FA0FBA12906112A0EF6F2E2BB51A0900266FF74837A5193
9A4BBDA94F88799EB9D0B6E1BFFE5D563B12671A5006DD7C2DBD608C0257B94E
60EE8874FBE2E6A19EB1A69EA2BB6CB7594FF1029669952F6B91562476B3B54A
3E6AC7157B4C7C406209E8CD4A837EFA14F9C2FB26C3AE11D5E6A94E0C92E3E2
67B394B5CAAD28AF2785A080B6613F78B2B346ED97D2A6B69E69EBE252B8452A
B4F555BDBF591BDB20BE2506BEC41758B4122E88E5FC5A61D47A0FFDF8B4E240
686C080F1CBE392A3DFC88127ECDB9F8B1D14D3594057E1CF24157FB3A8C35A9
AFABCE542912257CF8C8F98C449F4EA2DD9CBE6A0BD342518BF0D99FA5CF92BE
E5F0038DF35E244B86416A5CC389A4EA74413DFE58D8C17C809FC16AAA0DD3CC
84108FCC5122F71137A94B7E2E3C577C99E618A7F632EE6ADE0585E17C16BF1D
45553C39291D5EBD1BB1420006A5761D61C90893FC6E41DBC5F260B77F55CA97
61213836A2111AB20CB9341F250CDFCF2EB0F1D907C760EDC622C7176DA78111
92A771BE7E5CC5B80327A04036BBC5BAC9F86D372140BF07ADA3695E54EE79E9
0F2B089EFA253CF8B9312CD4D7C91A314DB3ED4BAF95ABED07F62E565E661354
20E4FBA14608A2921D45267DA860345F4E5E57936F9DA4F765D2561061FD34F4
2B6DBE363E8F90258269C0A2FAD8F6C4B973DC4DD27607CEE096C124C98A39E4
0DEB83943C2E659AC18A1A0BE7671D3FF8F2B4378F7CD800A050BF7C766A1F1C
6B595177152FDB30D49AE7BBA7E23C987DEE9CD4AB50BF9245239A980099E2C2
26F9D63DAB1A305696F7409EE1FD20089DD94B8581B0512B8557179B46AC7AEB
98DA586A686A4B725DBBF0F5A33F54062A34AB6C1F69FB4DC419FE5C059A3791
59E5DBFB1D268E875F7EEE62A7EF542D85B1B9346860AFA2483FDA37FE4AB2C6
596ABA6FB8B26273B613022713E2434B38550CC644DA0CD8737FCDD4B3442AAA
E1AC08F619BA12AB7B99A6EA13D46376A1965D0F38C49770AE23986F7089A1FC
38E06F563FB19869FC116E69B797EABE685921C35B605A0B90B507589670C05E
C6C193D434891DE54CEDD3D6AA61897F65D733122AD650A3CF3332E747CF0648
FABE16F3F9AC021F29C5006A6D17015DFD08E16B7032008080C78C427E46CEB5
155863F71E360FB6EFE056733A98DE2CAD9A611E9BDBF4680EAA8F943748C03A
F7F7412B9F71F448E5F4FB5B6623BC939695C1B7C3884BF603997276895146F7
F80D5EBC69BF6ABDD6B4BDBBFD57347643BE94ABFA6737B64C9854DF8ECB560F
B78A9681BAFB0F0EC723377300387CFB1625A33181F5197C15558F61018F3C2F
DD532AB56D8FBEDAF82C5F734535A726ABA56A44BF86303A2214887658E997DE
1D4DBD42EEA51FB77BCBFFCB1D4B6213AEF78A82049AE2F1FD4679F2798AF1E8
0A465F90C05CCF78C7DDD293EBABDDC47525AADE73BB10FB4562BF463B810E4A
8975C1E44F7FE3F625DBDFF56A1A66E4228021042E20DA4DE86CD479FBA173EB
6F0EF0BEC07003F4BB56AE57E43565994E01396D831E05A412016FF8F40281B1
7AE65AA11D8E421BC1C4408E082C9D2B47D5A7B66B496DFDB70F3A9336582E35
06C885798C932FCE95227FAD0A2696BC82E13C403ABC4D5860C3C1DDDDA0FE98
6EA58BDC093ED9963E2EDCA022B2DEEF0BD214E0DC7D0414BA54323723C56BB1
E84D6AE7111C78228BB26C98FD891BF11AA84E5BC4BC78CF6C16AE13819B43E8
21EF50A46946B91FB7DAB09F5C6877103C262EC5C77C25BD4B886CD425DA8C78
90E21C53171B02D4EF01D9FECD5C79C9DB738C9212D602C6AD633E5265D21517
2D74709E60D920D606409E95507ACE1CA0044BEAB85E1BC3615419BEB68C41B9
611F2EE2A435976125A244B2AB65199668EC0DA5C3BCF25AEF4FF7C256B7ED84
6F0C7BCC1EE4D982E72A09BDF1B75A0030F49F3FE156502AF61A744348CD11BB
7A35D53206E2BAA2155FD690FE45AD9D3DF58247D09317D99232567FEF3D544A
3735F42F2CDFE81864BBB687D9E98E31F33005AD0078CB66F773591C84584C8E
B75146DF803C387D4FAE3C46808821DB13694571CEB86B37B15CC1049888A636
CDAE719A754788991A3628EC8A78E1357F869B019C8A9A5E64A08B850A2E8A24
063C8FBE9A466CCB61E2F136A6DEC04732F6EB287A84DAE87988ED06A2280238
163C7CE0560525A8DA4C66FEB6BF397154A324E7F35BB21F2AF608EB12E32CED
5C13B154FA7C0E0BC184A08CD0435CDA15C583E9EB7B08C3E0E686C37DC4B1F4
2FA17805849B895786EB7D05577E0312B9BF00313A2D3DE1D3BFE4A3BCE19794
48F2A4EA84CF30A0AA151F7001EA32852083E3C702DE3B6FB17F379BAF7F1073
C8C2FD411FBE163A70F883B37A03078B5C64604EC9D0DB7CEEFD9F1155099283
A10FE9D642CDD430B491091EB1156A75765DFF990207117BA0F488D54B02B3AB
BFBFF74079E06A7B027AD2878D2099E4F9E87AE6657E1D4C48E8F6A6B3350FB7
17A2A8ABAAC31568AE411D47D1DF3D95565564E541636B9CA78B758DE8031B8F
D3C6F50DEEB7B930FBAC4848B9E11C071BC811A91425BF51E11B44ACEA5FA434
5E288FD0ADF53BFA2E896BACB3A237CB9A17DF1972E63F283F1424743D5CE28E
3F8843C4A7D50B1241DE064A7288D5B92E52F9D8B0A73397DDD588251D37B8AC
06DF448AD327444E8CF6ADE5D6C79D13AF25FDA0E9C6BFD4F1F06912241A77C5
A549B9B97897CDB0C2848C5B1E3EEFA616727A856DECC446233968B736ABB6BD
17EDE8A2B6DA0C0DA204EE3BF4FC065FB58ECB31C5A4DA8A9D277175BF99E911
DBC861B1BF22B27E9345E95FB74C382154C4BFD5E07D134665936CC4F99A56D6
77531A250128639A86DC64124B105221CF17B579E6F112056021B1B1CD076B55
0D4389A10020BE455DF52B9D054C26E5DDE781D66A2FD400AAAACB6C1BC52F0B
D4F7BF2D3404F52A478F2C3C36A58C6ED694ECDD4567AF6B62E441CDD07164D3
E86B4F736114FB4A283090CA40AC9B21A184F095D15B8A83D449DCA5FC863347
A3F53F5A09B910DA890A6FD4AA4BB175CEAA0910296F52121FB0EA16D1CB77FE
5C6FC9A7A8BC498CB0756DD9A38687BB850DA5ACA68FA7C5625DC9FFFC3AF544
80A36043CFC9991DC5A2B234BCB3056149D2A537780AFA3B4C7D0B8794E0EAD5
C007C3977EE6A0BB9464E9E1C95CF13910328C5A13E62C4C62C77F0A14A58A99
3432A8CE50A3E3E206DE874E79AAD44D795F2BC8F33378920B160A5294DBBA2A
4130E4FFA9BEE2B4ADF112950D947685C7FD51970DDBAA086594961C4D7C8EDB
87D72DB6D66641F927A19E9C6C8FB14863B2D6044A9CC5AF70AEE61870E2E6FE
53F4117BF6BD756BFB202F01F85D3C8B595605D9047C0E50366104329614B249
117FBEEE5DFA81107CD59EA0B489CDDD7D9768A77E87F73F2AFF55F690868724
6CB30790DB7B05D1B2B83694F8A2D005EAE30459FB109BECB897B90D4ABEC315
FD245B910EAAE9A6E8C93AF15BE47B7D7B9E6111D4AD0D2531A8DD8A40994816
71E7037507DC58FB65082D598A642179CA7B0525BA56132F9FBCC7CCEA1B3EDE
B88591B5D5C6260C533FE9400BC8B72593690454FBECA4FE119F9CFA7970BBAE
E766787469AC80F1FAEE52858E6607E6E0A3610B9B18E239C0115CB2308B4221
FAB3A35463DCC6E0257B3894733E69CDB0B92BE9874A24866004F9B87CE09056
61F6F245156907DB3716911D352A7FBE2DB9F6351069F0C3009A58CC4ED490E0
78A7026B423E7C594B1475D2A1BD60953B7399F1C516E440E6F774E64B662A64
97E25B26E092C3C842238C6F9CDB39DD038AFE052A66084CE78FBE1BE14E733B
6D2C3B00E472093C99B2B68A161B3CD71822229C2EF5725479ACB0AA74BFA93E
97096DE204B7D371E96CA325FF04E4CBB14B11A5211EA2C785CE9C9714A079D7
BC122C8F29ED45AE80A8D21EDE648D0E1DD29D0634570D7E43A06CA32CC4AB59
4209EA1ED6543468D6AA9082BD85A4335C7022366D9005CC2C4C81F117A2CE4D
A8DBEAA7FA1D7BC8115AB6289CA84F9CE624CAF4D4D7D9C9C9B0167F33BEE7FD
7196D43BE177D5FCC3C4ABD00A1564CD8E7F2CED62253F0EF318FE59F720F449
063FD0B5801E77B7DDE900DBAF88E9FD188D507B94B13F4D449949B22F76824E
FEC855E2E98AA08AA1652982C00AED993BEDB6B0BC2CE2BA67B1358725BF64EB
E129D0814B4913342AD841C56CAF190C56CC359F0E4539946E785727F9D28825
A95C46F059D4663E33173E5C99CBC11AFA9275F21B18BDD379BB669FC4927251
5F0793D45AB7578F5352CB3195BD243249A31DC8CB2F24D9E19608CB79339A43
E21D052CB0F89990C9A53232F4FE160B3F36382C4D660E683B4845E10FA2569F
88B3D36CD5FF980910E8C2E6AA4D3B3F555D7AB121B0328496979CC8A2D65289
1D76FEDFA6FF3E326334B04647E13B0FADC0BECB792324AC9575EB5C7CEC8189
3C8E395353439413A156B7527C006BE15F09B52E2AD7EF46AB3B6EB8F35328F4
476CB1D9232DBFE77F0DAADA2EF861FB7F8F58E9B71624DD7E59759658434063
FF12601FD9D006D0A0B5D3A754FB97ABAF985C8ACA70B9DFE0267385F85E97C3
7506E8DE56D9E5E27FEC8ED200EC7DBC8C0E3614B9D1CD18252600989A75B0E1
49EFE6E44119AC23467F5A3F47D20D4CCDE3579E46C25D9B4AB1F6E3C47145CB
94ECAF959EE2268EF9946C848E160566B4CCEFDC74ACDD0A59B9FAF5D463414C
E835280D470339B149C9AD8D727A32CD43E3A3E004EFB0DE240F7555EA37AC32
DD66DEA52E3F58D654879C0D9EDC6614283A52DAE2889A0BDFC767EEBD0C190C
BBAE9226746BDEC698037A4CA8FEEF5A06525EDAC49D54B378D290BEF1EFA062
04C15CDB2175217AE44F0991D70FA748F0281B5A24CC391A5320CB00EB06674D
9B36F6EE709313A5540D2AFD00FFD95DFD3565FA984C2A8C24DE3648D9A82A6D
0E17F2BEBA08692ECA66144B565586A90E341BF7886A965A515E0F1448F0FCB3
4B16C69E7F762063724D7E53B626998A5F136EE9E85B692A125992B0364C7CAD
F8FEC0D35B72164529434223BA612CAA56A833AB3A9CE8C36492E9661644CDCA
F4FB0A5CC9B00BD1C23A6511F20A3DF568ACA8FD9725E20326B43C49E7D2E89A
CF2CC3EA12C4489B7836EEE3F3D8B6F2682518B810BEA1AF68B93BDC9D949B33
2D4784B25890225629381732FFC049307C394E1625F7E640C7FADF2BF3C00CC3
9993D7D453FEF7A6B7F1119B384A2541B37DD9246FE315A00A49AB5B72D30B98
4F16C52B375A7BF4982C71ECF881ADD23BECD4069D30FABD4C46465F26CAD46F
898BDA48CC0E974D0729EC6D98234C679A1CA1E85F6F60B2BB6BAFBB033A141B
F26C48193E175D97002CF2E58A2ED9E81080336A4F5A336CE7088410A43447F9
FF3C18923D04EAB251C3905D0232DA9C59E1005FB8B8AC32AA85C3175DFFB395
5190CA33F2514AA98AC4F671A68F8B02EFC867C11639FB3725832095770AC838
2B375BE6DF1A31CDC569EC8239C27ECC96A714979E9570A93155C4E7116FA01E
DE8EB7DCBF6107C679933F5113A2FEC3EDA94966058868AF8C47EF5D273BC83C
FCD916D701122CBA4F74184F5DCDA981599E3AE02781B2FED1DE6FEA7C574A6A
79776A4DEF47A64A077D49005F66EB948B3321906200DF3396664674B8496EF7
016176900C153E9F6AAE0CDA18F2BE46E368DFE4ACE8B57DEFF064824EF568AE
CCEC8F26CE96EF688C8C34811119E27FFD6D0289946A967FF0B3449A1D9A0FAE
61B9009BE1E38FDBBCBAA79DF6561DC353A0A5EF2C2CD910B5FB71DBF130916E
95B7A742DA6053F77FCADE8149571F24E43923DA321E7542436E4869937E3762
01D64DCCCCEC5C09022B7986D9F61BBAA5611F37E82C2977E10CD0BF8A425709
771BCC5388F21662A1A9A1A34E83B2F8532E14AC7BD13A6A118C2DCC47220E53
DC31736E687D7B2DAB78705422FC47FF6265CB6B5DE2EA2B21FF98B76A353F0F
362B8E029C510573FB781C9BEE1B48951FB40823B6E0360A57B47B7F64255742
523C86D67327CD487B97171C140C0A96F8D3B507BEAB9A4A40ABDBEACC7D9D02
37EF68F268A103D705E62E6C61A239373196E364CDC229FD77F1719579A288C1
BE0C6FDCA305B8F4D4BE58F543EB4E5277F3C821A95CFC1F2A2709BE5A0283C6
265B24BE737EC38B7EB905650D8561753CA2A81AD20E8FCD663256E792DB9A89
D690FB742954EA318412EB980255FE67DF0791562A748812F030FDA4B711C486
BAC9145A19B97612EDE745E4637EE54660A60C7CEC77D9B13CB3B80A1D6B684B
F362ACFEEBE16B327274B8D99CEF48FB6FCB8D5C336F0507D067B8219CD7506C
9F02529A3A0C52A9CD970A649175B4356BF8281F2D2B32AE92F846F102AA89A0
51522AC7FB3008460AF0961B83884147B6956DDC464ACDAE4CF8A687248BB909
0F0B630FC72C2B028B8421D64CF992787254A1A4C3F614495284431A05F70873
F5F4EE7D8026375DFEA77EE53A650ED2CE7ABD50EC33DF9683D257FEDA2DAFED
3AF33EFA59CF9631813EAE78A1CEE33FCA1F064B491A953F19D790E3B835B252
BED046A4B5FF7502B4EE09FCD3722B1B493C2B9B46798174E395D2F5471A48ED
4E57BD523E49CDEA7F440E13B3E31D0531EAD2B50E6663759F4CFF539B1DB2A2
BDB9436085CAFA9F5D2FA15208E62FD0C7C0ECB77CB74F51CC109C3082FC3679
0945013F8A90E155B9024657206CF029CC2A05C2706255E37CD7AFFD757B86F5
5E13952D2C6024908835180AC98867DB847A94464EDE641EFF5FFE8289EFA750
F82FD961FF8DEA823597431E23794BEFA5CE68BC005B9C1F6D9FCFFCA8189279
FEA9BD6B733417BC86F6400807DEDE503462D148917E0DAD61E444A9814C2171
93973020702D70ED1BB88C9BDB07397D516F0C5237FEF536BF188BB8F92B4A13
B3B4891F9447C07EA90796EE6B4D08B5EA9520556C380612BED515A5C22CA85B
88AFE4E7C34B54579DD3E430DCA1550B65EC5FF4DE965E31775D4281AE4D5D8B
2A2569E352C2E8EF4E2A7FEF44CC0FF2D8C7C42BFA9C6D8F3C7781CF7C7F8958
71B088F518DD2938C5562F8CF121BA4993018F7D20FCAA52C0A433CDCB0DF734
9E25AC7970736FBCF6DE52CDC28C350B94734DEC4BF651AFB081DB61899F8CFE
6097B6B441FCBDB51E6C55315D83A619BFE8EDBC08BE2F925DA63C94748E87D1
1CA1473863D19AD8CBCEED532ED05E81099F8A5205CE743AA5050C7251F351FB
D1371773ECD445E2030ECD11BE15569CCDB7CC60EDD2F27E958FB78BF0B31014
5305E3B87AB5B9C9DD1409ED7771DC71848193E03DBA6EB74D390D7B3FDD43B5
8E884086647C1D23D61FE9121388ED964799B18DD01A0D0E6D6797B39F36C664
589F9E687B0998948682AA01F1ED0E556FEF6FC9668B539F0FFB89DDA5A5C5D1
C4922B50E0AE28C897663D6F93F59E9FF865036DC9E49271C47BFEFCD2332603
79776E68168FDB54810E840E68ACF691393EB42C86A37FFB55E5FB9F3B47E76D
241A7766B5E6CCF0934CE65CBC1C69FB7A764E2A50266005D4ED1E81BB6346C3
06AC38E8E938F316536D366CE5F5BC382BF77B9B96C59AFA05BA998AB930EB40
BAE1235B0881048DD42990043DEB7CE7979D339DA261515C42E51FB8465288B5
1D4263DD38FE0AB6AA2568F6443CEF115127CE4CF8368755ECD4536564D357AC
A5617ECB62EA701BE8D5F13F76049C683988E925B7F56F3ECF15E2922D37F982
BD5838FCFBC8534FF7969B6DD3C416D486D63309761189D04F7582F87B81A4DF
9F0C1A3498256238B2CC5BACB7F29ADF804D8A70FFBE7180B2E3DFE4CDB891CC
673E679648D6A5CE75393A2966717F319447ED4629839AA81DC17CA293CA1A7A
D6F49A821BAC39EE56AA5576AB9B20E775B410575896A6EE85EC8041FC834F2D
82492779D9166DA6C69EACF60C5C9A3F2572BA5C4A17464EDAFD67AF5DE6A116
A0B6E119C225C1709EF2117343F90129E5BFD57F5EDF2584859D45027A4CDFE8
243C948A71C1024DDA582211146D4A3309E71D1E6EAFBBA245CC24835129BC97
34642F0577B44F0580C57F2F7DD160F34507EFEA2A3B15364D200463856CF70A
85824AA252BE8DE3473AB285E4062680ACE65246C0E0A2B8792A7C3E07B64F5C
AC8A00DB5FC98D66C0E585EE7B93B10D9E8949824EF6C87D438574308F2390DF
1735EFC1CEAA34B917E6C6B6F7FCD254E625DB2151851FC46C7EA8C422BC706E
2E23A155F7D5F6F5764DF2C164492915964987157B02690D68BD5E72C2C8AD9C
1A445F0187AD4B18F84DDD39822913B586905AB3718457F284CE9FDBE772BBA1
2153F2D373782F8F41E9EBCD11FBF0902758720478114BA0089C83E5DC292E55
4503830152009E5CA431AA38A16AC605AE9C6065C03CD04814D602271FE455D7
24A63424ED709EF8156AAB026EAA25AC3D51AC9A52DFAC54FA2E39A58EA63476
52EF23694A3ACE9EDCF2BDB588B287B3C0BC3BD140EC21082195D2ED587A100E
41DBE656C0F76D3E1B16B441119EFC9B46BAFA3B69B0D0423A9A50E0418B4326
7A4B06AC2BEC520633C4FE5F210F424183696E6368BFC783DB35C3FD9F485DD4
9E9F8601AF7236317EF1E737E3B97652B385DA2BE9297F76575B3CDF7DC2373B
47E3E2201EE0BCC4653E17FE377B75CDA8989619283D3A786C6E8ACE8B3E105A
DD71EF86CA417D36B39BBEC67CEB8A8F859A78D4A5155D216CC6D5A64ADFC358
2FD774603B937056BBEB9156CD32F1AB56331EB0E3C45A0C40602B5C6E0D1052
7655124202BF2351C77BD0995F020A0BC9F89504F76444A3243D606A428419D5
50586DDD67CFCFE515D396ECDB971962F25B92198FAFC79B2CDF0B437E89FB18
B29B30485B6BCFACCE2996190A088C755348A6F0C07EC1CB3D9BC83996BCD284
8125F7F4A0E45F1DC3BC131F94D7A65B3852CDE3D5BBA1909311EF1B781C3506
E7EDEB5F2C5B9378F6D15F46A771ED24B70A451B58DBBE21DA9AECDD3A4BA982
961DFBA09A7AF46D590782D9772C5FDCFF0B21B2EEF8A51F78004ACD25199E80
DA7DCC22CD3A71A5535374398C65CF3183CB791411E577028E4BC3C268B53561
7F1ABCC86EC8823206374C88E1697CBFEB4D00B38846E60E585A9BBAC621B325
C99BF297937FBE4DBB6D222E43B830B1985F8D74535FBB5A058B03DFB713F881
EA0FE63F3F2360139F139D97259FEC3015A2D592E9E664770956FFE9D022EE39
81348E161756DAF2929F42A2006D63E6B590EF9604CE9AAE2E951BB21D68CD56
67C4FB2D7B6B038150B0CAC3B272F3494B1F51B0F11EE7129F8DA0403A1DC454
0DD7BA992FFE4CB9CA2CD7D80549B70984E506B9C4694534AADB7CA1C9DFCC04
95EB5B89D144540ECEB0CE1CA8330E073B6A976D80B70C28C070E98D17BEE938
1BF5C3C1D3BEB04E97D49F92F7EB633415708611046876CD582EACC89B97CEC5
D5A80D7215094B2C39C91BA36B5E7D23CBD3E2B6285D72D8ADB611AD7C7F49CF
A27462B263571E1E3E7C13832CDCC45BD7A6B74FB0BBB0D63B0BCDF7A0BA4155
13A0726034AF7F0EDCC4299DBDEA59017ABDE64C8A170486841AD1DF9199EB2A
45C738B2B0A3B162C708A32B5A69EEB8584D6AC888FD5171330262FBCE2CCC29
D7F898982FC769C9B515DF4D4B1133C57D693ED2F25BB0B2A18087FC077DE595
F5C0C1435407EE917D2732DAB8A878FAB156A81AB91CBD6ED8AB76EF32783976
F179209C9F9697F8A3EF4A2D139E7E573A411AA69BCB0626D8E5356B76258AB0
7DF1DE0CF4F0B7FF4B5E11AC94394312067CA525859B737E2F8A5FE970EEB4CD
0035C10CB1E578BC90E196AE4509D12C1863341731655568B9A4B9F63A195348
622F763AF0EB790F428214F793CD49343405CBD95616938790DC56E677897F0E
97A9EC62EC6B2644261CF2FE48A6E07AE0CF799983755AB9416DEAABED773A34
A8A10570E5B432ED305A512FCC4AD6F0AEEFB34789A0257051C547167A798735
D6CFC7C8175FA0FA87CD3F2AD719A03CE48BD80A9585025D3957D93AE7027D3C
127EF48ACBBF725D9ED4E9AD94D8DB653FD03F8B36A29A1275A5E2BD069DF821
14D9E1D4AD54A8A33828FF4F279FE7459D9CD05FBC9C267C18E6F49745C56560
2B0A10074FE208F523F7E104FA153E5941561360B04996CC83D7AB7BD6B7497E
14FD390980DFCDADA59BBDFAEA6C381554A1F8CF0ED8A999E5D6319F7CB71CF4
9C932CEBA2F21C5BB6FED6B2714B2A5F0BEC57169AB482468CB1D782ADCBF3AB
C6A887BBC0B66ECC70561E416A846642FEB9AEDCD8FD7FD881070439DF1B8679
D275F11B31B5BBE25915FE01AF4FCAE6D254AEFCF8395245186AE93BE6469E49
E1880DBB2F44E6986223818E741B7B1FC4C56A3C0A25D6A10B4A296B3F737958
F4F7247675B239BC3648D38178967E6F47EA074CC6772ADDFBAF3DA63E522F46
13D54D0AAF2AEF701D9D446F9E4FC1306CD1102067EB7D0EDDB17238B69162C9
AC821C420E6CF1E57F40A6996B6845F1612AF18E2460A2E2E9A65D9EB0F3E522
D9DBE7F08DA960A90AAE5416A5605002261A39FD3F440B5464094995C189E6A9
325CF63C4747A1F41DC7278F38EA5E5830AAF08237EF07FE4C8F88648B594619
EF32503BE513ED163242C8A1CD1177B3F67E9FE363700B7AF0A43ACE7DE04CFA
F6AB1BD8040549325D418A56D0FD489B239D0604178F2B1A6897DF7F4F19A72B
13F73DEA668D96481CC5F20259447D3FCAB76C60BC789875E93770C90D01EAA9
88CEDED368FB06C30A0A2CC77464083FE0B8372927F4163AB580D6130F47A688
C7A13395854B1A35D61A8BF77E428F5F8B9DCAE995260A206055549BC2F4191A
FA3C8D5CF4C177D5F4FC75388D802E2406DA1C084A93755704ACC1B1A0395E42
692F7724977459033A962155A687F383742461860638AB9A53E3E85F6FAB123E
750CB8AA9D6A8D3964C66772E83789297E37386E3CE382ABC2D615348967B03B
946EA3A18368B06F3811D5057F3D1B4870153C459140FBD7F07FB628CFED8AE7
7636B21ABF50FF79714A2D17380DB27542BDAADFC83E42B167D16721997AD683
B326F4944FC58E40C5D1757030D9D11E55BDAD6163FDE55011AB5D47D2600AF8
66340C67EDA65BBE4847365103C3445B377CA7F45CAF8783AA7BBF12DAE676DD
EB85E30AFDE3C9E733C9FF0AC3C0842C6A7B64DE65A5F6A62CF3E34D33538453
74E26A0AB067D3CC52F31DE1D46B847059ADB93A5215C9EFB9951FBC03D02A90
062024DF8E3B8DB7BD1E7A5DB97647AC5715CCF45FFB60FAD413D1EB2D1BA5EC
365662C1A0D3C7C215033953723558747BA2CF44BE6EDAF8888C557E00C8AECB
86BE253C34D8BE0D7146EE485790FA88C73741C7C123559D47305AB3647464EF
8826301D145ACA281795D0BFBD542127CC115DF97CF787A757F59B617A78885A
C7BF4FB120C22FAFDC8974868ADFF443FBF816C0BA50F2F5FA428395D8ED1415
5D9D86C47F77569B04CF8042E40AF6EE65C7290DD9DA94C481E91222C0F80CFC
A6829B564CD4001D12F91E57BA8F539C8518567078AC97D5087DBBD17368D732
9F8BBC46C5531044EC9D05E9F654EF927A55EB7C2801B3AFDC3283F00039DE75
1A43860E0AFD28EBB4DEB25E4684D2276D27A117B4C0357834C33171533E4576
B3973F1A919A0EB5DB3F3E7254C88DB2BF56DEADDD8E9E754D89925C0F1C5388
3C838A1D36B0F148E467B7F04C22B70D8F7489E4CA5E34FE976B9BBEAA826140
B44F50854646F43EE69B64087ACB594B46CEF499F6AFE988E6984691C03E3DAF
BCF87403C11EDA07EAAB5D468E9D6BAFCD55DB08A77BEF9F5E5F3862B7050B97
12A048FB23B37A26BD989C3FD725880B0989196D342AE3B6818C7E710A8EBDB1
EAC5C92222D51963618D9DB894AC1FD65B24BF4AABFD27238F423AB3B12A8B17
B702E78CF13E0BF388
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 10 /Omega put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E0B5622DF6FC4BF52147208D9A91EB49B03BB40DE7F8FBFB566F251942C8FFB1
1DFA50465919400C21CE4724D12E4EB47AA5F392BA927329DBCA28A78FC1DF2E
6FF27F4E4E3F8971D7BCB5F3FBF8F30C214A26E5E32E0E8CBC71BF20AE573BBB
163DD66E89F2C4E2B1A1532AE81C060146F755A1ABA3F1365FEA30B403DE7B22
76F43EDDF7CB0C5D3E3F2B9043D33654BDE23221D16CABE4D559575AC8D01281
379FC2AD33242EDDECAABC38D94B5261DBE8CB63E29B40669C3FECCDEDF261F9
F459A74CC8671094014E746F3DE54EB8FBBCB72A547C2B69BB6152D98EE7E285
A346B7BC90C22EAF8AB14FE7B7D5D927BFD6B5688CF544848F6CF34E3A751B4A
8CE51B7E30004E239C3C96182EBE6553546722CD2E1A75E051A6A332F3E102A9
6B79FE819585E2CEF4F24D9D8DD9D69ED55D75A9FE7C64E509A92F6968B90F1B
DBCCA70E7C415B2313E9BCB35B5FEFE37EAFBF60D10461124C117815D63E409A
81FD823C2B3B3B1081CBA07207F935B6E7072E17B925E8523DDACC6E2AFCC163
58564B6031D9EE8B8BB7B9F51C42B0C5AEE083A24A55C13CEBC22A2F389062CB
E1F8009B0F147A36A0D3F32502B2C034EFCC4903AF58E39EA285CEDE1E583C8B
5D89E2A605E86E6431BBE261B5CF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/UniqueID 5096649 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 15 /bullet put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EEA2
557F8D2FE98B65685700673A9F840C8578B6D7B384C4A0B2A77C61096081F6EA
8AE970FB31850DAC38AE12D2E458850E6C6CF9E5CAA86DBEF5298290123A8B67
E6AE0B5105EA2AF7D1E5EC95BAED8CAA8399708D4C043017B3ED93F64B37B48C
6DAFB92FC1F21A4EC7894E2A0D724A524696A0FAE044D3C8ED6C393BADB09536
AE22A4FF834DFA815E1F3765392D2DB2F4AB03FD01A2656D715EBA1C3063499F
2468B192BA1CC682212B97EB81FD61322F1FB69E5C5D1EA498A138CD5AED49DA
28411430C42A3D1366F57F0124EE7C8370B7A537DE55B277110EC87721D864EF
9C47AFF828B76F90CCF6758EEA4132F47399C1D8FF6795F21C209B25AF3BDEA9
B7239556A29427EC5F15889792AF24609C504CF2133506A5A20E99C49D3BACED
D5CB3A6304B44D1E9607E65DDBFC32B21D70885444723EB47000D43690907094
A5268FE93720E5390C650C18287C6E43129E0E59365E284B4270C56743BE3203
0A1FDB4203EDFEB2A8899BCA96E677EA25BE84931296F6DC9D77ADD4CE2F852F
73939752C34D7940A21DE19663DBC937C7600540E30A2C012C6DACF0D9C2720D
A57526A09153BAB6C0A26EEE44CADBBA105066DBC162C9C398CC0DF110787707
618AD1727CDE42E017E51EBA4970B68DED9ABFD3B2C862CD9DA0807AE5FA27
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/UniqueID 5096648 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /circlecopyrt put
dup 33 /arrowright put
dup 106 /bar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749E08
D67D1208C693A6640D1BD6B9285AC0D3110CBF8F7747AD12585141C3248D0BB5
BDE892F91A4B3291F21F30294693518E4629A3ADD7C8640E424FF615602C603E
1E14DCB3B17D34C090BEAD2A523E260A599522329B698729A635CFB15BE7E79E
6A34DAC7C3ED57340821A4E7A0C7F88F64BAA69BB80DFA8B659F4756878E3044
E1DDDBD6B6ED54D51B131DFF60EB5013E1E7E57487BD54041FC65D065947731C
89635540033340E2EEFB0B4B4F893F08CC4BA54A3EDC553F11A94320096EDC1A
80619F155C660F754EA30254E67A38CB9AFA168C91014E7403ACFABCAD0BCFBB
1D252B43D72AEB446514CC297004814CA86A4010A39B366153F9F64A295D5AC9
E0B8FE093CC994BE234670E0973FECC512D5A16A0370B506A3379B385CBD26C1
8DE35919B40B061178AD10A84871355FED106FA066B9D8618DDD430C07A235D6
D922ADDCE5DFC565CF8858ADB2FAF450413E5B163E19E0ABDAF0DC897A8A2B33
3F47269292F7313F1450C53DA3521040730F6D2BD6DA7261B98D8ECAF5CCF23F
FD092DD16F075DD67603D1763170C3BCDA29BAEA49933FE1735D1B46CBE0FD86
AD4A21DC74951E3D6B63C819AE01B01D542A49E10EF6A7A71F205569099F15D2
E1F17EEFE1239020783F2427CDA9F12E2D4B369FC3919EE2B7401332F5B3AF9F
98212FA77E07D974883797C56C58C98E0E084B14D6EFF6DBD60F3E886CD831B6
5FFA7492F59C22548C9095FA7D9BA664DD6161677F23518E7FE0CCC5A1089CF5
BBC18C7F8118324A9495BAD060021BE8BD61BE67BFBADE00F991E3A022CE1B09
30B776D3436E3AE536E51C9FE0C0AC9056FBED943047C0409CF8BE5963F29FD0
9235
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.0: CMR9 003.002
%%Title: CMR9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR9 known{/CMR9 findfont dup/UniqueID known{dup
/UniqueID get 5000792 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR9 def
/FontBBox {-39 -250 1036 750 }readonly def
/UniqueID 5000792 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR9.) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 10 /Omega put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9AF72336CC4AD340
15A449513D5F74BFB9A68ABC471020464E3E6E33008238B123DEDE18557D712E
ED5223722892A4DAC477120B8C9F3FE3FD334EACD3E8AABDC3C967C61FF003B4
B10C56D6A490CE9594D57A2D431B9E5E10FE3D8832E227A7087611431ABCD029
85F4865E17E17F8CFBD2CADC97E0A8820E3ACEC873F31464466A9545E967E53C
DBDDB8478E69063FBB891566BAF88B7660A4405B16834761F041CCF7650AF955
F9E853AA9F5F4382E1FE7D0C5BB4023818A2383F91249D48CE021250EC9EEB1D
2835E18FB73026250B32A8849067D5E2258797C917F998F2D4121D96560C5FB5
B5D3471216639A8671B6DFAC5E3554EC36D9A72518525A795590C74DD70DA3A7
78BFC43E51D6F2BA52F17D4DD00D389D3983EC54912AFF73684A8A7E345537B7
E62361C04A47859DA084BC72EA53512DC54132EB2EE671793603015652EAFDE3
41C4B6B679BD60AEC5153EA0D2200CB1D097DAD770F5F31E6FC475A225995277
B867B731D5401E2D02B85BA85158C80FF7E2BBCC42B98AC867E67D25DB656072
55A0D32AB7AA483A5A9686CEA4E2B3031D90D84DB3E2DEE7706C91BA81CB8DAA
700E5F61E07D6998C9552C81B66FD10A10033D49EF3BCB0FF22ED0A3737523C9
8F851C61C4BF8A213BF6EC70C956AE48B5BD276CC0437C72BF6515B10739919A
F00F6ADD2798CB211668842349171A5AEB0664D2C44397E55A4A9EBDF54A3EF4
FBBCDAD9DAEF4B0CAEF7112FA828F2F8D9F633D37E5516AB5ECEA87342EF8DC4
3A50548490F5BC9A8A1F98AC7AEAD9D913BFA10CA86D73AEB5BACC1FEEFDCC15
B3655522CCA2C772E902FAB2A6FC153597D52763EB44AB7489FF061F7F58E8F2
AEAAF4D17F36CBFC00D3C653F335D14240C87DB4339DA9D30A5BD1F502BC9013
461B9DB2FBEEC01BB18990439A0E9CA6576BC9CF6B1A3DB9386C4A5D4AA6A5DC
CFA45FB75F22E10ECB72565DB441A194902C91427B4F676E531C661F7A2C3C85
CD534D1C89B6779B2EDC8E44667B992C20C70B663BFBF680A6CF4383EB7CA26C
4D1F06B5EF4025BBE65795F1EDB5CCB97050872D6C07BC2974F905ACDB7A765F
291365D6C8152153E7F017A25FB4476C60FD9EAF9A121633DBEAC32F62850223
D6418566AB350F90F4B35F19598478F76B63E347D4C61E203D4DB8ECB9889181
C387F4B663A502C638761D2782BB96EAC81A0108D7BD6938F67FEBB69218D115
D8E89CFABCE15C6ACC7FEB983332A51A6A73CF4E341574F366713D7FB29956D9
9BF238A87483D37E526A2EA2F101EDD34E34CB92730DCA7235AA0027189BE405
2DAB4AA021A30C28B26C50808E1E965C02F6212EC7C72F5683339425A7739380
A422E6191ED8453AF0CAAA424AE44DFA7CC5C2F6EAA8D73A5101D8E9517DBCFB
2858D0E8ECB7DC430EF23A9E4428CB7DED8D035D6050251AC101A2D0E884721E
2F21E573F948048BB8FF888911C508CC198BD750083B339500C426AFCD5634A6
AAAC1C7E91249667B231BBFC64B4317192FE07FE9DA0DDB5E517D097AAE46577
9555F29D45C67CDE9812CAD03F220B20519F2FF32DCA56A554D4296FE2D1F3FB
B209B5270E0E695EA5A0EF1144957CE045881AEB8D05D72CE57F4D34617AED67
0D3AF0472CD8D60933651626550366E300E72A9C89ACD475C2E2ED9BD44B472D
9DAFE943F8E02A6DC38E447EED964624C37C3130E48211CA279BB6A0BD59466B
42F3D89B5746F29E084E22CF58395AF0F29E55113F3A3F2F52CB3A6DF3D026D0
C81754B8E2E4A15F6943BE9D0087D5166060734FD07C4C57D7C7D90E8C9C1F35
623CEEE3ABAE75E1A18A1E3B50B7266BD2D8E812CFEB4A46B856885B185640D6
B9C22179551002B94282F57FB433B7FF157D2F0D240836B72AF4A331668AE5D4
E6B85415F4E8B9D2F9AF90FAFAA0A3866DF417CA5A31348CF9B41B8F5F4D2F97
CCF7ADE851B5E2E2F6E319AAF5792EBB9DA2C6AA8B73D889F3CDAA42932CDA7D
07A7E59183CD89520DDFC36E5D513BFD8AD0886046585F29B4D7F42CC0C27AA7
53915AB1167D292FE91957E94A57FEE2D49C20C9070ECD736BDEE0F046E60350
EA539DC298156A4E0D019E7D481FDDA6861E20678516AB80ABEC1F09B126BCB9
52E8272A06BB6DD87ACFC423B4A4FC9A3DC8DCAEBB807C5F748F1FF8B17B8B88
F426206BF1B7B7D239D26BC3CF0776C467A98CFBBCA5FB6145D5900137ED19DC
D002F10704AA680EC753C22E29AAB15712EF22AF73D80820A1EEE953463D4EA3
81FAF99518D4FD0F862A324FC44C4B9542A92C5B60CC983CC8F647CE5BDB4D6D
B92B380E0E5F7208A9CD91FA9A469548162C761C1BA05AC9D60B766764D821B6
B4E17F56CE455F06EA1EE2D38FE47581746C4C5FBA63AEE2B58E877D1A8FA83A
31C972D53B64E92EEEA147426A92CFBF76FC614119C6E9C6476FD6A069C803BF
E949FBE50B5AB1F1463F9747E8D353F7BBD991C4F90F920BC9407D8E24720293
846D052214E60390C3CB926D38C83AF697425D80C2B4FC4706615B905516B733
46ACA325CEA68FB21B2D17CF0B68BA4DF249368625CF83441EDBF2B86C957C1E
44CD722BD2537CE84FBA07EC7AE15C840041B9F7F3040072E6084CD55B301C08
A64A53BD4D3DC30DCAC6C152F316ABC59B8EE978793EBD568849DCC2A75A495A
BC83470D503F8E389F54B4A4A31624E83C601B43AC1E52CB811FAA7CA6B644A5
1AE0BFD4FC774C9C9DFC2769ABFA9C83F900BE2DD4010416053A1D4874E6ECF4
D86E44B4CAB15D53E5630C144B0C15B58DAAD785BA298B1893D1B09BA5D40344
6678FD2D17FF6674433C976D6DAC659175CED26139967C9B2B9CFFD78FC2570A
E5142141C2888DBF2DC8503F9137CE7CB21A1EBC2D65BF33FCEFBC85C9CB736E
24E8595CE934AB032CC70BD6A3B0F3BDBFBBE185512FDB7BE3D4A6620478453E
75D044BF770B44C9741E31985E6DAF5A318D7BED12B02A4BCFE60D25EF12843D
EFC9BAE2A3F2EFAD66D7858E83EB46BB09D2FF8AE9C43844A7001C86ED97AF51
C511E3A89A1BE349FF5215D1A57843EF51456B9838133846F19BE79AAA5C1AB0
5F400E5E8E7B0BF96EFCA3B8F0894BE589F2C9FB6C97BD16D38F0A237CD4F034
099C41F85C7E2C7BEC8E02C4F327306A53B4B48B26A8926670CEEF96F6DF2281
7C2DAD99EF8B81BBB777227C2475AE7400DC393D9C0445E925DB1E955950F7AE
53E9AC4306794239346A419F7B5DF4168382EF5956B81F83BD4BB7635B3BCC84
7D84D05AEDC02D14675D777CD19B08124001A4F4EA96990D96000C082A12F00F
7FEF793A7FA69D56D3A38D012168C5458B667190AFE80E02C816CAFF0A71953C
D80B085CD286027E2FDBB05452AA762FD7C813B2E19A79C74190E04E746C4933
CE1E300CAF5DD53B08110509BDA404EF07FA1BC5224BF1205DE8E0C3276A13DD
866675103B960C5F36644F96B4FAC16F5D6E91F74629B318FCCC8E8CB13EB76B
B0B7B90718D913A52A04732EA3667674994A325A7973C601A7DDD50F658E0826
ACB8E53D4914B0274AED98D7BC3B2B7F9D48A7ECC2F8ABEE05CF2C4F2B90360B
B7DF779EAF3E103D1D83EDBE32DDA873768D8C37DC10A5354A94B4153049AD64
FF3E0BB51AB91D7C0B4134D8731CD0270DAAF19BED9EAD800A14B65B68EEE89B
40DD624111670DDC7C030DEFE0D1B96420E249332445C155BA96231C88E70643
D526BDF3CA1E05FEE72CE2B881CFC01ED780C10E89F0828AD55FE29043BC56E8
2750A6DD15AADD54492F6092618F4CC6A31766B17FC60766D18C307EFC9BB787
39047DAD6B38419EFBA46B4E2C932F97451FE78AD75FA90DE409FC6DD46585D2
1941F5ED47A8FBAEF5A917A240959E8D9F9917DEA3247D9CAE6BF7A88DB4C4A4
F9F5A6DCE542420A032FF3392FE0F3357B51F884D6181583A554F75B1DF192E9
253CC828FF06B0D992D5316435980B044BB191508C7C45CD90F797F88856424B
14A5707459C50EDCF3E3D8D1667AAA83015405354CE744C66D9A5728F29E0085
6DBF740717FA0799E3BCC4ED7841588B496A5E549B953A7FD288B4A045DB611E
E3B2F35963FF18ACCB1C968BEEA2CBF52B3999AAF89A05320BB2E97F52CFE06B
9F10E3A79865A3059A957F97972D80ADF678A36E2B586C101FC6AFA4D137C13E
EE7102C9B8EF78CB057F8B7476F146E8FF5C897FD5503DD198128CFF7B5FB339
FAD0AF0EA967F77B07B367A4AC9F668F8BED99B98E87FAC750EE045602D76C3F
289FC9D97694C96AAC0AD1BD3FA94DF2CBCEA24B40F47B9B59E54EECEE7AC4C3
A3F5D19160E4C1EA830D57FBE10D8D46AC5CA0260F22FAA45236F0F542BEA9C5
5A88F878F68B36114E0573900C65E305462B22A3429A17C7A567694414DDDA46
5F30542B8FD4F00F6C295B2E8D3A986B953D96822DB2ECD48E8BB1763434E652
152EF3717F5E7FA10FF0B01D9F64E22C5DBD7254629658887BACEC0ABDE972EE
67299FB84A05B3EFE22B6976DB4CCA384232DDAE38C31623A4E39EA2E82C1EA3
BBB68F1A7DBF405DEC37CB7203A895C36A44BD2D63F45B3888AF91D37B510A59
3C921BB44DA620892AD87B665F69F6FA510B071ECC403CB2BE2F54B3969C9E88
713244BC97C1466DA8216DA7600C221E7E7EF5C789D2E12B36422023A03E11BF
2790FD6062FE6BF62F5010A92F0A104B76E255A0975E04F6F20F760881BDA7F5
D834D1D328B6EC19AA7D5E5678A84C74C82553DBE8BB5765E84F5A8789032143
6020940B4B8D45FC3433D356E28C25F42D0C19F911213D85951B2B00D01B77BB
A4C72E964F9D95422BEDE582A05CD52E03D28A996E6CC8FCD910CBAB728073F9
F9FAEED5470FFA55930447C5BA816F826F983D53EC9941EC8364B3060FD74C95
26D4F5CA753B574FD2FA4D1D333785241D8741B79E628BC852FDC35478C5ED9A
C1BE88C5EE7302816E65C12B58EA16FEDD4672EB3E24B6EDAD5DCE263BA8A970
350B651E5A9F3C281D85BC3F44EADD0D93402E36489BA5185E7D388974B0B700
70575188BB610CCA20F081E2CBDA13DCC6F72567962ADB342E02C1E763B673C5
F7384E24C6E1730A3A790D690A2103AEF88E0C1D4480DC9B25E5C8C9E1919C95
F83320179B4C7C4A26D559BFB24D7D596FB73758C9990C451E77FCDDD17763B8
9C30A9534E3CB6680D3D419D4B70B0B0A0D160FCCDE169714E373F65B7144CC2
DB9A44E041211E1517D3148E65A2486CBE5E74E625261CCF65392FB4F3091473
F9E8DF327D59A58558E5C9F7190DB577D5DC658F5E36258291C708B3D224653D
064BB6079F91293FC733710893AD1C96169B30CBFE4E9D52E7EFAE4AFEE68FEF
1AFD5E7E9DFCE8DE332B0FDC0514F9B3090AC85BBFB527FD8034DD33E9576325
A8769AE09AF1BA792447DDD932B98FC9486B39E0B04DDB3EFB7A30DA0940B33E
E27490E0E841E87B1C90E5248A91742ABEDC10F43A8AF0F9C5B4A4930B1AADAF
01874B9AC3B8D0DBECCDA6CD7E96471FAA15CB7F8A599C5746327CE392224C3C
40BD60AF97BCA6FF6FCAB2FEA114D7300B89E91C3BC92D5B3E2C83BB37992D8C
72F661EFD0AA034C738C019DFB79BF40651A1A34BC1EB9F5AAF58F8B3DA32645
24AFF8636486F08BC21533B5FF7391B0679A78DFDCB03DAF6BB7475A1D51DAC1
EE4BE9B986655D1FDB6936445EF99B58B303FE79F11275EEA96A9F6808EA8775
D873D1052FAC93769789C700F20EB2ED6D15676F6E563A769CA9298E463FC311
83281483B1C953370D196727A6A0E66D32D9480AB1B6DCA77868C1A2D5DB6483
5F31EB6B18EEFEF1CDC31533E69B0AFC6B30FC9912DC89BAAEEADC30BE14F448
1A6B70D36A5D9B01799BEEA686066114910842D022EB464A9A1E8F0A5628BA69
AA9A1925CCADD44703BC67A89F3B48E4680726DC4360274185CF3C8AB747A8FC
4B928AD62B092EFE48B01E33ED756DB696171FDB775396BBA138E056F71EDAE3
7A1E4CC272B8418114B0E81DE0BC43DB3C133167344488820A92DF10FFA26FB9
65FCA2C87D302E956DE6B4FE145145440C83DB43A68F8B29A592B127BDF49063
B7F11E155CD4CAE305525BEA56B7C412A6260426407BD892A3F2B444AC3421E6
FB6E6425EB5C3053C5644666B80405530FA0012B54557327C98E0F4F064099A6
4ACAAFC1870359C1B6FBE7606BB8A26026AE20C212210449905E628AF1B20490
8CE908B7EF3E3DB551C85AEB0F7FEB6A8D215B97998E5DD9C7CCFB2A9402B8B6
1770D4023777D4B45A73F471355353412C51D4CE71FAD1E0AFBD87B5F86307F3
10D0B94F1194EFFB64AD5DA54A4200490F609CA8B912E149F8217ABB1E9EBB3B
C4470E7365CF5E1E761AA1945044B225BD53D142F6588C50E0644740F7DD55E4
8F73201E5354A8BC78339211AFC4935F44701FBA043AAC4BA4698E9D7700029A
C79F992F62627C91EB855F64C4B251718FDA71EDAF082A0C7B00550949D617A0
7071FB14F05620CCF2180941341D8E60FC88823438FD728A4042AFA8B853107F
852F631518B61B234565291B5D5B89DA818DEE3AE3B68A2869DFA63255CC882C
3B16BBA08FCE3632E57FF7A07F857A1F0FDCADAB39D77960BD827CCC8661A997
648BF5BEBC0FD2286C2A112A8DEB9CCB6330A049170D5D68EEEEA011D3EF3EBD
855236B9380087CBBB6BE24191F728B7EAC5B50F7A547AA0989B7C7D3437DBCE
1669341264E290646F2C8C5A3ACAAC7CB63DC692FAAE13E9B40E8BD39FE16A0C
1660CE66872D061056C04DDDC265C024BEF8B7E3C3AEE76FE5C9702002C28BE0
B180295EE00E567FA2E5CD1638226D24A7C732E1BD8103B476EF5702768689C7
D4FCD47F2AB94A2B1FBAE6ABF87B09E7713C773FB65CA83F7318035B332B9F99
24A2C8897527021321D003AAD7C273E4BFA2710B9BB26C2CFD3D9A5D7ED1096C
552D50028AE2476FCD6D12A5D0A897521313ED1A3A8456A70C16EAA50A3E6733
6DC89FEC56AB54A579EF264377A103939D5EE00A90B4F2206D0023AF9491FBE0
800C6540FC945199E20E945F46CEEA2E885F6800B9DF042BCEF4291A4B1A62C8
6A7ACFF872B25FA3AE69E0093F3D0FF13A3313430C06F1AF94D500431566F659
E8C859A5F80F5BD2E85C8E32603D3745628E8FE6FBC50FA68F9C3811A2BEFEA4
5852CAE2AE5AAD3230ED050593BAD0A9581EB7B327C6916B8FC348F4C23E6FA2
00FA28AAACCB3091C1D83F7BB88672A53A2EA3B8C7C24374E400C57F0F01019F
E52D5C47F389D4C9AF126F4080F9AB8D1C8F470932BBECCEC72A9796F6E965A4
82057DDB43D68298A00880D4C2E2496F26F015FD83C5549215753459310339B7
6B2961EEEE74DA31FEC8E2BDDA42D4080A32372AC372524BDDA580EF6634ACE3
128C69D04D890DCA337212B109585C665AA83EFE47D5BABC2627A86EAD11BF7D
744176652C7F9497785A7A06A994ED8414BBE8B26E74D48CB83FA24AAFBDD507
84A90195EA3D77BCE8C2BEDDD1DC52E8164DF15D65B916EBDF3A8A76849653DF
AE3CAF9561AF3B705F75B9E5DFD6758DB65A2FD54683759912E0D0035CFBCD86
5C69F2669DF1364BC06848F7F903A729E2AF299C26DCD463822846F7E4679D57
E8E44C4064381314CE489528563694C82A96520B0032BDC94E9FA02B68F80792
19AA89F0EB25699B9028C7BBED09C7C8FE6B649E051F9042F32A004BE64C4DBE
FD7F9A354A8C3592B6B7C3BD820A744DB480B7F6AB52178878D13A29DC83DB55
0C5E529EE81642C64328228E7EDEDA5656A82D80F506452B23B8E6F7D2653C04
6F15CF303749909591E521AED62FD27F9C823B4F81B95B8F0A813F4243646787
89A2955B0F6B849A0B2DE8E9BBEFCB6F85BA1E6F64DC8AA86007AF4FD663D398
ABA68176546F9F9C7CF19347405A3C351A034BDEE3D386D2B8E9470C00B1A100
0B3D086DF70435DFA5C16DF3D55506367DB0C717369ED96A51F61CB441C5AA5F
9A4415B73269262BD13318C890B75F3D683EC74253065F5FBDB3E75642A0E03B
4FF7AD9887E84C348921585D7B9497AAF1F93E6DCB24ACBB73E56114F32984AE
A0A54E9FF656FA3700A78E451F6B12BBDE0E47A175FB6CE68929F78D683690EE
F6749F1957E75E478D466009C1F46491EE8996C7A8F840E08EDB45F67A3E48D0
73ADD10D8ED57AA5D76076707AE1CB8EED219AFA45791920EFFEA862F9902231
E99E76DA9AD76F2B1ADFC634C8E1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSS9
%!PS-AdobeFont-1.0: CMSS9 003.002
%%Title: CMSS9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSS9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSS9 known{/CMSS9 findfont dup/UniqueID known{dup
/UniqueID get 5000802 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSS9 def
/FontBBox {-63 -250 1027 760 }readonly def
/UniqueID 5000802 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSS9.) readonly def
/FullName (CMSS9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 64 /at put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 117 /u put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C295470093CA270C5165C6545D6DD11
633CB01CF6EE3B37AA823D92F442576C06EA48520F0F737DD7E36EFF1436913D
7B55347D27E02EC93D8F98260A4CA0D41D684DC6D2CCA5746F13A862CA42419F
FC585050BB153883D3924F26A261CB59E945236BF818D1067BEB62B89F25B57A
C81D10844C89A1A648EFABD92B5C8FC1671A9361602E52B9EAEEB8A603C8945A
F8295D0706DA6CF8964B671F90DBB3949ACDDD20530134FBEFE9D1F1C429097B
2A8AF2818951D34F2798A46FE02C69BCE1A2B4C11DF1D8FE0610BD9FD2016D3A
ABFB483773ED4255C1B00B9484918BB10893DB86FABB84B063B0F287AB61C16D
6751C62EF5CDC87DD0A92D85A316BE8C707249B5FDD5B61C1906445E2B04C689
6A8E764A825A75424F14E0CD2BA99AC4746E8E0DF4C4C682F7A0900A2218135D
E5E58CA35D1ACB83255F683AAAEF8092CB082A8CB0D779673F065D7408FDA080
4E12BA4729806B39E930A9FF2280D603F9F2EF1067461193BF703BB5383FFD53
6F67E20F0A88A204DC683CBE272E7E8489AC886630624DC40BE31A47B8AB6484
0014D5A9F629CABF60681786A720D84713972B0D590F2E22A666756EC35876A2
37E893690099F6F9F0449187021D72A7B13E04B6FA937F7C2E840FB766EEC767
5BB4F23E26CBBC216F73770B50F992386A289574CD6F8F4C9B7588BBF8482DC2
3B33E5257C797790810BE889DEFA050B290D6381943A222F1D2560CD26B72FED
A2013E359EBD486CA5034784707060F17E257BDCC5798315E7699EE7EB576FE5
8D35505C808ED586C153AF420529F113ED9A05EF1C7F1F606F62BD2FE1303F82
3F483CB2EFEEA499D3EE8684DF5EC36B4E9035E56D5180211A849FE222D99210
8A3CCB004CC1457C3647FC73F64CBD2B02D692E0E9B7EABCF1A29740EF0DC8A2
CBBEFA563DB9D3BF920E504EEFDD56036217B61D8E08103405A9781A9CA6B9CB
FAF508A835E2D49BC7CE894F9D0B7B8E759660BD7D53492AA89CD26D603458C0
776258F3A478BDC8E4D9C55C92F38C0A336C8FA39D52533A4439945B045CED20
A2D9C64EA02D34FB4CD7B377BE5B4C8C110924DC0F71DC4E0C5ADFBA8D9BADBD
4EE8588E139E55570360D11E05A4B233DD8749DDA75E8D53DB3FB331B156D437
5D2BD10C724ECD919780AF578C696A53765533FD4D2527DD2DAC8FB7A3CA703D
B34003DD72E3D20DA315CE4B62018C685D071E9E866A224B2E72C4C417E62FAB
A678429808F95F98207C4A48621F6431DDCBDA2D137C43D765D02EC4A724C0D6
4DF9E07A9666A85DC95DA2D39DB3F90F69BA2A717796D1C87F5D1A22B7537740
63846E8CCB48F3250885A8D3F83BD9DF1A8C14AAEAA670D438D47420F6DCD38C
8884C761985EF58B8BE65C9FD1703F24BDAA827F7FFA56E5828E1DED1CAA75F9
6E00B8AE3127204BF420593221D6E7C35EDBDF8C1135A326A43CA14CFA2EB30F
A3D2AD65DB0E6E8F1D242F69D4B5B4A1DCC937A129923070CF0BCD8C016BAE0D
9CD293BE8446BD1E4C3627506E78A346E2B20107DB58F0696193A02F4C54603E
CBE96510F306101B5C3F86EB222743244573B84919C8683831F3034112CACDE4
6B9FD23FA96BF3BEBD96198B2F19D0622FCBA58AFE129420C374BF6EBCDDB1A9
99829124589CA5564BD5622BE33A1E3BF0FC7D1E6FB699A3D553D86CF2C3B748
CEC5E58E948537DB684BD8C57B1C5B6BE0BF32C1F958147792DE58A9CBD010B0
6F4FC27A1AB18C78A83926A627A8191DB14152B424A87AB752F8979DBDF02537
B6AEFEE65D271F9E3BFCC90C0B082C3D1F77D2E1AF27C1091ACB90FDADD69B21
7F8925C8232136784E63A90A5226D9C46DEEA7A7AD477BD3CC6BCC772A6A7CE9
DDDE578B6B71C73E60E3B588A76C4276A3B68C9E4FB771530139344ECE15CB77
048108E56E60C55781FF4D9B63E43E606187C430FF2CA43B35373556D060E693
628C9C33327DABF70C169CADDD89392636D1F6636692D1DD600D7DE98F73975A
9C3CF72D5552794EFA5210F3941D39A567352B083533E9CB9FFCB07304F60F05
38BC6E9B96B1381E84C3EDDD5DCEEF9B328B5CAA147BD686063B686856E77A2B
C7E29ABE94452AEB3B68C28DF3417A411DBB6FC328F182C1573CDA9AE2B53A94
2F964CFF55479F3AC5472D794B2AFE97F34FD09E487AEB96A5E643C9AF82F6BF
1FBF5305A7334A8E90DB30C3275FD3058E30C6B8C7B0473CD97D91C8451947B3
763E2998318E0C180AF566A836DCC5E4C22F18BEAAC6CCB9AA98B156B59265DE
661A3049AD676BDACC9E431E0C4C0A3F1C794570436D827D8B4AEE442DF6D9A0
EA4B7BCC5F0CA377A914C1B49B66707F2D37D5AAD8357B831A052B65901CA3AC
2D476E711D708860666413CDF348E496DC8373ADC3BB8B4A15F157D1E3E50A48
9235EE6CF156185E5FB4A8893138E97B4468E54B8E5CBE6E1541DF97558D27DE
902516C70F1298F7C17E5FD19D34F3E38169E1D6DAD860109CB3A116B13EE719
D9A6F56F92DA250D5912EBDBC64AAD62B6727539487816DB2C2CB1502BF67C55
4A22868F50CBA1CB020C2BBA91C327106DCFEF15A41511777B30EF6D9E830D33
5551A85BC5F175E1F1E4E6E7477D347A066A881E1AF8073163CECDA77AF62BC8
FC634137FEF052367138D6893B03CFB5D8BE8DD201C94375A2E2CC9898AFD52F
A98A7B235F743A9E5D3D7DA8779B032D42D30C8B685CF74241935CA8CF4E32D0
0AE9E91C4935D4C8F1D4B04731C6D325BB778A9661A42738DE1E63D85CAAC9EE
4C8F26FBB61365A8D1B3E9E4A2020A7302594E7C992C56E5D21F421254857807
293F58F42B00098741959B71A1F1E7FC98EBF7EF23DFB49096DBA6FC5A4704A2
81F71E86FBF54B08436BA1F55B3B9671F0490350411678A09CEE903A37720311
D10E6823DE99D94ACC54D6FF08BB079C36E667DA778D09574B027BB6FEC2105E
FE6A3DE580C763EEC8FC59FB9D6AB81BD0C64CAD73D9857A10E505ABCD075260
6A9F554864259B158FF14B6D5EB894AF5CB2593A4D443C5E2C5C99834F29C96C
4167148BA7CCE6BFA0A131763994D268CD2BE565DF6DCA3BED6E821C39004EE1
9E40EA741038E7A49B01A302A09F3C3E046A91A782DDBD82DF0474246D41BE12
3F301640DA56FFEE5CF6A605767E3036AADBD0867D0C630432955618784AABE2
A1E731E8B7FE85517C1FE08AC5FBF317144C734A8E4CDF19383CE61C8537AD84
F1D43F1DDE40B704EF8EB3512F2D002AE1EE8474BD0A12107B41A96DA9996F6B
AD780CBAE845CC2F4233B23BDC2C959003F997072F7456BDC5D0546A3191C924
66452283578E5035448686E7DE488E5E217F59A8FA2324F3A35FEC7A8AD8A26D
98A16BDA35F72B91B0F6ABC2400D99A88384AF8B832F91AC003FBDD76005E349
188CB97BD3CF741C01CA3129F113E0F79CD219700C4A3F84CEEE93C0BABACE19
A3501BBF66A5C20E8D2FDBAF482B96CA9678C3C353F65400A21EBF181984A8D8
62C1E3466594C967C45026E1362AF24965A0DABDDC3952FEC1B5C93C733E1617
4692A56563706A8C4EC7510D06C0D4543F5AB4C61B3D976B93AAEBF4897F9070
FB433CC9A67D862616CBB4DBABAA7A8FF4958094A6122360884BE9B9C5E73B6E
9A35415DD62FB25B7F1C188FCF933B6EF4993A4EB946941594655D7309E1E50D
836ACB570698265A59152511AA53EDCFD29D72A8632EBDEFED79F2F8E1D2BBAB
8DBCA5BF77C99CC911398867A0984CC649BA5EBD5323110AC8AD48FD0CD45C89
C5AE9DA169F2BFA676E2A9BDB5BF8A95ED2851E215304B2E4473B68AA7F2A9C2
910D865CE15D189BCA09436BA7570E56E67BBC702344F52E046987068FB853D2
2E45A6F483E27416C97EB8D72491D01C0955E10CA5C70359B8F90CAF67768B5E
61AB2612A5EBAC73029597E0AB924AEEE0240ECCA73949AB3722E8BEB2A16361
8497722FF6382C6978891680B6861DBCEF320E8DE457F4704A62ED2943DE2382
7E2BA30649030D92B3CEF2DE55AF4770FE275E57034C9D9D7112A1A0F8F2DDC3
6F391D18A15F6E0693B9DC7CA095C3209CCE0D13697CC084CE310BF499701BEC
1E1C13010A34C6FBCD44AC3BAC9FE70A2C065A1B5243E26755033E2DB0255D68
2431942FB598A96611B77A877F230B06AB3E28DC01A585DB605AC6C3044EF2D9
DCA7CECA07CBB4FA4718E57F26B520291C46A9A8AA8D3BB7394111096D932741
495A858901BD8674A21208E163160F727F122D4BC5632D2B30C9EF10AB2F4A42
72E9E62AC44CD0CCB50B25E30EC2B90D9A46CB8CC749EDA7A5F5A1C1734AC556
3DB253D56657EAC24097E94045A4BC969BD5ADFB577F5A5005F742CD2615DA9F
6E5F65A02FA47A8A36CBBFAF2442C01B42EF9950D02E05EC3CA855569FB13389
90ECF476259754C8BDE5B1E7816C64288352EAEDD488ACB3D0219C14C457F665
C5947F08EC99F8DFD2DEBA6E6972D4125E2EBF88AEF6DF06C5996E48D52DCA99
365E2040D066081368AB6D0D2429C2FCBBCF6FE387A01B7BF00C66E6D21FF951
EDA6893B597C4B2278C8B4EFBA21B34DCF3D866A7536BD9874FBFE52E77339B5
28B291E1D519938578FFBF2B9FCF7948449BA8EC6E99714BA5CEF7E6BEABEF7D
B5D4475631CE1C48A51D7EAE0F048C6118882586B04DAEBF9C7D319ADF3CEC6D
FF712845E670BEC0DE8D506183CD8A9D26435247C1CDF5FC50A8C6EE8DD2ED26
27EA1B6EFDB91C272C5CB7444F11D655E6D745BF3A9DB8CA1B3441C142F1507C
0CA0CB1C2CE663FB337E7DDCED1F42C76119CA71E372B57818CEDE3D151C91BE
E09644B62EB1064630EBE55F55F99B68C746D3D053B6F4CD8D96E3D6C4092ED1
A9C1D3B79C611520BF8C1163528E3E446E72762A625C1C3FF4B7391D6031EBCE
FD5B5C4B08C0A3124FBC40DB6908828CCFDECF732182B953913EB2B12134F1BB
2843FB7FA3EB1945FEF24587799BDE5C6FF70FB819C49B42A3FC2B18AB885A91
2ADCD162D466095C7439BAC2733937729D26209ACC1264DE0F3EF0AFF7F5069E
74B80B63D79F6FBF2FE45DCD7C69B7EE9CCAB68F0BD33DA003F11EB930861A56
A5188E014E40B9F8D4026C7B1888A966D1B229C037C1DC3D5D575D62D4A885E1
9DA31DF09746BB0FDE16EFAC1A801B110852EF0EEFE8E5B592366A05544D46EA
8B0F2D661DDC5B400A37DFF7848E75E9EAB21BD4A65241B72EEB2E59B0A96924
D633132043F78A3B53E348E34681382BE6BA2F91615563FD3C01F33C37F75792
0BCE0D9AECDF7478E1920355F207F039B7CCB5B8300693E1433DE4511D10D8F1
CA0776F16F3DEAB2B501B702A52A7B428E584DF52222F0AAF87CD854422E2099
BAE68FEE0D7C5CF7E98748862699A80B721273F3C62BF79CCC1A162F056FFA4C
32E7E588AC0A41B5579E799FF6616583C368DC0088DEC148036B41B30AC6D7D2
F0F299DC247A23A22E0BAED4C0CDE249D3785A1FED11292D09DC9474E7461531
F015D902341361EFA48B3E3B467D06937BB604CBFC1EE38C9F6935026ECF3DA3
9F13CB250618CD5AC65CA27C30B7924DE91138AAC8BD82859696DC7F5A91BD5F
851D954C8FA91DD27611532070464DF076DED556A3546C08C5F8459407A667C6
499E8B616A72D295FB1C390DAC790EE4FEFDF9B896440B1E137CBB99967897E5
1C9D327E5E5497DB6ADD53A27C34CAAD56DBDAAA095A74467227777094D0341D
4DCED59A5B00BA39CA41EAD203FB02143EBD9D0DF7844F20C0D82477B39218F7
B04926DD29415B50892EB3A39F8C89D2CD0399DE3BB46D8386BC7D94FC0A8C3D
C26618B0FA59E3D37CB50A89C9D9BF211EAE4D2C10082D8AAA8FB3FF63D7B066
107BD3135521EE8A81DFB2C9DDB74772994414D00CC15D933E0B6BBCA75EE095
EC676ACC85BE5189EA312B5EBC6127BF225AA9CC77004DE668139276DEEC76D4
C2C0C036B504DD0F24D968FE18E2F6ACFF15D4966BFFF45D22DF3013A7B88382
1C627E439603EA4A13B176CAE39192489CBAF53A53E726A584D0A1C0864E32E2
8C0E6A93BBA2A17119301AA7F819AEB987821914ED04B7C18B6611D4B2255292
0C55279D75A15A6531F56D2DF3FA26CD795C9F39F000BE8BE5064F5F57F57167
50621D833DA20AC483DE71ED28B1D258A7F18381CFDBB3D2C3D6F8142CB50870
8BC52CACE65295C5CF87E242C83E3967DE730C1CFC11FDCAF71826620E4D8983
621FFE03D497B51EE2DB2CB803666619A32D417BCB8A95964E9BBD0C6D444BC8
C1FB896901ABF6E6EFF1C1F3573C36520EF22D159C66F150049B64F008B06150
75350FEF34634EF2FACEEBA06182D06CC5683874117179913942ABB12FF3F371
BF6FF699E5A1476752AFF326B068F8B6129CBB1571A0C8C3D5F95336D6DA1496
7D34B965420BAAEBAB6978043D37588E9183CB12DB4C45852F56B21C8BE60EEB
D3D9082BC2990BDDA7E64763F1763BD63EE91F59E81E22D1AD5D9914EB8C876D
B851CC304A5DD190A21220802F815EEE957803C06B822C9518649C5DB417B103
0CF11737BB3CB1E73E38D2626FDABE3246B40D1DF0EF74BE428CE04EDD6410CA
38D760A23FEF9B8018191F92562D5AF172B3D6945AACE4F7E54F588CEB27CF5C
7F934CB1FEA1FF69D758ABCC1B316D1C432858CD8A2111A96799DFDF62F63F87
0D259021FDA53AE71FCE676578F27D1F0D90C0C51CFAFDA3BC017F504CB17D9A
D52ED77876B204AC36B7EA59CDF9C5C401BDFF97FC2A3A942ADADE2C969341B9
2216FE4C4E501EEAB32131F64BA99002BE4869B50FCF99BDE45C1091DAABB160
3AE7F32CE9FE116A1DDBF7BFED23F8F6FA29F1411F1366D5A11EAB224EFE2425
8D3D30124A9150D9BCC9A8008ECBA81E69F230EBA9206584F5E02E245C65C9CE
88C0936B2FF8918C970CEEFAC6208B48ED3E85B7A70E9ED3043725A1D96A949D
50C6B68E16C3496D5D32A9B2249087AE16101825C43CD992108A3C833EC6498B
FBBFC294E223A312B81020125942528F13F3B8CA23455DCA7D15A7D69F72BD94
60AB07097FC343C97BCA64C0B51B7FCE961A249AA0E882CE620DA64BBAA3317B
36CD2D983D2D9B9B928CFAEE346D92E922FA44B8E430EDFED946E408994747CD
63A0BA185784741890CF07EF9DE2E7255EF360948D16590CC44144CD4B5C9C7F
621CF194373879A0991C84EC2E6FD6321A158104E3BC2DE6DFE1AEF1A96F3D32
12E74B14DB1A6A96F81C47A049FE9BB5E89631F30E848D1AFE47D1D887C09EC8
0D2C2139EDF5B678C9F63CD57D169A0DF52CBCB3117627A075A39FC431128570
2C987DDEAE3945E9958A2C2E933FEE805DA7E2CC4085CA382CB2C9AD1C06F639
E12BD609B9E3484ED50F708C8D7E94441BDD49137A001C18CB2F644E9E7AB94D
5C03C56EA770A9DCB8B8D958CCA0EFFDE199BD4AD7957B1029301D2273AA4BE8
F2804EA60A603EDA3C4FCC3BDE1BF95EDACAC458CCDCFD7AA052BF8DD79CFF86
E57B0B07912D33CD236087BACAA8202D431703C9B96FCBA8308E19E19C1A99C5
738E554DAB1CD1F342E1EB86825002D131730148E2EB5564FE42D2E1AB86E7AF
3A0B8D60EA289A878B9F22F2EAB7B9A5642D142A3C3CF0FCCE0E75753C1D8373
F824AE7A60BA3B1B9C0456C37671DAD84130446DC28821E5B1EAD7AB43C39DF8
A664335F673C226A2CD548CC983F3A41C9A1374A20F1FE412019AD36876F2FB9
3A5BDD4D2DBE61E87F96140C43040D8CDD7A4B484BA1FAB4EEA282A09C73A15A
D31ACE5D70E4A43CB1D4B089AF21641BE38F379570A36BEC3324EA98EF910D55
AA3BC51183D7173C50197D128087D8117E8B431ED8640CB015F6CD3E4A2D87D6
BEE02E18B9D4D7EA51FC6D74136744232FAC7579DABE52DCBBCC8BF20893E391
398AB4EC3AA32235F92593B07B9B37327D3A8DEC4A05894AA2A052C8E9BCADB6
F1A9A27CD8615DF11B6660902D57A68CD0AF69656D991E0A29A40B7E733E54E3
A0AE22BF989D1D51E2322426915FB1595F81090A6A36389ED4D5571BF23FB1DE
668AC382B5376524E73765E46B8AC49EAC5A7DE174A0E768BDE5FF1A471B4FF4
4D164D7AAC6AC5870D0F14367DA7BF8B98AED3919EED65CC49D02FD9B164C7ED
8714A9A4877F7714DE758A4BEC243DE9D458EE49DBEAB6698AFA13AB0F7FB9DA
DBE46304D61152B5763A1AE661A32435084E22A4B0FEDE66DFF5DF2692E3FA05
3F777CA4BB191D4CC1B86FE96DBE0EB5097678C5A8AF164DC8809EB0FAE7A51E
32EFC9EB9E4BF6F93792F69DDED6ABA60529C6FF25D238452D205F1AF8083B65
9D43D0D7F8036F781943C8C9C2D7F30485D0A85F71763090740FC4A04524D2E9
0B8F508E70AC8A48FF2DD72D7B0E441498C72042D170EBC44E80D41E06475E2E
827D642BEF254B63397549A99D89C5018487C161332437E78F9E57398F6FED9F
D81D5CDF89AF181406992E31160F35D3F8FA7283598B9BEA20EFF6D23F06B533
E71A5CEBAB10A5C37FE6E708810032516CCCA9EE39DD00EB511CA34AD4F826CF
769B0FAF154969D8F1DDB58BC51314D5A3F04653AF46BAAE65C6F94E3D714DC8
5A1FFE91A03EDFB4E10A3C22A7C25B70941D202B58C253EB7E6000BDDE5ADE36
B6F545E2496A8AA197D7785BAAB74192FC0451006B5AE64868FC6AEE7D04FDA2
23F4BA011D8BD627A120873090E22E9E5CA4652B395FD5D2DB649B85EBF9F1B9
50C00791A369A7CDDC75F0D6C0CB887E2DB1849EF2A09E8273CD0F39F2A18DF6
A6A50F4D16DCAB42C71C8AEF7A316D0C63CEDAF3AEBA6A7214DD62451E0ED11D
E9ED6CBCC796897A759CF0D3C824E9AC1BC95FCFD66D4151F3D58D1972D34998
8DF3F01B4FF02B4FB8AE375B68471F638A4556BBE9D9A792513DC0BD07270AAD
5900A086A33484152E35E50AE6F3DF78BC1738E9E86AD4C30BBC111670197B51
75E26B3F0E12157CCBB528BBA9680BAD6EA1C489525182276983D452A78DE647
873EDDD6D5EE79536E605639286C652A2A13FD0A1D44A3CAE5A5448F9F825F70
599B1F893BB3EF3DBE15B599C03078C09D4D909D9B5F0946AF2430F242392585
977A4D87C0F44EB66C682BEF0C099EB80CC14E8B7C6C129688E11519C33354DF
445C670F5CC27F196823FBDD3552662EFBB580A6BB84D3EA74B308112E77AB09
78FAC5C7DDFFA645BC27F94B103B7B2B540504C1D085B4AD4DAC3CB8E5D280D7
AB735202C67F46F5E35375DAA249B71F25245EEB78BF49E317D20F93D3760EB6
47F07E7A6719ACE7D439CC346D953BDED84DE29FCA80FD754226E09012A25AFB
191377CFC560E2CFC009E237425892C664C32C70704AD7AB6CEE1AC9F5952D39
AB02D43F883E1C794B9D9DAD130340AB58825C06C9751D1226BC442AD29F9F64
3DC0DFE311BF6BEE4FF26A66C230639DBFF68C6625486E793581A329ED76D9E7
B9A35B5C33AD99288158B6E283C458C87428BB313447B38C1ECCA3351D9EC6FF
1BF5C513D0B9C7C1FC91CA84FDA4D81185BBD6DCCD5EE7AC72A6B850FC2955B0
9D47D5ED3850277A2AFF90D92494D5D2B9C1ED81F87E59A79349DB0C195D87AC
C2BE6113F46952C97B3254DA50A540F3A44C015E92023E3A4A1235E2D92BA7DE
B95DE77CCFC67F196A81AA8D67D08C05DB91874BB39617D460903B443DD2841C
2450465852A3F02939FCE39060661F4AC657499B1047A07E3C8C04B683A9E14D
5DEEC363D686D12DFF32ED3569FA2BF4FA05A85060965FA4578987B3FE0A1A9B
E60AAA55005A1BE3C4CCA086E0B92247952CF406FEA49A0D0D4FDDA191F819B9
F7DB2A6FE9956B4F98A02F1C95D0E4439C0E2987C0C3FF0C6A1FB8BEC255C880
07121333F312A94FA6267A0A7032E7D2C4B54374110A90C3035206046BDA9D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (PlayingWithTypes.dvi)
@start /Fa 129[31 6[31 1[31 31 31 31 1[31 31 31 31 31
31 31 31 31 31 31 31 31 31 31 31 11[31 2[31 1[31 8[31
3[31 1[31 6[31 10[31 31 31 45[{}32 58.1154 /CMTT8 rf
/Fb 105[33 28[29 1[44 29 33 18 26 26 33 33 33 33 48 18
29 1[18 33 33 18 29 33 29 33 33 8[41 55 41 1[37 33 41
1[41 48 44 55 37 1[29 22 48 48 41 41 48 44 41 41 6[22
33 33 33 33 33 33 33 33 33 33 1[17 22 17 2[22 22 22 52
38[{ TeXBase1Encoding ReEncodeFont }63 66.4176 /Times-Italic
rf /Fc 71[22 15[22 16[66 33 27[29 33 33 48 33 33 18 26
22 33 33 33 33 52 18 33 18 18 33 33 22 29 33 29 33 29
3[22 1[22 41 48 48 63 48 48 41 37 44 1[37 48 48 59 41
48 26 22 48 48 37 41 48 44 44 48 1[29 4[18 33 33 33 33
33 33 33 33 33 33 18 17 22 17 2[22 22 22 36[37 2[{
 TeXBase1Encoding ReEncodeFont }77 66.4176 /Times-Roman
rf /Fd 206[25 49[{ TeXBase1Encoding ReEncodeFont }1 49.8132
/Times-Roman rf /Fe 129[35 35 35 35 35 35 35 35 35 35
35 35 35 1[35 35 35 35 35 2[35 35 35 35 35 35 35 35 35
35 35 8[35 3[35 2[35 9[35 1[35 35 35 2[35 35 35 35 35
1[35 2[35 35 35 35 35 35 35 35 35 35 35 35 35 35 2[35
37[{}57 66.4176 /CMTT8 rf /Ff 145[38 110[{}1 49.8132
/CMMI6 rf /Fg 205[30 30 49[{}2 49.8132 /CMR6 rf /Fh 223[75
32[{}1 74.7198 /MSAM10 rf /Fi 222[77 33[{}1 74.7198 /CMSY9
rf /Fj 223[66 32[{}1 58.1154 /MSAM7 rf /Fk 134[21 2[21
21 12 16 2[21 1[21 32 12 6[18 1[18 1[18 97[{
 TeXBase1Encoding ReEncodeFont }12 41.511 /Times-Roman
rf /Fl 129[39 39 39 39 39 39 39 39 39 39 39 39 39 39
39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39
39 39 39 39 39 3[39 1[39 39 39 1[39 39 39 39 39 2[39
39 1[39 39 1[39 39 39 2[39 39 39 39 39 39 1[39 1[39 39
39 39 39 39 1[39 39 39 39 39 39 39 39 1[39 1[39 39 34[{}77
74.7198 /CMTT9 rf /Fm 245[66 10[{}1 90.9091 /CMR10 rf
/Fn 240[35 15[{}1 66.4176 /CMSY8 rf /Fo 149[20 72[66
19[66 13[{}3 58.1154 /CMSY7 rf /Fp 134[29 1[42 29 29
16 23 19 29 29 29 29 45 16 29 1[16 29 29 19 26 29 26
29 26 3[19 1[19 36 5[36 32 39 1[32 1[42 52 3[19 5[39
1[42 6[16 4[29 2[29 29 29 16 15 1[15 1[29 19 19 19 2[29
33[32 2[{ TeXBase1Encoding ReEncodeFont }49 58.1154 /Times-Roman
rf /Fq 133[33 37 1[54 37 42 25 29 33 1[42 37 42 62 21
42 25 21 42 37 25 33 42 33 42 37 9[75 54 1[50 42 54 1[46
58 1[71 50 58 2[58 58 46 50 54 54 50 54 1[37 6[37 37
37 37 37 37 37 37 2[19 25 19 44[{ TeXBase1Encoding ReEncodeFont }54
74.7198 /Times-Bold rf /Fr 133[29 33 33 50 33 37 21 29
29 37 37 37 37 54 21 33 1[21 37 37 21 33 37 33 37 37
9[62 2[42 37 46 1[46 1[50 62 42 6[46 1[50 46 46 1[37
17[25 5[25 36[37 2[{ TeXBase1Encoding ReEncodeFont }41
74.7198 /Times-Italic rf /Fs 245[55 10[{}1 74.7198 /CMR9
rf /Ft 135[35 2[40 1[29 26 1[40 7[40 2[34 40 34 1[37
32[51 17[21 46[{}12 74.7198 /CMSS9 rf /Fu 104[75 37 1[33
33 24[33 37 37 54 37 37 21 29 25 37 37 37 37 58 21 37
21 21 37 37 25 33 37 33 37 33 3[25 1[25 2[54 71 54 54
46 42 50 54 42 54 54 66 46 54 1[25 54 54 42 46 54 50
50 54 1[33 3[21 21 2[37 1[37 37 37 37 37 37 21 19 25
19 2[25 25 25 5[25 29[42 42 2[{ TeXBase1Encoding ReEncodeFont }75
74.7198 /Times-Roman rf /Fv 141[30 4[71 3[25 46 2[41
46 2[41 12[56 51 83[{ TeXBase1Encoding ReEncodeFont }9
91.3242 /Times-Roman rf /Fw 134[33 33 1[33 37 22 26 29
1[37 33 37 4[18 37 1[22 29 2[37 33 10[48 2[37 48 1[41
12[48 44 48 1[33 12[33 8[22 22 40[{ TeXBase1Encoding ReEncodeFont }27
66.4176 /Times-Bold rf /Fx 134[46 46 66 46 51 30 36 41
1[51 46 51 76 25 51 1[25 51 46 30 41 51 41 51 46 12[61
51 66 4[86 61 2[36 3[61 1[66 61 66 8[46 46 46 46 46 46
46 46 2[23 30 45[{ TeXBase1Encoding ReEncodeFont }43
91.3242 /Times-Bold rf /Fy 134[75 1[108 2[50 58 2[83
1[83 124 42 2[42 83 75 1[66 3[75 12[100 83 2[91 21[50
58[{ TeXBase1Encoding ReEncodeFont }17 149.44 /Times-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop -600 -600 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 -600 -600 a -600 -600
a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -758 -608 a
SDict begin H.S end
 -758 -608 a -758 -608 a
SDict begin H.R end
 -758
-608 a -758 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -758 -608 a Black Black Black Black
Black 1043 161 a Fy(Playing)51 b(with)h(T)-11 b(ype)52
b(Systems:)626 269 y Fx(A)-5 b(utomated)52 b(assistance)e(in)i(the)g
(design)f(of)h(pr)n(ogramming)f(languages)1778 344 y
Fw(Re)o(vision)j(2)1729 643 y Fv(T)m(im)23 b(Sheard)1566
767 y Fu(Portland)c(State)f(Uni)n(v)o(ersity)1646 867
y Ft(shea)n(rd@cs.p)r(dx.edu)p Black -150 1280 a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Introduction.) /OUT
pdfmark end
 -150
1280 a -150 1280 a
SDict begin [/Count -8/Dest (section.2) cvn/Title (The mega \040meta-programming language.)
/OUT pdfmark end
 -150 1280 a -150 1280 a
SDict begin [/Count -0/Dest (subsection.2.1) cvn/Title (Generalized Algebraic Datatypes)
/OUT pdfmark end
 -150 1280
a -150 1280 a
SDict begin [/Count -0/Dest (subsection.2.2) cvn/Title (Representing Object-Programs with Types as Data)
/OUT pdfmark end
 -150 1280 a -150 1280 a
SDict begin [/Count -0/Dest (subsection.2.3) cvn/Title (Values, Types, Kinds, and Sorts)
/OUT pdfmark end
 -150 1280 a -150
1280 a
SDict begin [/Count -0/Dest (subsection.2.4) cvn/Title (Singleton Types)
/OUT pdfmark end
 -150 1280 a -150 1280 a
SDict begin [/Count -0/Dest (subsection.2.5) cvn/Title (Tags and Labels)
/OUT pdfmark end
 -150 1280 a -150 1280
a
SDict begin [/Count -0/Dest (subsection.2.6) cvn/Title (Rows, Records, and HasType.)
/OUT pdfmark end
 -150 1280 a -150 1280 a
SDict begin [/Count -0/Dest (subsection.2.7) cvn/Title (An Object Language with Binding.)
/OUT pdfmark end
 -150 1280 a -150 1280 a
SDict begin [/Count -0/Dest (subsection.2.8) cvn/Title (The bottom line.)
/OUT pdfmark end
 -150
1280 a -150 1280 a
SDict begin [/Count -0/Dest (section.3) cvn/Title (The MetaML language.)
/OUT pdfmark end
 -150 1280 a -150 1280 a
SDict begin [/Count -0/Dest (section.4) cvn/Title (MetaML as an mega \040program.)
/OUT pdfmark end
 -150 1280
a -150 1280 a
SDict begin [/Count -3/Dest (section.5) cvn/Title (Sliding Bands of Contexts)
/OUT pdfmark end
 -150 1280 a -150 1280 a
SDict begin [/Count -0/Dest (subsection.5.1) cvn/Title (An Evaluation Function.)
/OUT pdfmark end
 -150 1280 a -150
1280 a
SDict begin [/Count -0/Dest (subsection.5.2) cvn/Title (Building code.)
/OUT pdfmark end
 -150 1280 a -150 1280 a
SDict begin [/Count -0/Dest (subsection.5.3) cvn/Title (Well-typed MetaML programs do not go wrong)
/OUT pdfmark end
 -150 1280 a -150 1280
a
SDict begin [/Count -0/Dest (section.6) cvn/Title (Evaluating the type system.)
/OUT pdfmark end
 -150 1280 a -150 1280 a
SDict begin [/Count -0/Dest (section.7) cvn/Title (Related work.) /OUT
pdfmark end
 -150 1280 a -150 1280 a
SDict begin [/Count -0/Dest (section.8) cvn/Title (Conclusion.) /OUT
pdfmark end
 -150
1280 a -150 1280 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -150 1280 a -150 1280 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -150 1280
a -150 1280 a
SDict begin H.S end
 -150 1280 a -150 1280 a
SDict begin 10 H.A end
 -150 1280 a -150
1280 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -150 1280 a -150 1280 a
SDict begin [ {Catalog} << /PageLabels<</Nums[0<</P(1)>>1<</P(2)>>2<</P(3)>>3<</P(4)>>4<</P(5)>>5<</P(6)>>6<</P(7)>>7<</P(8)>>8<</P(9)>>9<</P(10)>>10<</P(11)>>11<</P(12)>>]>>
>> /PUT pdfmark end
 -150 1280 a -150 1346
a
SDict begin H.S end
 -150 1346 a -150 1346 a
SDict begin 13 H.A end
 -150 1346 a -150 1346 a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 -150
1346 a Fx(Abstract)-150 1462 y Fu(W)-6 b(e)14 b(introduce)h(the)g
(programming)h(language)g Fs(\012)p Fu(me)o(ga,)f(and)g(illustrate)f
(ho)n(w)-150 1545 y(it)25 b(can)h(be)g(used)h(as)f(a)f(general)i
(purpose)g(meta-language.)g Fs(\012)p Fu(me)o(ga)f(has)g(a)-150
1628 y(sophisticated)31 b(type)g(system)g(b)o(uilt)f(on)h(top)g(of)g
(Generalized)g(Algebraic)-150 1712 y(Datatypes)h(and)f(an)h(e)o
(xtensible)f(kind)h(system.)f(It)g(allo)n(ws)g(users)g(to)g(en-)-150
1795 y(code)c(object-le)n(v)o(el)g(types)g(in)f(the)g(meta-le)n(v)o(el)
h(data)f(structures)h(that)f(rep-)-150 1878 y(resent)c(object-le)n(v)o
(el)h(terms.)e(W)-6 b(e)22 b(sho)n(w)g Fs(\012)p Fu(me)o(ga)h(can)g(be)
f(used)h(to)f(e)o(xplore)-150 1961 y(language)h(designs)g(interacti)n
(v)o(ely)-5 b(,)22 b(by)g(constructing)h(both)f(static)g(and)g(dy-)-150
2044 y(namic)d(semantics)h(as)f Fs(\012)p Fu(me)o(ga)g(programs.)h
(These)f(programs)h(can)f(be)h(seen)-150 2127 y(as)25
b(partially)h(check)o(ed)h(proofs)f(of)f(soundness)i(of)f(the)f(system)
h(under)g(e)o(x-)-150 2210 y(ploration.)i(As)g(a)g(lar)o(ge)g(e)o
(xample)h(we)f(present)g(a)g(ne)n(w)h(type)f(system)g(for)-150
2293 y(MetaML,)19 b(that)g(is)f(simpler)h(than)g(pre)n(vious)i(type)e
(systems.)-150 2453 y
SDict begin H.S end
 -150 2453 a -150 2453 a
SDict begin 10 H.A end
 -150 2453
a -150 2453 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 -150 2453 a 92 x Fx(1.)91 b(Intr)n(oduction.)-150
2661 y Fu(It)26 b(has)h(become)h(common)g(practice)f(when)h(designing)g
(a)f(ne)n(w)g(language)-150 2744 y(to)d(create)h(both)g(a)f(static)g
(semantics)h(\(type)g(system\))f(and)i(a)e(dynamic)h(se-)-150
2827 y(mantics)18 b(and)h(to)e(pro)o(v)o(e)i(the)f(soundness)h(of)f
(the)g(type)g(system)g(with)g(respect)-150 2910 y(to)27
b(the)f(dynamic)i(semantics.)f(This)g(process)g(is)g(often)g(e)o
(xploratory)-5 b(.)27 b(The)-150 2993 y(designer)e(has)g(an)g(idea,)f
(the)g(approach)i(is)e(analyzed,)i(and)f(hopefully)g(the)-150
3076 y(consequences)i(of)d(the)g(approach)h(are)g(quickly)g(disco)o(v)o
(ered.)f(Automated)-150 3159 y(aid)19 b(in)g(this)f(process)i(w)o(ould)
g(be)f(a)g(great)g(boon.)-50 3242 y(The)e(ultimate)h(goal)g(of)g(this)g
(e)o(xploratory)h(process)g(is)e(a)h(type)g(system,)g(a)-150
3325 y(semantics,)f(and)h(a)f(proof.)g(The)g(proof)g(witnesses)g(the)g
(f)o(act)g(that)g Fr(well-typed)-150 3408 y(pr)m(o)o(gr)o(ams)25
b(do)f(not)g(go)g(wr)m(ong)g Fu([)p Fq(?)g Fu(])f(for)h(the)g(language)
h(under)f(considera-)-150 3491 y(tion.)g(Approaches)i(include)e(a)h
(subject)f(reduction)h(proof)g(in)f(the)g(style)g(of)-150
3574 y(Wright)k(and)i(Felleisen[)p Fq(?)e Fu(])h(on)g(a)f(small)h(step)
g(semantics,)g(or)f(by)i(using)-150 3657 y(denotational)22
b(approaches.)g(In)e(either)h(case,)f(proofs)i(require)f(an)f(amazing)
-150 3740 y(amount)26 b(of)g(detail)f(and)h(are)f(most)h(often)f
(carried)h(out)f(by)h(hand,)g(and)g(are)-150 3823 y(thus)21
b(subject)g(to)f(all)g(the)g(foils)g(of)h(human)h(endea)o(v)o(ors.)e
(It)g(has)h(long)g(been)g(a)-150 3906 y(personal)d(goal)g(of)f(the)g
(author)h(to)f(de)n(v)o(elop)i(a)e(generic)h(meta-language)g(that)-150
3989 y(could)26 b(be)g(used)g(for)f(e)o(xploring)h(the)g(static)e(and)i
(dynamic)h(semantics)e(for)-150 4072 y(ne)n(w)19 b(object-languages[)p
Fq(?)j(?)d Fu(])f(that)h(could)h(aid)f(in)g(the)g(generation)h(of)f
(such)-150 4155 y(proofs.)i(Man)o(y)h(others)f(ha)o(v)o(e)f(had)i
(similar)e(desires)h(and)g(the)g(de)n(v)o(elopment)-150
4238 y(of)g(systems)g(lik)o(e)g(T)-6 b(welf[)p Fq(?)21
b Fu(])f(and)i(Coq[)p Fq(?)f Fu(])g(attest)f(to)h(the)g(broad)h(appeal)
f(of)-150 4321 y(these)h(ideas.)g(But,)g(while)f(the)h(author)h(o)n
(wes)f(much)h(to)f(these)g(systems)g(for)-150 4404 y(inspiration,)17
b(he)f(has)h(al)o(w)o(ays)h(desired)f(a)f(system)h(whose)g(use)g(w)o
(as)g(closer)f(in)-150 4487 y(style)21 b(to)g(the)h(use)g(of)f(a)g
(programming)i(language)g(than)f(e)o(xisting)f(systems.)-150
4570 y(Hence)e(the)f(de)n(v)o(elopment)j(of)d(the)g(language)i
Fs(\012)p Fu(me)o(ga.)f(This)f(paper)h(reports)p Black
-150 5002 a Fp(Permission)g(to)h(mak)o(e)f(digital)h(or)f(hard)h
(copies)e(of)i(all)f(or)g(part)h(of)f(this)g(w)o(ork)h(for)g(personal)f
(or)-150 5068 y(classroom)d(use)f(is)h(granted)h(without)f(fee)g(pro)o
(vided)h(that)g(copies)e(are)h(not)h(made)f(or)g(distrib)o(uted)-150
5135 y(for)e(pro\002t)g(or)g(commercial)g(adv)o(antage)e(and)h(that)h
(copies)f(bear)g(this)g(notice)h(and)f(the)g(full)h(citation)-150
5201 y(on)i(the)g(\002rst)g(page.)f(T)-5 b(o)16 b(cop)o(y)h(otherwise,)
e(to)h(republish,)g(to)g(post)g(on)g(serv)o(ers)g(or)g(to)g(redistrib)o
(ute)-150 5268 y(to)f(lists,)e(requires)i(prior)h(speci\002c)e
(permission)g(and/or)h(a)g(fee.)-150 5417 y(Cop)o(yright)120
5415 y(c)100 5417 y Fo(\015)29 b Fp(A)n(CM)13 b([to)j(be)e(supplied].)9
b(.)g(.)g($10.00)p Black Black Black 2042 1346 a Fu(on)20
b(our)g(e)o(xperience)g(using)h(the)e(language)i Fs(\012)p
Fu(me)o(ga[)p Fq(?)g(?)e(?)h(?)f Fu(])h(as)f(just)g(such)2042
1429 y(a)g(meta-language.)h(In)f(this)f(paper)i(we)f(sho)n(w)g(that:)p
Black 2085 1561 a Fn(\017)p Black 2150 1568 a Fu(Much)28
b(of)f(the)f(w)o(ork)i(of)f(e)o(xploring)h(the)f(nuances)h(of)f(a)f
(type)i(system)2150 1651 y(for)17 b(a)g(ne)n(w)h(language)h(can)f(be)g
(assisted)f(by)h(using)g(mechanized)h(tools)f(\226)2150
1734 y(a)i(generic)i(meta-language.)g(W)-6 b(e)20 b(call)g(this)g(e)o
(xploration)i(playing)f(with)2150 1817 y(type)e(systems.)p
Black 2085 1926 a Fn(\017)p Black 2150 1933 a Fu(Such)25
b(tools)g(need)i(not)e(be)h(much)g(more)f(complicated)h(than)g(your)g
(f)o(a-)2150 2016 y(v)o(orite)j(functional)i(language)g(\(Hask)o
(ell\),)f(and)g(are)g(thus)g(within)g(the)2150 2099 y(reach)f(most)f
(language)j(researchers.)e(After)f(all)g(playing)h(should)h(be)2150
2182 y(child')l(s)19 b(w)o(ork.)p Black 2085 2291 a Fn(\017)p
Black 2150 2298 a Fu(The)24 b(automation)i(helps)f(language)h
(designers)g(visualize)f(the)f(conse-)2150 2381 y(quences)j(of)e(their)
g(design)i(choices)f(quickly)-5 b(,)26 b(and)g(thus)g(helps)g(speed)
2150 2464 y(the)19 b(design)g(process.)p Black 2085 2573
a Fn(\017)p Black 2150 2580 a Fu(The)g(artif)o(acts)g(created)g(by)h
(this)f(e)o(xploration,)h(while)f(not)g(quite)g(proofs)2150
2663 y(in)26 b(the)g(full)f(sense,)i(are)f(check)o(ed)h(by)g(machine,)g
(and)f(are)g(hence)h(less)2150 2746 y(subject)k(to)f(error)h(than)g
(pencil)g(and)h(paper)f(proofs)h(constructed)g(by)2150
2829 y(hand.)2141 2968 y(In)23 b(addition)f(to)h(the)f(broad)h(goals)g
(about)f(meta-language)i(design,)f(the)2042 3051 y(author)32
b(has)h(also)f(de)n(v)o(oted)g(much)h(ener)o(gy)g(to)e(searching)i(for)
f(a)g(simple)2042 3134 y(ele)o(gant)26 b(type)g(system)h(for)f(a)g
(multi-stage)g(language)h(such)g(as)f(MetaML.)2042 3217
y(Such)17 b(a)h(system)f(should)h(not)g(thro)n(w)g(a)o(w)o(ay)f(too)h
(man)o(y)g(good)g(programs[)p Fq(?)h(?)2042 3300 y(?)c
Fu(])f(\(thus)h(losing)h(much)f(of)g(its)f(usefulness\))i(or)f(be)g(o)o
(v)o(erly)h(comple)o(x[)p Fq(?)g(?)f(?)g Fu(].)2042 3383
y(After)20 b(man)o(y)h(attempts,)f(the)h(search)g(has)g(been)g
(fruitful.)f(Thus,)g(this)g(paper)2042 3466 y(has)c(tw)o(o)g(purposes.)
h(First,)e(it)g(demonstrates)i(the)f(ef)n(\002cac)o(y)g(of)h(the)f
(language)2042 3549 y Fs(\012)p Fu(me)o(ga)h(as)h(a)f(\002rst)f(step)h
(to)n(w)o(ards)h(the)f(design)h(of)f(a)g(general)h(purpose)g(meta-)2042
3632 y(language.)e(Second,)g(it)f(illustrates)f(that)i(a)f(simple)g
(ele)o(gant)h(type)g(system)f(for)2042 3715 y(a)j(multi-stage)h
(language)h(is)e(possible.)h(The)f(approach)i(is)f(so)f(general,)h
(that)2042 3798 y(we)c(belie)n(v)o(e)i(it)e(can)h(be)g(applied)g(to)g
(an)o(y)g(multistage)g(language,)g(and)h(as)e(such)2042
3881 y(is)j(of)h(wide)g(spread)h(interest)e(to)h(the)g(program)h
(generation)g(community)-5 b(.)2141 3964 y(The)23 b(paper)f(is)g(di)n
(vided)i(into)e(three)g(parts.)g(First,)f(in)h(Section)3783
3964 y
SDict begin H.S end
 3783 3964 a Black Fu(2)p Black 3820 3913 a
SDict begin H.R end
 3820
3913 a 3820 3964 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (section.2) cvn H.B /ANN pdfmark end
 3820 3964 a 22 w Fu(we)g(in-)2042
4047 y(troduce)h(the)f(language)i Fs(\012)p Fu(me)o(ga.)f(Second,)f(in)
g(Section)3537 4048 y
SDict begin H.S end
 3537 4048 a Black -1 x Fu(3)p Black
3574 3996 a
SDict begin H.R end
 3574 3996 a 3574 4047 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (section.3) cvn H.B /ANN pdfmark end
 3574 4047 a 22 w
Fu(we)g(discuss)h(the)2042 4130 y(multi-staged)15 b(language)i(MetaML,)
f(and)g(e)o(xplain)f(why)h(it)e(is)h(so)h(hard)g(to)f(de-)2042
4213 y(v)o(elop)j(a)g(sound)h(type)f(system)h(for)e(a)h(staged)h
(language.)g(In)e(this)h(section)g(we)2042 4296 y(pro)o(vide)26
b(se)n(v)o(eral)g(small)g(programs)g(that)g(illustrate)f(the)h
(multiple)f(causes)2042 4379 y(of)h(soundness)i(errors)f(in)f(a)g
(staged)h(language.)h(Third,)d(in)i(Section)3884 4379
y
SDict begin H.S end
 3884 4379 a Black Fu(4)p Black 3921 4328 a
SDict begin H.R end
 3921 4328
a 3921 4379 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (section.4) cvn H.B /ANN pdfmark end
 3921 4379 a 26 w Fu(we)2042 4462 y(play)21
b(with)g(type)h(systems.)f(In)g(this)g(section)h(we)f(introduce)h(our)g
(static)e(and)2042 4545 y(dynamic)28 b(semantics)f(for)g(a)g
(multi-stage)g(language)i(as)e(an)g Fs(\012)p Fu(me)o(ga)h(pro-)2042
4628 y(gram.)d(W)-6 b(e)24 b(demonstrate)i(that)e(the)h(ability)g(to)g
(e)o(xplore)g(issues)g(is)g(greatly)2042 4711 y(enhanced)g(by)f(the)g
(machine)g(assistance)h(supplied)f(by)g Fs(\012)p Fu(me)o(ga,)g(and)g
(that)2042 4794 y(the)19 b(artif)o(acts)f(produced)j(consist)e(of)g
(machine)h(check)o(ed)h(proofs.)2042 4890 y
SDict begin H.S end
 2042 4890
a 2042 4890 a
SDict begin 10 H.A end
 2042 4890 a 2042 4890 a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 2042 4890 a 91
x Fx(2.)91 b(The)22 b Fm(\012)p Fx(mega)44 b(meta-pr)n(ogramming)21
b(language.)2042 5098 y Fu(Hask)o(ell)34 b(mak)o(es)g(a)f(f)o(air)h
(meta-language.)h(Its)e(support)h(for)f(abstraction)2042
5181 y(and)j(\002rst)f(class)h(functions)g(mak)o(e)h(it)e(an)h(e)o
(xcellent)g(tool)g(for)f(de\002ning)2042 5264 y(object-language)26
b(programs)f(as)f(Hask)o(ell)g(data,)g(and)h(for)e(de\002ning)i(meta-)
2042 5347 y(language)36 b(manipulations)h(as)e(Hask)o(ell)g(functions.)
h(Unfortunately)-5 b(,)36 b(its)2042 5430 y(type)15 b(system)g(is)f
(too)h(weak)g(to)f(be)h(a)g(true)f(generic)i(meta-programming)g(sys-)p
Black Black eop end
%%Page: 2 2
TeXDict begin 2 1 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -758 -608
a
SDict begin H.S end
 -758 -608 a -758 -608 a
SDict begin H.R end
 -758 -608 a -758 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -758
-608 a Black Black -150 66 a Fu(tem.)21 b(In)g(particular)h(Hask)o(ell)
f(lacks)h(the)g(f)o(acilities)e(to)i(de\002ne)f(and)i(enforce)-150
149 y(type-systems)31 b(for)f(object-language)i(programs)f(represented)
g(as)f(meta-)-150 232 y(language)h(data.)e(T)-6 b(o)28
b(o)o(v)o(ercome)j(this)d(de\002cienc)o(y)i(we)f(ha)o(v)o(e)g
(de\002ned)h(the)-150 315 y(language)20 b Fs(\012)p Fu(me)o(ga.)p
Black -106 484 a Fn(\017)p Black -42 491 a Fs(\012)p
Fu(me)o(ga)72 b(is)36 b(based)h(on)f(Hask)o(ell)h(so)f(that)g(it)f(is)h
(easy)g(for)g(Hask)o(ell)-42 575 y(programmers)20 b(to)f(learn.)p
Black -106 684 a Fn(\017)p Black -42 691 a Fu(W)-6 b(e)27
b(started)g(by)h(adding)g(some)g(features)g(and)g(remo)o(ving)g
(others.)f(T)-6 b(o)-42 774 y(mak)o(e)17 b(our)f(\002rst)e(attempt)i
(simple)g(we)g(ha)o(v)o(e)g(remo)o(v)o(ed)g(the)g(class)g(system)-42
857 y(of)g(Hask)o(ell,)g(and)h(made)f Fs(\012)p Fu(me)o(ga)33
b(strict)15 b(b)o(ut)h(pure.)g(W)-6 b(e)16 b(ha)o(v)o(e)g(tried)g(hard)
-42 940 y(to)25 b(k)o(eep)i(all)e(the)g(other)h(features)g(of)f(Hask)o
(ell)h(not)g(af)n(fected)g(by)g(these)-42 1023 y(choices)20
b(intact.)p Black -106 1132 a Fn(\017)p Black -42 1139
a Fu(W)-6 b(e)29 b(added)h(small)f(\(backw)o(ard)h(compatible\))g
(features)f(that)g(support)-42 1222 y(programs)20 b(that)f(use)g(a)g
(form)g(of)g(re\002nement)g(or)g(dependent)i(types.)e(W)-6
b(e)-42 1305 y(tried)30 b(hard)i(not)f(to)f(disturb)h(the)g(functional)
g(programming)i(style)d(\226)-42 1388 y(in)g(particular)h(the)f(phase)h
(distinction)g(between)g(v)n(alues)g(and)g(types.)-42
1471 y(The)h(features)g(we)f(added)i(are)f(Generalized)h(Algebraic)f
(Datatypes)-42 1554 y(\(GADTs\))18 b(and)i(an)f(e)o(xtensible)g(kind)h
(system.)p Black -106 1663 a Fn(\017)p Black -42 1670
a Fu(W)-6 b(e)16 b(b)o(uilt)g(a)h(non-tri)n(vial)g(implementation)h
(and)f(ha)o(v)o(e)g(programmed)i(up)-42 1753 y(a)g(wide)g(array)g(of)g
(e)o(xamples)h(from)e(the)h(literature.)-150 1871 y
SDict begin H.S end
 -150
1871 a -150 1871 a
SDict begin 10 H.A end
 -150 1871 a -150 1871 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.1) cvn /DEST pdfmark
end
 -150 1871
a 67 x Fq(2.1)75 b(Generalized)19 b(Algebraic)g(Datatypes)-150
2054 y Fu(The)30 b(k)o(e)o(y)h(to)f(this)g(style)h(of)f(programming)i
(is)d(the)i(use)f(of)h(Generalized)-150 2137 y(Algebraic)22
b(Datatypes)h(\(GADTs\),)d(a)i(generalization)h(of)f(the)g(normal)g
(Al-)-150 2220 y(gebraic)c(Datatypes)g(\(ADT\))e(a)o(v)n(ailable)i(in)f
(functional)h(programming)h(lan-)-150 2303 y(guages)25
b(such)f(as)f(Hask)o(ell,)h(ML,)f(and)h(O'Caml.)f(Implementing)h(GADTs)
-150 2386 y(in)f(a)g(functional)h(language)h(requires)f(only)f(a)g
(small,)g(backw)o(ard)i(compat-)-150 2469 y(ible,)e(change)j(to)d(the)h
(ADT)f(notion)i(and)f(is)g(easily)g(understood)i(by)e(func-)-150
2552 y(tional)e(programmers.)h(A)f(language)i(with)e(GADTs)f(can)i
(support)g(se)n(v)o(eral)-150 2635 y(closely)i(related)g(concepts)h
(such)f(Re\002nement)g(T)-6 b(ypes[)p Fq(?)26 b(?)e(?)h
Fu(],)f(Guarded)-150 2718 y(Recursi)n(v)o(e)38 b(Datatype)g
(Constructors[)p Fq(?)g Fu(],)f(Inducti)n(v)o(e)i(F)o(amilies[)p
Fq(?)d(?)i Fu(],)-150 2801 y(First-class)16 b(phantom)i(types[)p
Fq(?)f Fu(],)f(Silly)g(T)-6 b(ype)17 b(F)o(amilies[)p
Fq(?)f Fu(],)g(and)h(Equality)-150 2884 y(Quali\002ed)22
b(T)-6 b(ypes[)p Fq(?)23 b(?)f Fu(].)f(There)h(are)g(man)o(y)h(e)o
(xamples)g(of)f(the)g(usefulness)-150 2967 y(of)d(such)h(concepts)g(in)
e(the)h(recent)h(literature[)p Fq(?)e(?)h(?)g(?)g(?)h(?)f(?)g
Fu(].)-50 3050 y(ADTs)25 b(generalize)i(other)f(forms)h(of)f
(structuring)g(data)h(such)g(as)f(enu-)-150 3133 y(merations,)15
b(records,)f(and)h(tagged)h(v)n(ariants.)e(F)o(or)g(e)o(xample,)h(in)f
Fs(\012)p Fu(me)o(ga)30 b(\(and)-150 3216 y(in)19 b(Hask)o(ell\))g(we)g
(write:)p Black Black -111 3392 a Fl(--)40 b(An)g(enumeration)h(type)
-150 3475 y(data)f(Major)h(=)e(CompScience)j(|)d(English)i(|)e
(Chemistry)-150 3641 y(type)h(Number)h(=)e(Int)-150 3724
y(type)h(Title)h(=)e(String)-111 3807 y(--)h(A)f(record)i(structure)
-150 3890 y(data)f(Class)h(=)e(MakeClass)i(Number)g(Title)-150
4056 y(--)f(A)f(tagged)i(Variant)-150 4139 y(data)f(Person)h(=)e
(Teacher)i([Class])80 b(|)40 b(Student)g(Major)-50 4315
y Fu(W)-6 b(e)24 b(assume)i(the)g(reader)f(has)h(a)f(certain)g(f)o
(amiliarity)g(with)g(ADTs.)f(In)-150 4399 y(particular)35
b(that)g(v)n(alues)g(of)g(ADTs)f(are)h(constructed)h(by)g
Fr(constructor)o(s)-150 4482 y Fu(and)24 b(that)f(the)o(y)g(are)g(tak)o
(en)h(apart)f(by)h(the)f(use)g(of)g Fr(pattern)h(matc)o(hing)p
Fu(.)f(T)-6 b(w)o(o)-150 4565 y(v)n(aluable)21 b(features)f(of)h(ADTS)e
(are)h(their)f(ability)h(to)g(be)h Fr(par)o(ameterized)g(by)-150
4648 y(a)27 b(type)h Fu(and)g(to)f(be)h Fr(r)m(ecur)o(sive)p
Fu(.)g(A)f(simple)h(e)o(xample)g(that)f(emplo)o(ys)i(both)-150
4731 y(these)19 b(features)g(is:)p Black Black -150 4873
a Fl(data)40 b(Tree)g(a)-32 4956 y(=)f(Fork)h(\(Tree)h(a\))e(\(Tree)i
(a\))-32 5039 y(|)e(Node)h(a)-32 5122 y(|)f(Tip)-150
5264 y Fu(This)29 b(declaration)i(de\002nes)f(the)g(polymorphic)h
Fl(Tree)g Fu(type)f(constructor)l(.)-150 5347 y(Example)j(tree)f(types)
h(include)g Fl(\(Tree)40 b(Int\))33 b Fu(and)g Fl(\(Tree)40
b(Bool\))p Fu(.)33 b(In)-150 5430 y(f)o(act)28 b(the)h(type)g
(constructor)g Fl(Tree)g Fu(can)g(be)g(applied)g(to)g(an)o(y)g(type)f
(what-)p Black Black 2042 66 a(soe)n(v)o(er)l(.)21 b(Note)g(ho)n(w)g
(the)g(constructor)h(functions)g(\()p Fl(Fork)p Fu(,)f
Fl(Node)p Fu(\))g(and)h(con-)2042 149 y(stants)d(\()p
Fl(Tip)p Fu(\))g(are)g(gi)n(v)o(en)g(polymorphic)i(types.)2042
292 y Fl(Fork)40 b(::)g(forall)g(a)g(.)f(Tree)h(a)g(->)f(Tree)i(a)e(->)
h(Tree)g(a)p 3572 305 236 4 v 2042 375 a(Node)g(::)g(forall)g(a)g(.)f
(a)h(->)f(Tree)h(a)p 2983 388 V 2042 459 a(Tip)g(::)f(forall)i(a)e(.)h
(Tree)g(a)p 2748 472 V 2141 602 a Fu(When)18 b(we)f(de\002ne)g(a)h
(parameterized)g(algebraic)f(datatype,)h(the)g(syntac-)2042
685 y(tic)25 b(formation)i(rules)f(of)g(the)g Fl(data)g
Fu(declaration)h(enforce)g(the)f(follo)n(wing)2042 768
y(restriction:)16 b(The)h(range)h(of)f(e)n(v)o(ery)h(constructor)g
(function,)f(and)h(the)f(type)g(of)2042 851 y(e)n(v)o(ery)25
b(constructor)g(constant)g(must)f(be)g(a)g(polymorphic)i(instance)f(of)
f(the)2042 934 y(ne)n(w)k(type)g(constructor)g(being)g(de\002ned.)g
(Notice)g(ho)n(w)g(the)f(constructors)2042 1017 y(for)17
b Fl(Tree)h Fu(all)f(ha)o(v)o(e)g(range)h(\()p Fl(Tree)40
b Fr(a)p Fu(\))18 b(with)f(a)g(polymorphic)i(type)f(v)n(ariable)2042
1100 y Fr(a)p Fu(.)30 b(W)-6 b(e)30 b(can)h(remo)o(v)o(e)h(this)e
(restriction)g Fr(semantically)h Fu(by)h(strengthening)2042
1183 y(the)19 b(type)h(system)g(of)g(the)g(language.)g(The)g
(restriction)f(is)g Fr(syntactically)h Fu(re-)2042 1266
y(mo)o(v)o(ed)g(by)h(the)e(follo)n(wing)i(mechanism.)f(In)g(a)g
Fl(data)g Fu(declaration,)g(Rather)2042 1349 y(than)27
b(supplying)h(the)f(type)g(ar)o(guments)h(to)e(the)h(type)g(being)h
(de\002ned,)f(the)2042 1432 y(user)f(supplys)h(an)f(e)o(xplicit)g(kind)
g(declaration;)h(and)g(rather)e(than)i(lea)o(ving)2042
1515 y(the)17 b(range)g(of)g(the)f(constructor)i(functions)f(implicit,)
f(the)h(user)g(replaces)g(the)2042 1598 y(enumeration)j(of)f(the)g
(constructors)h(and)g(the)f(type)g(of)g(their)g(domains)g(with)2042
1681 y(a)e(full)g(e)o(xplicit)h(typing)g(of)g(each)g(constructor)l(.)g
(The)g(only)g(restriction)f(being)2042 1764 y(that)h(the)g(range)h
(must)f(be)h(some)f(instance)h(of)f(the)h(type)f(being)h(de\002ned.)g
(F)o(or)2042 1847 y(e)o(xample)25 b(we)g(could)g(de\002ne)g(the)f
Fl(Tree)i Fu(type)f(as)f(follo)n(ws)h(using)g(the)g(ne)n(w)2042
1930 y(syntax.)p Black Black 2042 2055 a Fl(data)40 b(Tree::)80
b(*0)39 b(~>)h(*0)g(where)2120 2138 y(Fork::)h(Tree)f(a)f(->)h(Tree)g
(a)g(->)f(Tree)i(a)2120 2221 y(Node::)g(a)e(->)h(Tree)g(a)2120
2304 y(Tip::)h(Tree)f(a)2042 2429 y Fu(It)29 b(is)g(not)g(necessary)i
(to)e(use)h(the)f(ne)n(w)h(syntax,)g(since)g Fl(Tree)g
Fu(meets)f(the)2042 2512 y(restriction.)17 b(As)g(we)g(will)f(see)i
(belo)n(w)-5 b(,)17 b(there)h(e)o(xist)f(man)o(y)h(useful)f(types)h
(that)2042 2595 y(do)k(not.)f(Remo)o(ving)i(the)f(restriction)f
(requires)h(ne)n(w)g(type)g(checking)h(rules)2042 2678
y(that)g(are)f(be)o(yond)j(the)e(scope)h(of)f(this)f(paper)m(,)i(b)o
(ut)e(which)i(ha)o(v)o(e)f(been)h(well)2042 2761 y(studied[)p
Fq(?)c(?)f(?)g Fu(].)2042 2840 y
SDict begin H.S end
 2042 2840 a 2042 2840
a
SDict begin 10 H.A end
 2042 2840 a 2042 2840 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.2) cvn /DEST pdfmark
end
 2042 2840 a 72 x Fq(2.2)75
b(Repr)o(esenting)18 b(Object-Pr)o(ograms)h(with)f(T)-6
b(ypes)19 b(as)g(Data)2042 3028 y Fu(This)31 b(simple)h(e)o(xtension)h
(allo)n(ws)f(us)g(to)g(b)o(uild)g(datatypes)h(representing)2042
3111 y(object-programs,)d(whose)f(meta-le)n(v)o(el)g(types)g(encode)h
(the)f(object-le)n(v)o(el)2042 3194 y(types)22 b(of)g(the)g(programs)h
(represented.)g(A)f(v)o(ery)g(simple)g(object-language)2042
3277 y(e)o(xample)d(with)g(types)g(is:)p Black Black
2042 3419 a Fl(data)40 b(Term)g(::)g(*0)f(~>)h(*0)g(where)2120
3502 y(Const)h(::)e(a)h(->)f(Term)i(a)2120 3585 y(Pair)f(::)g(Term)g(a)
g(->)f(Term)h(b)g(->)g(Term)g(\(a,b\))2120 3668 y(App)g(::)g(Term\(a)g
(->)g(b\))g(->)f(Term)i(a)e(->)h(Term)g(b)2141 3810 y
Fu(Abo)o(v)o(e)24 b(we)e(introduced)j(the)d(ne)n(w)h(type)h
(constructor)f Fl(Term)p Fu(,)g(which)g(is)2042 3893
y(a)17 b(representation)h(of)f(a)g(simple)g(object-language)i(of)f
(constants)g(and)f(pairs.)2042 3976 y Fl(Term)28 b Fu(is)e(a)h(type)h
(constructor)l(.)g(It)e(must)h(be)h(applied)g(to)f(another)h(type)f(to)
2042 4059 y(create)k(a)h(v)n(alid)g(ne)n(w)g(type)g(of)g(kind)g
Fl(*0)g Fu(\(star)o(-zero\).)e(W)-6 b(e)31 b(say)h Fl(Term)g
Fu(is)2042 4142 y(classi\002ed)25 b(by)h(the)g(kind)g
Fl(*0)40 b(~>)f(*0)p Fu(.)26 b(The)f(kind)i Fl(*0)e Fu(classi\002es)h
(all)f(types)2042 4225 y(that)k(classify)h(computable)h(v)n(alues.)f(F)
o(or)f(more)h(on)g(kinds,)g(see)g(Section)2042 4309 y
SDict begin H.S end

2042 4309 a Black -1 x Fu(2.3)p Black 2135 4257 a
SDict begin H.R end
 2135
4257 a 2135 4308 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (subsection.2.3) cvn H.B /ANN pdfmark end
 2135 4308 a Fu(.)18 b(No)h(restriction)g(is)f
(placed)i(on)f(the)g(types)h(of)f(the)g(constructors)g(e)o(xcept)2042
4391 y(that)i(the)h(range)g(of)f(each)h(constructor)g(must)g(be)g(a)f
(fully)g(applied)h(instance)2042 4474 y(of)g(the)f(type)i(being)f
(de\002ned,)h(and)f(that)g(the)g(type)g(of)g(the)g(constructor)g(as)g
(a)2042 4557 y(whole)i(must)h(be)f(classi\002ed)h(by)f
Fl(*0)p Fu(.)h(Note)f(ho)n(w)h(the)f(range)h(of)f Fl(Pair)h
Fu(is)f(a)2042 4640 y(non-tri)n(vial)19 b(instance)h(of)f
Fl(Term)p Fu(.)2141 4723 y(As)e(promised,)h Fl(Term)p
Fu(s)g(are)f(a)g(typed)g(object-language)i(representation,)2042
4806 y(i.e.)h(a)h(data)h(structure)f(that)g(represents)h(terms)f(in)h
(some)f(object-language.)2042 4889 y(The)k(meta-le)n(v)o(el)g(type)g
(of)g(the)g(representation)h(\()p Fl(Term)40 b(a)p Fu(\),)25
b(indicates)g(the)2042 4973 y(type)k(of)h(the)f(object-le)n(v)o(el)h
(term)f(\()p Fl(a)p Fu(\).)f(This)h(is)g(made)h(possible)g(only)g(by)
2042 5056 y(the)25 b(\003e)o(xibility)f(of)h(the)g(GADT)f(mechanism.)i
(Using)f(typed)h(object-le)n(v)o(el)2042 5139 y(terms,)e(it)h(is)g
(impossible)g(to)g(construct)h(ill-typed)f(term)g(representations,)2042
5222 y(because)20 b(the)f(meta-language)h(type)g(system)f(enforces)h
(this)e(constraint.)p Black Black 2042 5347 a Fl(ex1)40
b(::)f(Term)i(Int)2042 5430 y(ex1)f(=)f(App)h(\(App)g(\(Const)h
(\(+\)\))f(\(Const)h(3\)\))e(\(Const)i(5\))p Black Black
eop end
%%Page: 3 3
TeXDict begin 3 2 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -758 -608
a
SDict begin H.S end
 -758 -608 a -758 -608 a
SDict begin H.R end
 -758 -608 a -758 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -758
-608 a Black Black -150 149 a Fl(ex2)40 b(::)g(Term)g(\(Int,String\))
-150 232 y(ex2)g(=)f(Pair)i(ex1)e(\(Const)i("z"\))-150
374 y Fu(Attempting)15 b(to)f(construct)i(an)f(ill-typed)f(object)h
(term,)f(lik)o(e)h Fl(\(App)40 b(\(Const)-150 457 y(3\))g(\(Const)g
(5\)\))p Fu(,)19 b(causes)h(a)f(meta-le)n(v)o(el)g(\()p
Fs(\012)p Fu(me)o(ga\))g(type)h(error)l(.)-50 540 y(Another)g(adv)n
(antage)i(of)e(using)h(GADTs)e(rather)h(than)g(ADTs)g(is)f(that)h(it)
-150 623 y(is)c(no)n(w)h(possible)h(to)e(construct)h(a)g(tagless[)p
Fq(?)g(?)f(?)h Fu(])f(interpreter)h(directly)-5 b(.)16
b(An)-150 706 y(interpreter)22 b(is)f(a)h(function)h(that)e(tak)o(es)i
(a)f(term)f(to)h(the)g(v)n(alue)h(which)f(is)f(the)-150
789 y(meaning)g(of)f(that)g(term.)g(In)g(a)g(language)h(without)g
(GADTs)e(terms)h(are)g(un-)-150 872 y(typed,)f(and)f(v)n(alues)h(are)f
(some)h(uni)n(v)o(ersal)g(v)n(alue)g(domain)g(lik)o(e:)f
Fl(data)40 b(V)f(=)-150 955 y(IntV)h(Int)g(|)g(PairV)g(V)f(V)h(|)f
(FunV)h(\(V)g(->)g(V\))p Fu(,)25 b(and)i(the)e(interpeter)-150
1038 y(is)e(said)h(to)g(be)g(tagged,)h(since)f(each)h(v)n(alue)f(must)g
(be)g(tagged)h(with)f(one)g(of)-150 1121 y(the)d(constructors)i(of)e
(the)g(uni)n(v)o(ersal)h(domain)h(\(such)e(as)h Fl(IntV)p
Fu(,)f Fl(PairV)p Fu(,)h(or)-150 1204 y Fl(FunV)p Fu(\).)27
b(See)f([)p Fq(?)g Fu(])g(for)g(a)h(detailed)f(discussion)i(of)e(this)g
(phenomena.)j(But)-150 1287 y(using)20 b(GADTs)e(none)i(of)f(this)f(is)
h(necessary)-5 b(.)20 b(Consider:)p Black Black -150
1461 a Fl(eval)40 b(::)g(Term)g(a)f(->)h(a)-150 1544
y(eval)g(\(Const)h(x\))e(=)h(x)-150 1627 y(eval)g(\(App)g(f)g(x\))f(=)h
(eval)g(f)f(\(eval)i(x\))-150 1710 y(eval)f(\(Pair)h(x)e(y\))h(=)f
(\(eval)h(x,eval)h(y\))-150 1885 y Fu(Here)25 b(the)g(uni)n(v)o(ersal)h
(domain)g(is)f(not)g(necessary)-5 b(,)26 b(and)g(the)f(tagless)g(inter)
o(-)-150 1968 y(preter)j(has)g(the)g(structure)g(of)f(a)h(denotational)
h(semantics.)f(Because)g(the)-150 2051 y Fl(eval)22 b
Fu(function)h(is)e(total)g(and)h(well-typed)g(at)f(the)h(meta-le)n(v)o
(el,)f(it)g(also)h(im-)-150 2134 y(plies)c(that)g(the)g(object-le)n(v)o
(el)h(semantics)f(\(de\002ned)h(by)f Fl(eval)p Fu(\))h(is)f(also)g
(well-)-150 2217 y(typed.)k(As)e(long)i(as)f Fl(eval)h
Fu(is)f(total,)f Fr(e)o(very)i Fu(well-typed)f(object)g(le)n(v)o(el)h
(term)-150 2300 y(e)n(v)n(aluates)e(to)f(a)g(well-formed)g(v)n(alue.)
-50 2383 y(While)f(we)i(w)o(ork)o(ed)g(hard)g(to)f(mak)o(e)h(this)g
(look)f(lik)o(e)h(Hask)o(ell)f(program-)-150 2466 y(ming,)j(there)g
(are)f(some)h(k)o(e)o(y)h(dif)n(ferences.)f(First,)e(the)i(prototype)h
(declara-)-150 2549 y(tion)c(\()p Fl(eval)40 b(::)f(Term)h(a)g(->)g(a)p
Fu(\))18 b(is)g(required,)h(not)g(optional.)g(Functions)-150
2632 y(which)27 b(pattern)g(match)g(o)o(v)o(er)g(GADTs)f(can)h(be)g
(type)g(check)o(ed,)h(b)o(ut)f(type)-150 2715 y(inference)32
b(is)g(much)g(harder)g(\(see)g([)p Fq(?)g Fu(])f(for)g(w)o(ork)h(on)h
(ho)n(w)f(this)f(might)-150 2798 y(be)k(done\).)g(Functions)g(that)g
(don')o(t)f(pattern)h(match)g(o)o(v)o(er)g(GADTs)f(can)-150
2881 y(ha)o(v)o(e)21 b(Hindle)o(y-Milner)g(types)h(inferred)f(for)f
(them)h(\(see)g([)p Fq(?)g Fu(])g(for)f(ho)n(w)i(this)-150
2964 y(mixture)29 b(of)f(type-checking)j(and)e(type-inference)h(is)e
(done\).)h(Requiring)-150 3047 y(prototypes)e(for)f(only)g(some)g
(functions)h(should)g(be)f(f)o(amiliar)f(to)h(Hask)o(ell)-150
3130 y(programmers)21 b(because)h(polymorphic-recursi)n(v)o(e)g
(functions)f(already)g(re-)-150 3213 y(quire)e(prototypes[)p
Fq(?)i Fu(].)-150 3329 y
SDict begin H.S end
 -150 3329 a -150 3329 a
SDict begin 10 H.A end
 -150
3329 a -150 3329 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.3) cvn /DEST pdfmark
end
 -150 3329 a 67 x Fq(2.3)75 b(V)-7
b(alues,)18 b(T)-6 b(ypes,)19 b(Kinds,)f(and)g(Sorts)-150
3512 y Fu(In)e(Hask)o(ell,)g(v)n(alues)h(are)g(classi\002ed)f(by)h
(types.)f(In)g(a)g(similar)g(f)o(ashion,)h(types)-150
3595 y(can)j(be)g(classi\002ed)f(by)h(kinds,)g(and)g(kinds)g(can)g(be)g
(classi\002ed)f(by)h(sorts.)f(W)-6 b(e)-150 3678 y(indicate)25
b(clasi\002cation)f(as)g(a)g(relation)g(using)h(the)g(in\002x)f
(symbol\()p Fl(::)p Fu(\).)h(W)-6 b(e)-150 3761 y(say)19
b(\()p Fl(::)p Fu(\))f(is)f(o)o(v)o(erloaded)j(because)f(the)g(same)f
(notation)h(can)f(be)h(used)g(in)f(all)-150 3844 y(three)h(conte)o
(xts:)g Fr(value)p Fl(::)p Fr(type)p Fu(,)i(and)e Fr(type)p
Fl(::)p Fr(kind)p Fu(,)h(and)g Fr(kind)p Fl(::)p Fr(sort)p
Fu(.)-50 3927 y(Some)31 b(concrete)g(e)o(xamples)h(at)f(the)g(v)n(alue)
h(le)n(v)o(el)f(include:)g Fl(5::Int)p Fu(,)-150 4010
y(and)23 b Fl([True]::[Bool])p Fu(.)j(W)-6 b(e)22 b(say)h
Fl(5)f Fu(is)h(classi\002ed)f(by)h Fl(Int)p Fu(.)g(At)f(the)h(type)-150
4093 y(le)n(v)o(el:)35 b Fl(Int::*0)41 b Fu(,)35 b Fl(Term::)41
b(*0)e(~>)h(*0)p Fu(.)35 b(W)-6 b(e)35 b(say)h Fl(Int)g
Fu(is)f(classi\002ed)-150 4176 y(by)29 b(star)o(-zero,)e(and)i
Fl(Tree)f Fu(is)g(classi\002ed)g(by)g(star)o(-zero)g(to)g(star)o
(-zero.)f Fl(*0)p Fu(,)-150 4259 y(and)33 b Fl(*0)40
b(~>)f(*0)33 b Fu(are)f(kinds.)h(At)f(the)h(kind)g(le)n(v)o(el)f(both:)
h Fl(*0::)40 b(*1)33 b Fu(and)-150 4342 y Fl(\(*O)40
b(~>)g(*0\)::)g(*1)p Fu(.)19 b(Here,)f Fl(*1)h Fu(is)g(a)g(sort.)-50
4425 y(The)31 b(kind)g Fl(*0)g Fu(is)g(interesting)g(because)i(it)d
(classi\002es)g(all)h(types)g(that)-150 4508 y(classify)j(v)n(alues)g
(\(things)g(we)f(actually)h(can)g(compute\).)g(F)o(or)f(e)o(xample,)
-150 4591 y Fl(Int::)40 b(*0)p Fu(,)28 b(and)h Fl([Int]::)41
b(*0)p Fu(,)28 b(b)o(ut)f(not)h Fl(Tree::)41 b(*0)p Fu(,)28
b(because)h(there)-150 4674 y(are)16 b(no)h(v)n(alues)g(of)g(type)f
Fl(Tree)h Fu(\(b)o(ut)f(there)h(are)f(v)n(alues)h(of)f(type)h
Fl(Tree)40 b(Int)p Fu(\).)-50 4757 y Fr(Ne)o(w)24 b(kinds)i
Fu(are)f(introduced)i(by)f(the)f Fr(kind)h Fu(declaration)g(that)f
(also)h(in-)-150 4840 y(troduces)21 b(the)f(type)h(constructors)g(that)
f(produce)h(types)g(classi\002ed)f(by)g(that)-150 4923
y(kind,)e(just)f(as)h Fr(ne)o(w)f(types)h Fu(are)g(introduced)g(by)g
(the)g Fr(data)g Fu(declaration)h(along)-150 5006 y(with)26
b(the)h(v)n(alue)g(constructors)g(that)g(produce)h(v)n(alues)f
(classi\002ed)f(by)h(that)-150 5089 y(type.)19 b(The)f
Fl(data)i Fu(and)f Fl(kind)g Fu(declarations)h(introduce)f(similar)f
(structures,)-150 5172 y(b)o(ut)27 b(at)f(dif)n(ferent)h(le)n(v)o(els)g
(in)g(the)f(type)i(hierarchy)-5 b(.)27 b(T)-6 b(w)o(o)27
b(interesting)g(kind)-150 5255 y(declarations,)19 b(of)g(interest)g(in)
g(this)f(paper)i(follo)n(w:)p Black Black -150 5430 a
Fl(kind)40 b(Nat)g(=)g(Z)f(|)g(S)h(Nat)p Black Black
Black Black Black 2042 12 2068 4 v 2040 78 4 67 v 2092
58 a Fk(v)o(alue)10 b(name)h(space)107 b Fo(j)222 b Fk(type)10
b(name)h(space)p 4108 78 V 2042 81 2068 4 v 2040 148
4 67 v 2175 128 a Fp(v)o(alue)189 b Fo(j)309 b Fp(type)h
Fo(j)185 b Fp(kind)h Fo(j)168 b Fp(sort)p 4108 148 V
2042 151 2068 4 v 2040 218 4 67 v 2223 198 a(5)231 b(::)321
b(Int)g(::)203 b(*0)f(::)177 b(*1)p 4108 218 V 2042 221
2068 4 v 2040 287 4 67 v 2204 267 a([2])212 b(::)302
b([Int])g(::)203 b(*0)f(::)177 b(*1)p 4108 287 V 2042
291 2068 4 v 2040 357 4 67 v 2849 337 a([])334 b(::)126
b(*0)15 b Fj( )f Fp(*0)126 b(::)177 b(*1)p 4108 357 V
2042 360 2068 4 v 2040 427 4 67 v 3443 407 a(Nat)189
b(::)177 b(*1)p 4108 427 V 2042 430 2068 4 v 2040 496
4 67 v 2851 477 a(Z)334 b(::)190 b(Nat)f(::)177 b(*1)p
4108 496 V 2042 500 2068 4 v 2040 566 4 67 v 2852 546
a(S)337 b(::)100 b(Nat)15 b Fj( )f Fp(Nat)100 b(::)177
b(*1)p 4108 566 V 2042 570 2068 4 v 2040 636 4 67 v 2817
616 a(Nat')301 b(::)113 b(Nat)15 b Fj( )f Fp(*0)113 b(::)177
b(*1)p 4108 636 V 2042 639 2068 4 v 2040 706 4 67 v 2220
686 a(Z)227 b(::)277 b(Nat')14 b(Z)276 b(::)195 b(*)15
b(0)195 b(::)177 b(*1)p 4108 706 V 2042 709 2068 4 v
2040 775 4 67 v 2221 755 a(S)230 b(::)100 b(Nat')15 b(m)f
Fo(!)h Fp(Nat')g(\(S)g(m\))100 b(::)203 b(*0)f(::)177
b(*1)p 4108 775 V 2042 779 2068 4 v 2040 845 4 67 v 2807
825 a(T)l(erm)292 b(::)119 b(*0)14 b Fj( )h Fp(*)g(0)118
b(::)177 b(*1)p 4108 845 V 2042 848 2068 4 v 2040 915
4 67 v 2170 895 a(Const)g(::)212 b(a)14 b Fo(!)h Fp(T)l(erm)f(a)211
b(::)203 b(*0)f(::)177 b(*1)p 4108 915 V 2042 918 2068
4 v 2040 985 4 67 v 3431 965 a(Ro)o(w)f(::)100 b(*1)15
b Fj( )f Fp(*1)p 4108 985 V 2042 988 2068 4 v 2040 1054
4 67 v 2812 1034 a(RNil)296 b(::)156 b(Ro)o(w)14 b(k)155
b(::)177 b(*1)p 4108 1054 V 2042 1058 2068 4 v 2042 1094
1993 3 v 2042 1178 a Fq(Figur)o(e)26 b(1.)2372 1178 y
SDict begin H.S end

2372 1178 a 2372 1178 a
SDict begin H.R end
 2372 1178 a 2372 1178 a
SDict begin [/View [/XYZ H.V]/Dest (figure.1) cvn /DEST pdfmark end
 2372
1178 a Fu(V)-8 b(alues,)27 b(types,)g(kinds,)g(and)g(sorts,)g(are)f
(the)h(\002rst)f(fe)n(w)h(le)n(v)o(els)2042 1261 y(of)21
b(the)g(in\002nite)g(classi\002cation)g(hierarchy)-5
b(.)22 b(As)f(is)f(done)j(in)e(Hask)o(ell,)g(there)2042
1344 y(are)c(tw)o(o)h(name)h(spaces.)f(One)g(name)g(space,)g(names)g(v)
n(alues,)h(and)f(the)g(other)2042 1427 y(name)27 b(space,)h(names)f
(types,)g(kinds,)h(sorts)f(etc.)f(T)-6 b(w)o(o)27 b(objects)g(can)h(ha)
o(v)o(e)2042 1510 y(the)23 b(same)g(name)h(if)f(the)o(y)g(li)n(v)o(e)g
(in)g(dif)n(ferent)g(name)h(spaces.)f(This)g(form)g(of)2042
1593 y(o)o(v)o(erloading)31 b(is)e(often)h(e)o(xploited)h(in)e
Fs(\012)p Fu(me)o(ga)i(\(as)e(well)h(as)f(in)h(Hask)o(ell\))2042
1676 y(programs.)e(Note)g(that)g Fl(Z)g Fu(and)h Fl(S)f
Fu(are)g(de\002ned)g(in)g(both)h(the)f(v)n(alue)g(name)2042
1759 y(space)19 b(and)h(the)f(type)g(name)h(space.)p
2042 1779 1993 4 v Black 2141 2013 a(The)h Fl(Nat)g Fu(declaration)g
(introduces)h(the)f(kind)g Fl(Nat)g Fu(and)g(tw)o(o)g(ne)n(w)g(type)
2042 2096 y(constructors)g Fl(Z)f Fu(and)g Fl(S)g Fu(which)g(encode)i
(the)e(natural)g(numbers)h(at)f(the)g(type)2042 2179
y(le)n(v)o(el.)i(The)h(type)h Fl(Z)e Fu(has)i(kind)f
Fl(Nat)p Fu(,)g(and)h Fl(S)f Fu(has)g(kind)h Fl(Nat)39
b(~>)h(Nat)p Fu(.)23 b(The)2042 2262 y(type)34 b Fl(S)f
Fu(is)g(a)h(type)g(constructor)m(,)g(so)f(it)g(has)h(a)g(higher)o
(-order)g(kind.)g(W)-6 b(e)2042 2345 y(indicate)19 b(this)g(using)g
(the)g(classi\002es)g(relation)g(as)g(follo)n(ws:)p Black
Black 2042 2474 a Fl(Z)39 b(::)h(Nat)2042 2557 y(S)f(::)h(Nat)g(~>)g
(Nat)2042 2640 y(Nat)g(::)f(*1)2141 2770 y Fu(The)24
b(classi\002cation)f Fl(Nat::*1)i Fu(indicates)f(that)g
Fl(Nat)g Fu(is)f(a)g(kind)h(classi-)2042 2853 y(\002ed)d(by)h(the)f
(sort)g Fl(*1)p Fu(.)h(Both)f Fl(Nat)h Fu(and)g Fl(*0)f
Fu(are)h(kinds)g(at)f(the)g(same)h(\223le)n(v)o(el\224)2042
2936 y(\227)c(the)o(y)h(are)g(both)h(classi\002ed)f(by)g
Fl(*1)p Fu(.)p Black Black 2042 3086 a Fl(kind)40 b(Row)g(\(x)g(::)f
(*1\))h(=)g(RNil)g(|)f(RCons)i(x)e(\(Row)h(x\))2042 3236
y(Row)p Fu(s)19 b(are)h(list)e(lik)o(e)h(structures)h(at)e(the)i(type)f
(le)n(v)o(el,)g(which)h(are)f(constructed)2042 3319 y(by)30
b(the)f(type)h(constructors)h Fl(RNil)f Fu(and)g Fl(RCons)p
Fu(.)g(F)o(or)f(e)o(xample)h Fl(\(RCons)2042 3402 y(Int)40
b(\(RCons)g(Bool)g(RNil\)\))e Fu(and)g Fl(\(RCons)j(Z)e(RNil\))p
Fu(.)e(Such)h(types)2042 3485 y(are)29 b(kinded)i(by)f
Fl(Row)p Fu(.)f(The)h(kind)g Fl(Row)f Fu(is)g(a)h(higher)g(order)g
(kind,)f(and)h(is)2042 3568 y(classi\002ed)22 b(by)h
Fl(\(*1)40 b(~>)f(*1\))p Fu(.)23 b(Thus)g Fl(Row)f Fu(must)h(be)f
(applied)i(to)e(a)g(kind)h(to)2042 3651 y(be)18 b(well)g(formed)g
(\(the)h(ar)o(gument)f(indicates)h(the)f(kind)h(of)f(the)g(types)h
(stored)2042 3734 y(in)f(the)h(ro)n(w\).)g(F)o(or)f(e)o(xample)h(if)f
(we)h(classify)g(the)f(e)o(xamples)i(abo)o(v)o(e)g(we)e(get:)p
Black Black 2042 3863 a Fl(\(RCons)40 b(Int)g(\(RCons)h(Bool)f
(RNil\)\)::)h(Row)f(*0)2042 3946 y(\(RCons)g(Z)g(RNil\)::)h(Row)f(Nat)
2042 4076 y Fu(Both)19 b Fl(*1)g Fu(and)g Fl(\(*1)40
b(~>)g(*1\))19 b Fu(are)g(kinds)h(classi\002ed)f(by)g(the)g(sort)g
Fl(*2)p Fu(.)2141 4159 y(W)-6 b(e)21 b(illustrate)g(the)g(relationship)
h(between)g(v)n(alues,)f(types,)h(kinds,)f(and)2042 4242
y(sorts)15 b(by)h(e)o(xample)g(in)f(a)g(table)h(found)g(in)f(Figure)
3309 4242 y
SDict begin H.S end
 3309 4242 a Black Fu(1)p Black 3347 4191
a
SDict begin H.R end
 3347 4191 a 3347 4242 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.1) cvn H.B /ANN pdfmark end
 3347 4242 a Fu(.)g(Note)g(that)g(the)g(table)
h(has)2042 4325 y(empty)h(slots.)f(Not)h(all)f(types)h(classify)g(v)n
(alues.)g(F)o(or)f(e)o(xample,)h(there)g(are)g(no)2042
4408 y(v)n(alues)27 b(of)g(type)g Fl([])g Fu(\(list\))e(or)i
Fl(Z)p Fu(,)f(b)o(ut)h(there)g(are)f(v)n(alues)i(of)e(type)h
Fl([Int])p Fu(.)2042 4491 y(The)22 b(same)h(holds)g(at)f(the)g(kind)h
(le)n(v)o(el.)g(Not)f(all)g(kinds)h(classify)f(types.)h(F)o(or)2042
4574 y(e)o(xample,)i(there)g(are)g(no)h(types)f(classi\002ed)g(by)h
Fl(Row)p Fu(,)f(b)o(ut)f Fl(RNil)i Fu(could)g(be)2042
4657 y(classi\002ed)i(by)g Fl(\(Row)40 b(Int\))p Fu(.)28
b(Note)g(the)g(dif)n(ferent)g(kinds)h(of)f(arro)n(ws)g(\()p
Fi(!)2042 4740 y Fu(and)16 b Fh( )p Fu(\).)f(The)g(\002rst)g(is)g(used)
i(to)e(classify)h(functions)g(at)g(the)f(v)n(alue)i(le)n(v)o(el.)e(The)
2042 4823 y(second)25 b(is)f(used)h(to)f(classify)g(type)h
(constructors.)f(In)g Fs(\012)p Fu(me)o(ga)49 b(programs)2042
4906 y(we)19 b(write)f Fl(->)h Fu(for)g Fi(!)p Fu(,)f(and)h
Fl(~>)h Fu(for)e Fh( )p Fu(.)2042 4992 y
SDict begin H.S end
 2042 4992 a
2042 4992 a
SDict begin 10 H.A end
 2042 4992 a 2042 4992 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.4) cvn /DEST pdfmark
end
 2042 4992 a 72 x
Fq(2.4)75 b(Singleton)18 b(T)-6 b(ypes)2042 5181 y Fu(It)18
b(is)h(sometimes)g(useful)h(to)f(b)o(uild)g(representations)h(of)f
(types)g(at)g(the)g(v)n(alue)2042 5264 y(le)n(v)o(el.)30
b(Such)g(representations)h(are)f(called)g Fr(singleton)h(types)f
Fu(if)g(the)o(y)g(are)2042 5347 y(encoded)25 b(by)g(a)f(type)g
(constructor)h(whose)g(ar)o(gument)f(indicates)h(the)f(type)2042
5430 y(being)19 b(represented.)h(F)o(or)f(e)o(xample)g(consider:)p
Black Black eop end
%%Page: 4 4
TeXDict begin 4 3 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -758 -608
a
SDict begin H.S end
 -758 -608 a -758 -608 a
SDict begin H.R end
 -758 -608 a -758 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -758
-608 a Black Black Black Black -150 66 a Fl(data)40 b(Nat'::)h(Nat)f
(~>)f(*0)h(where)-32 149 y(Z::)g(Nat')g(Z)-32 232 y(S::)79
b(\(Nat')40 b(x\))g(->)g(Nat')g(\(S)f(x\))-150 355 y
Fu(V)-8 b(alues)20 b(classi\002ed)g(by)g(the)g(type)h
Fl(\(Nat')40 b(a\))20 b Fu(are)g(re\003ections)g(of)g(the)g
Fr(types)-150 439 y Fu(classi\002ed)f(by)g(the)f Fr(kind)i
Fl(Nat)p Fu(.)e(The)h(v)n(alue)g(constructors)h(of)f(the)g
Fl(data)g Fu(dec-)-150 522 y(laration)26 b(for)f Fl(Nat')i
Fu(mirror)e(the)h(type)g(constructors)h(in)f(the)g Fl(kind)g
Fu(decla-)-150 605 y(ration)e(of)g Fl(Nat)p Fu(,)h(and)g(the)f(type)g
(inde)o(x)h(of)f Fl(Nat')h Fu(is)f(equal)h(to)f(the)g(type)h(re-)-150
688 y(\003ected.)17 b(F)o(or)g(e)o(xample,)i(the)e(v)n(alue)i
Fl(S\(S\(S)40 b(Z\)\))18 b Fu(is)f(classi\002ed)h(by)g(the)g(type)-150
771 y Fl(Nat'\(S\(S\(S)42 b(Z\)\)\))p Fu(.)22 b(W)-6
b(e)23 b(say)f(that)h Fl(Nat')g Fu(is)f(a)h Fr(singleton)g(type)g
Fu(because)-150 854 y(there)d(is)g(only)h(one)g(element)f(of)g(an)o(y)h
(singleton)g(type.)f(F)o(or)g(e)o(xample,)h(only)-150
937 y Fl(S)39 b(\(S)h(Z\))18 b Fu(inhabits)h(the)f(type)g
Fl(Nat')40 b(\(S)g(\(S)f(Z\)\))p Fu(.)18 b(As)g(discussed)h(in)f(Fig-)
-150 1020 y(ure)-32 1020 y
SDict begin H.S end
 -32 1020 a Black Fu(1)p Black
5 969 a
SDict begin H.R end
 5 969 a 5 1020 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.1) cvn H.B /ANN pdfmark end
 5 1020 a Fu(,)k(we)g(e)o(xploit)h(the)g
(separate)g(name)g(spaces)g(for)f(v)n(alue)i(and)f(types)g(by)-150
1103 y(using)e(the)f(same)g(names)h(for)f(the)g(type)g(constructors)h
(of)g(kind)f Fl(Nat)h Fu(\()p Fl(S)f Fu(and)-150 1186
y Fl(Z)p Fu(\))26 b(and)i(the)e(constructor)i(functions)f(of)g
Fl(data)g Fu(type)g Fl(Nat')g Fu(\()p Fl(S)g Fu(and)g
Fl(Z)p Fu(\))f(to)-150 1269 y(emphasize)20 b(the)f(close)g
(relationship)h(between)f Fl(Nat)h Fu(and)f Fl(Nat')p
Fu(.)-50 1352 y(W)-6 b(e)23 b(will)f(\002nd)h(natural)h(numbers)h(at)e
(the)g(type)h(le)n(v)o(el)g(\(and)f(their)h Fl(Nat')-150
1435 y Fu(re\003ections)15 b(at)f(the)h(v)n(alue)h(le)n(v)o(el\))f(to)g
(be)g(so)g(useful)g(we)g(introduce)h(some)f(syn-)-150
1518 y(tactic)f(sugar)i(for)e(constructing)i(such)g(types)f(\(or)g(v)n
(alues\).)g(F)o(or)g(e)o(xample,)g Fl(#0)-150 1601 y(=)39
b(Z)p Fu(,)17 b(and)g Fl(#1)40 b(=)f(\(S)h(Z\))p Fu(,)17
b(and)g Fl(#2)40 b(=)f(\(S)h(\(S)g(Z\)\))17 b Fu(etc.)f(W)-6
b(e)16 b(also)h(support)-150 1684 y(the)30 b(syntax)g
Fl(#\(n)40 b(+)g(x\))g(=)f(\(S)705 1692 y Fg(1)740 1684
y Fl(\(S)818 1692 y Fg(2)892 1684 y Fl(...)h(\(S)1127
1692 y Ff(n)1209 1684 y Fl(x\)\)\))p Fu(.)31 b(This)e(syntactic)-150
1767 y(sugar)20 b(is)g(analogous)i(to)e(the)g(use)g(of)g(square)h
(brack)o(ets)g(to)f(describe)h(lists)e(in)-150 1850 y(addition)h(to)e
(the)h(use)h(of)f(the)g(constructor)g Fl(\(:\))p Fu(.)-150
1916 y
SDict begin H.S end
 -150 1916 a -150 1916 a
SDict begin 10 H.A end
 -150 1916 a -150 1916
a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.5) cvn /DEST pdfmark
end
 -150 1916 a 77 x Fq(2.5)75 b(T)-7 b(ags)20 b(and)e(Labels)-150
2110 y Fu(Man)o(y)j(object)f(languages)h(ha)o(v)o(e)f(a)g(notion)h(of)e
(name.)i(T)-6 b(o)19 b(mak)o(e)i(represent-)-150 2193
y(ing)f(names)g(in)g(the)g(type)g(system)g(easy)h(we)e(introduce)i(the)
f(notion)g(of)g(T)-6 b(ags)-150 2276 y(and)24 b(Labels.)f(As)g(a)g
Fr(\002r)o(st)h(appr)m(oximation)p Fu(,)g(consider)h(the)e(\002nite)g
(kind)h Fl(Tag)-150 2359 y Fu(and)c(its)e(singleton)i(type)f
Fl(Label)p Fu(:)p Black Black -150 2495 a Fl(kind)40
b(Tag)g(=)g(A)f(|)g(B)h(|)f(C)-150 2661 y(data)h(Label::)h(Tag)f(~>)g
(*0)f(where)-72 2744 y(A::)h(Label)h(A)-72 2827 y(B::)f(Label)h(B)-72
2910 y(C::)f(Label)h(C)-50 3047 y Fu(Here,)16 b(we)g(again)h
(deliberately)g(use)f(the)h(v)n(alue/type)g(name)g(space)h(o)o(v)o(er)o
(-)-150 3130 y(loading)24 b(\002rst)f(discussed)h(in)f(Figure)845
3130 y
SDict begin H.S end
 845 3130 a Black Fu(1)p Black 883 3079 a
SDict begin H.R end
 883 3079
a 883 3130 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.1) cvn H.B /ANN pdfmark end
 883 3130 a Fu(.)f(The)i(names)g Fl(A)p Fu(,)f
Fl(B)p Fu(,)g(and)h Fl(C)f Fu(are)g(de-)-150 3213 y(\002ned)c(in)f
(both)h(the)g(v)n(alue)g(and)g(type)g(name)g(spaces.)g(The)o(y)f(name)h
(dif)n(ferent,)-150 3296 y(b)o(ut)c(related)g(objects)g(in)g(each)h
(space.)f(At)g(the)g(v)n(alue)g(le)n(v)o(el)g(e)n(v)o(ery)h
Fl(Label)g Fu(has)-150 3379 y(a)g(type)h(inde)o(x)g(that)f(re\003ects)g
(its)g(v)n(alue.)g(I.e.)g Fl(A::Label)41 b(A)p Fu(,)16
b(and)h Fl(B::Label)-150 3462 y(B)p Fu(,)k(and)i Fl(C::Label)41
b(C)p Fu(.)21 b(No)n(w)h(consider)g(a)g(countably)h(in\002nite)e(set)h
(of)f(tags)-150 3545 y(and)h(labels.)f(W)-6 b(e)21 b(can')o(t)g
(de\002ne)h(this)f(e)o(xplicitly)-5 b(,)21 b(b)o(ut)g(we)g(can)h(b)o
(uild)f(such)h(a)-150 3628 y(type)g(as)g(a)g(primiti)n(v)o(e)g(inside)g
(of)g Fs(\012)p Fu(me)o(ga.)g(At)f(the)h(type)h(le)n(v)o(el,)e(e)n(v)o
(ery)i(le)o(gal)-150 3711 y(identi\002er)18 b(whose)i(name)f(is)g
(preceded)h(by)f(a)g(back-tick)h(\()p Fl(`)p Fu(\))e(is)g(a)h(type)g
(clas-)-150 3794 y(si\002ed)h(by)h(the)g(kind)g Fl(Tag)p
Fu(.)f(F)o(or)g(e)o(xample,)h(the)f(type)h Fl(`abc)g
Fu(is)g(classi\002ed)f(by)-150 3877 y Fl(Tag)p Fu(.)j(At)g(the)h(v)n
(alue)g(le)n(v)o(el,)f(e)n(v)o(ery)h(such)g(symbol)g
Fl(`x)f Fu(is)g(classi\002ed)g(by)h(the)-150 3960 y(type)19
b Fl(\(Label)41 b(`x\))p Fu(.)-150 4037 y
SDict begin H.S end
 -150 4037 a
-150 4037 a
SDict begin 10 H.A end
 -150 4037 a -150 4037 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.6) cvn /DEST pdfmark
end
 -150 4037 a 67 x
Fq(2.6)75 b(Ro)o(ws,)19 b(Records,)g(and)f(HasT)-6 b(ype.)-150
4220 y Fu(The)28 b(kind)h Fl(Row)f Fu(classi\002es)g(list-lik)o(e)f
(data)i(structures)f(at)g(the)g(type)h(le)n(v)o(el.)-150
4303 y(The)19 b(kind)g Fl(HasType)i Fu(classi\002es)d(pairs)h(at)g(the)
g(type)g(le)n(v)o(el.)p Black Black -150 4426 a Fl(kind)40
b(HasType)h(=)e(Has)h(Tag)g(*0)-150 4549 y Fu(It)c(aggre)o(gates)h(a)f
Fl(Tag)h Fu(and)g(an)o(y)f(type)h(classi\002ed)f(by)h
Fl(*0)p Fu(.)f(F)o(or)g(e)o(xam-)-150 4632 y(ple,)18
b Fl(\(Has)40 b(`a)g(Int\)::HasType)p Fu(.)21 b(W)-6
b(e)18 b(can)h(construct)g(lists)e(\(at)h(the)h(type)-150
4715 y(le)n(v)o(el\))c(of)g(such)g(pairs)g(using)h(the)f(type)g
(constructors)h(of)f Fl(Row)p Fu(.)g(F)o(or)g(e)o(xample,)p
Black Black -150 4838 a Fl(\(RCons)41 b(\(Has)f(`a)f(Int\))i(\(RCons)f
(\(Has)g(`b)g(Bool\))g(RNil\)\))-72 4921 y(::Row)h(HasType)-150
5044 y Fu(Note,)14 b Fl(\(RCons)41 b(\(Has)f(`a)g(Int\))g(\(RCons)g
(\(Has)g(`b)g(Bool\))g(RNil\)\))-150 5127 y Fu(is)24
b(a)g(type,)g(and)h(that)f Fl(\(Row)41 b(HasType\))25
b Fu(is)f(a)g(kind.)h(Such)f(a)h(type)f(can)h(be)-150
5210 y(thought)f(of)e(as)h(classifying)g(records)g(at)g(the)f(v)n(alue)
h(le)n(v)o(el.)g(W)-6 b(e)22 b(can)h(de\002ne)-150 5293
y(such)d(records)f(within)g Fs(\012)p Fu(me)o(ga)38 b(as)19
b(follo)n(ws:)p Black Black -150 5430 a Fl(data)40 b(Rec::)h(Row)e
(HasType)i(~>)f(*0)g(where)p Black Black 2120 66 a(RecNil)h(::)f(Rec)f
(RNil)2120 149 y(RecCons::)j(Label)e(s)f(->)h(t)f(->)2513
232 y(Rec)g(r)h(->)2513 315 y(Rec)f(\(RCons)i(\(Has)f(s)g(t\))f(r\))
2141 455 y Fu(W)-6 b(e)32 b(can)h(construct)g(records)f(by)h(using)g
(the)f(constructor)h(functions)2042 538 y Fl(RecNil)27
b Fu(and)g Fl(RecCons)p Fu(.)h(Such)e(v)n(alues)h(ha)o(v)o(e)g(types)g
Fl(\(Rec)40 b Fr(r)p Fl(\))26 b Fu(where)h Fl(r)2042
621 y Fu(is)18 b(classi\002ed)h(by)g Fl(\(Row)41 b(HasType\))p
Fu(.)20 b(F)o(or)e(e)o(xample,)i(consider)p Black Black
2042 761 a Fl(r1)39 b(::)h(Rec\(RCons)h(\(Has)g(`x)e(Int\))2669
844 y(\(RCons)i(\(Has)f(`a)g(Bool\))g(RNil\)\))2042 927
y(r1)f(=)h(RecCons)h(`x)e(5)h(\(RecCons)h(`a)f(True)g(RecNil\))2042
1094 y(r2::)g(Rec)g(u)f(->)h(Rec\(RCons)h(\(Has)f(`x)g(Int\))2983
1177 y(\(RCons)h(\(Has)f(`a)g(Bool\))g(u\)\))2042 1260
y(r2)f(x)h(=)f(RecCons)i(`x)f(5)f(\(RecCons)i(`a)f(True)g(x\))2141
1400 y Fu(It)20 b(is)g(interesting)h(to)f(note)g(that)h(we)f(ha)o(v)o
(e)g(managed)i(to)e(e)o(xpress)h(a)f(sim-)2042 1483 y(ple)c(form)g(of)g
(W)-6 b(and')l(s)16 b(\(or)g(Remy')l(s\))g(ro)n(w-polymorphism[)p
Fq(?)i(?)e Fu(])g(in)f Fs(\012)p Fu(me)o(ga)2042 1566
y(just)28 b(by)g(using)h(kinds.)g(W)-6 b(e)28 b(ha)o(v)o(e)g(found)h
Fl(Row)g Fu(and)g Fl(HasType)g Fu(so)g(useful)2042 1649
y(we)22 b(ha)o(v)o(e)g(b)o(uilt)f(special)h(syntactic)g(sugar)g(for)g
(printing)h(them.)e(F)o(or)h(e)o(xam-)2042 1732 y(ple,)57
b Fl(Rec\(RCons)41 b(\(Has)f(`x)g(Int\))g(\(RCons)g(\(Has)h(`a)e
(Bool\))i(RNil\)\))2042 1815 y Fu(prints)26 b(as)53 b
Fl(Rec)39 b({`x:Int,`a:Bool})p Fu(.)30 b(The)c(syntactic)h(sugar)f(for)
h Fl(Row)2042 1898 y Fu(and)32 b Fl(HasType)g Fu(replaces)g
Fl(RCons)g Fu(and)g Fl(RNil)f Fu(with)g(squiggly)h(brack)o(ets,)2042
1981 y(and)24 b(replaces)f Fl(Has)h Fu(with)f(colon.)h(A)e(type)i
(classi\002ed)f(by)h Fl(Row)g Fu(whose)f(\(ul-)2042 2064
y(timate\))h(tail)f(is)h(not)h Fl(RNil)g Fu(\(i.e.)e(a)h(type)h(v)n
(ariable\))g(prints)f(with)g(a)g(trailing)2042 2147 y(semi-colon.)19
b(F)o(or)g(e)o(xample,)2042 2230 y Fl(Rec\(RCons)41 b(\(Has)f(`x)g
(Int\))g(\(RCons)h(\(Has)f(`a)f(Bool\))i(w\)\))i Fu(prints)2042
2313 y(as)37 b Fl(Rec)j({`x:Int,`a:Bool;)j(w})p Fu(.)2042
2388 y
SDict begin H.S end
 2042 2388 a 2042 2388 a
SDict begin 10 H.A end
 2042 2388 a 2042 2388
a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.7) cvn /DEST pdfmark
end
 2042 2388 a 73 x Fq(2.7)75 b(An)18 b(Object)h(Language)g(with)f
(Binding)o(.)2042 2577 y Fu(Ro)n(ws)g(and)g(records)g(allo)n(w)g(us)g
(to)g(de\002ne)g(object-languages)i(with)d(binding)2042
2660 y(structures)26 b(that)h(track)f(their)g(free)h(v)n(ariables)g(in)
f(their)g(meta-le)n(v)o(el)h(types.)2042 2743 y(The)34
b(object-language)i Fl(\(Lam)k(env)g(t\))35 b Fu(represents)g(the)f
(simply)g(typed)2042 2826 y(lambda)19 b(calculus.)p Black
Black 2042 2966 a Fl(data)40 b(Lam::)g(Row)g(HasType)h(~>)f(*0)f(~>)h
(*0)79 b(where)2120 3049 y(Var)236 b(::)40 b(Label)g(s)g(->)f(Lam)h
(\(RCons)h(\(Has)f(s)g(t\))f(env\))h(t)2120 3132 y(Shift)158
b(::)40 b(Lam)g(env)g(t)f(->)2591 3215 y(Lam)h(\(RCons)g(\(Has)h(s)e
(q\))h(env\))g(t)2120 3298 y(Abstract)h(::)f(Label)g(a)g(->)2591
3381 y(Lam)g(\(RCons)g(\(Has)h(a)e(s\))h(env\))g(t)f(->)2591
3464 y(Lam)h(env)g(\(s)f(->)h(t\))2120 3547 y(Apply)158
b(::)40 b(Lam)g(env)g(\(s)f(->)h(t\))g(->)2591 3630 y(Lam)g(env)g(s)f
(->)h(Lam)g(env)g(t)2141 3770 y Fu(The)33 b(\002rst)f(inde)o(x)i(to)e
Fl(Lam)p Fu(,)h Fl(env)h Fu(is)e(a)h(Ro)n(w)g(tracking)h(its)e(v)n
(ariables,)2042 3853 y(and)c(the)h(second)g(inde)o(x,)f
Fl(t)g Fu(tracks)g(the)h(object-le)n(v)o(el)f(type)h(of)f(the)g(term.)
2042 3936 y(F)o(or)38 b(e)o(xample,)h(a)f(term)g(with)g(v)n(ariables)h
Fl(x)g Fu(and)g Fl(y)f Fu(might)h(ha)o(v)o(e)g(type)2042
4019 y Fl(Lam)h({`x:Int,)h(`y:Bool;)g(u})e(Int)p Fu(.)21
b(This)f(is)g(made)g(possible)h(by)g(the)2042 4102 y(use)e(of)g
Fl(Row)g Fu(and)h Fl(HasType)g Fu(in)f(the)g(GADT)f(representing)i
(lambda)g(terms.)2141 4185 y(The)27 b(k)o(e)o(y)h(to)f(this)g(approach)
h(is)f(the)g(typing)h(of)f(the)g(object-language)2042
4268 y(constructor)g(functions)f(for)g(v)n(ariables)h(and)f(lambda)h(e)
o(xpressions.)g(Con-)2042 4351 y(sider)19 b(the)h Fl(Var)f
Fu(constructor)i(function.)f(T)-6 b(o)19 b(construct)h(a)f(v)n(ariable)
h(we)f(sim-)2042 4434 y(ply)d(apply)h Fl(Var)g Fu(to)f(a)g(label,)g
(and)g(its)g(type)g(re\003ects)g(this.)g(F)o(or)f(e)o(xample,)i(here)
2042 4517 y(is)g(the)g(output)h(from)f(a)g(short)h(interacti)n(v)o(e)f
(session)h(with)f(the)g Fs(\012)p Fu(me)o(ga)35 b(inter)o(-)2042
4600 y(preter)l(.)p Black Black 2042 4724 a Fl(prompt>)41
b(Var)f(`name)2042 4807 y(\(Var)g(`name\)::)2042 4890
y(forall)g(a)g(\(u:Row)g(HasType\))h(.)f(Lam)g({`name:a;)h(u})f(a)2042
5056 y(prompt>)h(Var)f(`age)2042 5139 y(\(Var)g(`age\)::)2042
5222 y(forall)g(a)g(\(u:Row)g(HasType\))h(.)f(Lam)g({`age:a;)h(u})f(a)
2141 5347 y Fu(V)-8 b(ariables)36 b(beha)o(v)o(e)g(lik)o(e)f(Bruijn)h
(indices.)f(V)-8 b(ariables)36 b(created)f(with)2042
5430 y Fl(Var)f Fu(are)g(lik)o(e)h(the)f(natural)g(number)h(0.)f(A)g(v)
n(ariable)h(can)f(be)h(lifted)e(to)p Black Black eop
end
%%Page: 5 5
TeXDict begin 5 4 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -758 -608
a
SDict begin H.S end
 -758 -608 a -758 -608 a
SDict begin H.R end
 -758 -608 a -758 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -758
-608 a Black Black -150 66 a Fu(the)39 b(ne)o(xt)f(natural)h(number)h
(by)f(the)f(successor)i(operator)f Fl(Shift)p Fu(.)g(T)-6
b(o)-150 149 y(understand)40 b(why)f(this)g(is)f(useful)h(consider)h
(that)f(the)g(tw)o(o)f(e)o(xamples)-150 232 y(ha)o(v)o(e)32
b(dif)n(ferent)g(names)g(in)f(the)h(same)g(inde)o(x)g(position.)g(The)g
(tw)o(o)f(v)n(ari-)-150 315 y(ables)36 b(w)o(ould)g(clash)g(if)f(the)o
(y)h(were)f(both)h(used)h(in)e(the)h(same)g(lambda)-150
399 y(term.)23 b(T)-6 b(o)23 b(shift)g(the)g(position)h(of)f(v)n
(ariable)h(to)f(a)h(dif)n(ferent)f(inde)o(x,)h(we)f(use)-150
482 y(the)c Fl(Shift::)41 b(Lam)f(u)f(a)h(->)g(Lam)f({v:b;)i(u})f(a)19
b Fu(constructor)l(.)g(Rather)-150 565 y(than)k(counting)h(with)e
(natural)h(numbers)g(\(as)g(is)f(done)h(with)f(de)h(Bruijn)g(in-)-150
648 y(dices\))17 b(we)g(\223count\224)h(with)e(ro)n(ws,)h(recording)h
(both)f(its)g(symbolic)g(name)h(and)-150 731 y(its)h(type.)g(Here)g(is)
g(ho)n(w)g(we)g(could)h(de\002ne)g(tw)o(o)f(v)n(ariables)h
Fl(x)f Fu(and)h Fl(y)f Fu(for)g(use)-150 814 y(in)g(the)g(same)g(en)m
(vironment.)p Black Black -150 974 a Fl(x)39 b(::)h(Lam)g({`x:a;)h(u})e
(a)-150 1057 y(x)g(=)h(Var)g(`x)-150 1223 y(y)f(::)h(Lam)g({u:a,`y:b;)i
(v})d(b)-150 1306 y(y)g(=)h(\(Shift)h(\(Var)f(`y\)\))-50
1467 y Fu(The)18 b(type)i(system)f(no)n(w)h(tracks)f(the)g(v)n
(ariables)g(in)g(an)g(e)o(xpressions.)p Black Black -150
1601 a Fl(z)39 b(::)h(Lam)g({`x:a)g(->)g(b,`y:a;)h(u})f(b)-150
1684 y(z)f(=)h(\(Apply)h(\(Var)f(`x\))g(\(Shift)g(\(Var)g(`y\)\)\))-50
1818 y Fu(Finally)-5 b(,)19 b(and)i(of)f(great)g(interest,)f(we)h(can)g
(b)o(uild)g(a)g(well-typed)g(e)n(v)n(alua-)-150 1901
y(tor)f(for)f(the)h(GADT)g Fl(Lam)p Fu(.)p Black Black
-150 2035 a Fl(evalLam)41 b(::)f(Lam)f(env)h(t)g(->)f(Rec)h(env)g(->)g
(t)-150 2118 y(evalLam)h(\(Var)f(_\))g(\(RecCons)h(_)e(y)h(_\))f(=)h(y)
-150 2201 y(evalLam)h(\(Shift)f(x\))g(\(RecCons)h(_)f(_)f(rs\))h(=)f
(evalLam)i(x)f(rs)-150 2284 y(evalLam)h(\(Abstract)g(l)f(_)f(body\))h
(rs)g(=)-32 2368 y(\\)f(x)h(->)f(evalLam)i(body)f(\(RecCons)h(l)f(x)f
(rs\))-150 2451 y(evalLam)i(\(Apply)f(f)g(x\))g(rs)f(=)-32
2534 y(\(evalLam)i(f)e(rs\))h(\(evalLam)h(x)f(rs\))-150
2668 y Fu(W)-6 b(e)25 b(declare)g(that)g(the)g(type)h(of)f(our)g(e)n(v)
n(aluation)i(function)f(is)e(as)h(follo)n(ws:)-150 2751
y(\()p Fl(Lam)40 b(env)g(t)f(->)h(Rec)g(env)g(->)f(t)p
Fu(\).)27 b(W)-6 b(e)26 b(can)i(interpret)f(this)g(to)g(mean)-150
2834 y(that)c(e)n(v)o(ery)h(well)e(typed)i Fl(Lam)g Fu(term)f(with)g
(type)g Fl(t)g Fu(under)h(an)g(en)m(vironment)-150 2917
y(with)c(shape)i Fl(env)p Fu(,)f(can)g(be)g(gi)n(v)o(en)g(meaning)h(as)
e(a)h(function)g(from)g(a)g(record)-150 3000 y(with)36
b(shape)i Fl(env)f Fu(to)f Fl(t)p Fu(.)g(The)h(function)g
Fl(evalLam)h Fu(is)f(a)f(denotational)-150 3083 y(semantics.)31
b(It)f(pro)o(vides)h(a)f(meaning)i(for)e(e)n(v)o(ery)i(well)e(formed)h
(lambda)-150 3166 y(term.)-50 3249 y(In)22 b(essence,)g(the)g
(well-typing)h(of)f(the)g(e)n(v)n(aluation)h(function)g(is)f(one)g(of)
-150 3332 y(three)i(parts)f(that)h(comprise)g(a)g(proof)g(of)g
(soundness)h(of)f(the)g(type)g(system)-150 3415 y(with)k(respect)i(to)e
(the)h(semantics.)g(The)g(other)g(tw)o(o)g(parts)g(are)g(proofs)g(of)
-150 3498 y(totality)18 b(and)i(compositionality)-5 b(.)p
Black -106 3652 a Fn(\017)p Black -42 3659 a Fq(T)e(otality)i(.)24
b Fu(T)-6 b(o)24 b(ensure)i(that)e(e)n(v)o(ery)i(term)e(is)g(mapped)i
(to)e(a)h(well-typed)-42 3742 y(v)n(alue,)f(we)g(must)g(ensure)h(that)f
Fl(evalLam)h Fu(is)f(total.)f(That)g(is,)h(it)f(termi-)-42
3825 y(nates)f(for)f(e)n(v)o(ery)i(well-typed)f(lambda)g(term.)f(Ev)o
(ery)h(well-typed)g Fl(Lam)-42 3908 y Fu(term)g(matches)h(one)g(of)g
(the)f(clauses)h(of)g Fl(evalLam)p Fu(,)g(and)g(e)n(v)o(ery)h(recur)o
(-)-42 3991 y(si)n(v)o(e)19 b(call)g(of)g Fl(evalLam)i
Fu(is)d(called)i(on)f(a)g(smaller)g(subterm)h(of)f(the)g(orig-)-42
4074 y(inal)25 b(ar)o(gument,)g(so)h(e)n(v)o(ery)g(call)f(will)f
(terminate)h(with)g(a)g(v)n(alue)h(if)e(the)-42 4157
y(input)c(term)f(is)g(\002nite)f(and)i(the)g(meta-language)h(\(in)e
(this)g(case)h Fs(\012)p Fu(me)o(ga\))-42 4240 y(is)29
b(strongly)h(normalizing.)g(Note)g(that)f(the)g(input)h(to)g
Fl(evalLam)g Fu(is)f(a)-42 4323 y(meta-language)h(term,)e(so)h(if)g
(the)f(meta-language)j(is)d(strongly)i(nor)o(-)-42 4406
y(malizing)25 b(no)h(in\002nite)f(inputs)g(are)g(possible.)h(The)f(k)o
(e)o(y)h(is)f(a)g(strongly)-42 4489 y(normalizing)20
b(meta-language.)p Black -106 4598 a Fn(\017)p Black
-42 4605 a Fq(Compositionality)-5 b(.)33 b Fu(The)h(meaning)g(of)g(e)n
(v)o(ery)h(term)e(is)h(composed)-42 4688 y(only)19 b(from)g(the)g
(meaning)h(of)f(its)g(subterms.)-50 4848 y(While)c(neither)h(of)g
(these)g(tw)o(o)g(are)g(currently)h(enforced)g(by)f Fs(\012)p
Fu(me)o(ga,)g(we)-150 4932 y(ha)o(v)o(e)j(plans)h(to)e(pro)o(vide)i
(such)g(support)g(in)e(the)h(future.)-50 5015 y(Other)c(kinds)h(of)f
(proofs)h(are)f(also)g(possible.)h(Proofs)f(in)g(style)g(of)g(Wright)
-150 5098 y(and)23 b(Felleisen[)p Fq(?)g Fu(])f(w)o(ork)h(on)g(a)g
(small)f(step)h(semantics)g(de\002ned)g(in)g(terms)-150
5181 y(of)c(substitution.)h Fs(\012)p Fu(me)o(ga)g(can)g(also)f(be)h
(used)g(to)f(de\002ne)g(languages)i(in)f(this)-150 5264
y(w)o(ay)-5 b(.)25 b(See)g(our)g(paper)h Fr(Meta-pr)m(o)o(gr)o(amming)g
(with)f(Built-in)f(T)-6 b(ype)25 b(Equal-)-150 5347 y(ity)p
Fu([)p Fq(?)d Fu(])f(which)h(w)o(as)g(presented)h(at)f(the)f(Logical)h
(Frame)n(w)o(orks)h(and)f(Meta-)-150 5430 y(Languages)e(W)-6
b(orkshop)20 b(to)f(see)g(ho)n(w)h(this)e(can)i(be)f(done.)p
Black Black 2042 0 a
SDict begin H.S end
 2042 0 a 2042 0 a
SDict begin 10 H.A end
 2042 0 a 2042
0 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.8) cvn /DEST pdfmark
end
 2042 0 a 66 x Fq(2.8)75 b(The)18 b(bottom)h(line.)2042
183 y Fu(The)k(ability)g(to)h(de\002ne)g(GADTs,)e(and)i(the)g(ability)f
(to)g(de\002ne)h(ne)n(w)g(kinds,)2042 266 y(creates)h(a)g(rich)f
(playground)j(for)e(those)h(wishing)f(to)g(e)o(xplore)g(the)g(design)
2042 349 y(of)k(ne)n(w)h(languages.)h(These)f(features,)f(along)i(with)
e(the)g(use)h(of)g(rank-N)2042 432 y(polymorphism)i(\(which)f(we)g
(will)f(illustrate)g(by)h(e)o(xample)h(later)e(in)h(the)2042
515 y(paper\))19 b(mak)o(e)h Fs(\012)p Fu(me)o(ga)38
b(a)19 b(better)g(meta-language)h(than)g(Hask)o(ell.)f(In)g(order)2042
598 y(to)c(e)o(xplore)i(the)e(design)i(of)e(a)h(ne)n(w)g(language)h
(one)f(can)g(proceed)h(as)e(follo)n(ws:)p Black 2085
739 a Fn(\017)p Black 2150 746 a Fu(First,)24 b(represent)j(the)f
(object-language)j(as)d(a)g(type)g(inde)o(x)o(ed)i(GADT)-6
b(.)2150 829 y(The)19 b(inde)o(x)o(es)g(correspond)i(to)e(static)f
(properties)i(of)f(the)g(program.)p Black 2085 939 a
Fn(\017)p Black 2150 946 a Fu(The)25 b(inde)o(x)o(es)h(can)f(ha)o(v)o
(e)h(arbitrary)f(structure,)g(because)i(the)o(y)e(are)g(in-)2150
1029 y(troduced)20 b(as)f(the)g(type)g(constructors)h(of)f(ne)n(w)g
(kinds.)p Black 2085 1138 a Fn(\017)p Black 2150 1145
a Fu(The)i(typed)i(constructor)f(functions)h(of)e(the)h
(object-language)i(GADT)2150 1228 y(de\002ne)19 b(a)g(static)f
(semantics)i(for)e(the)h(object)h(language.)p Black 2085
1337 a Fn(\017)p Black 2150 1344 a Fu(Meta)j(programs)h(written)e(in)g
Fs(\012)p Fu(me)o(ga,)h(manipulate)h(object-language)2150
1427 y(represented)19 b(as)g(data,)f(and)i(check)f(and)g(maintain)g
(the)g(properties)g(cap-)2150 1510 y(tured)i(in)g(the)h(type)f(inde)o
(x)o(es)h(by)g(using)g(the)f(meta-language)i(type)f(sys-)2150
1593 y(tem.)c(This)h(lets)f(us)h(b)o(uild)g(and)h(test)e(type)h
(systems)h(interacti)n(v)o(ely)-5 b(.)p Black 2085 1702
a Fn(\017)p Black 2150 1709 a Fu(A)27 b(dynamic)i(semantics)f(for)g
(the)f(language)i(can)g(be)f(de\002ned)g(by)g(\(1\))2150
1793 y(writing)h(either)g(a)g(denotational)i(semantics)e(in)h(the)f
(form)g(of)h(an)f(in-)2150 1876 y(terpreter)24 b(or)g(e)n(v)n(aluation)
h(function,)g(or)f(by)g(\(2\))g(writing)g(a)g(small)g(step)2150
1959 y(semantics)17 b(in)g(terms)f(of)h(substitution)h(o)o(v)o(er)f
(the)g(term)g(language.)h(In)e(ei-)2150 2042 y(ther)j(case,)g(the)g
(type)g(system)g(of)g(the)g(meta-language)i(guarantees)f(that)2150
2125 y(these)f(meta-le)n(v)o(el)g(programs)h(maintain)f(object)g(le)n
(v)o(el)g(type-safety)-5 b(.)2042 2235 y
SDict begin H.S end
 2042 2235 a
2042 2235 a
SDict begin 10 H.A end
 2042 2235 a 2042 2235 a
SDict begin [/View [/XYZ H.V]/Dest (section.3) cvn /DEST pdfmark end
 2042 2235 a 92 x
Fx(3.)91 b(The)22 b(MetaML)g(language.)2042 2443 y Fu(MetaML)32
b(is)g(a)h(homogeneous,)h(manually)g(annotated,)f(run-time)f(code)2042
2526 y(generation)17 b(system.)f(In)h(MetaML)f(we)g(use)h(angle)g
(brack)o(ets)g(\()p Fl(<)39 b(>)p Fu(\))16 b(as)g(quo-)2042
2609 y(tations,)g(and)i(tilde)f(\()p Fl(~)39 b Fu(\))17
b(as)g(the)g(anti-quotation.)g(W)-6 b(e)17 b(call)f(the)i(object-le)n
(v)o(el)2042 2692 y(code)33 b(inside)g(a)f(pair)h(of)f(angle)h(brack)o
(ets,)h(along)f(with)f(its)g(anti-quoted)2042 2775 y(holes)f(a)h
Fr(template)p Fu(,)f(because)h(its)f(stands)g(for)g(a)g(computation)i
(that)e(will)2042 2858 y(b)o(uild)16 b(an)h(object-code)h(fragment)f
(with)f(the)g(shape)i(of)e(the)h(quoted)g(code.)g(In)2042
2941 y(MetaML)e(the)f(angle)h(brack)o(ets,)g(the)g(escapes,)g(the)f
Fl(lift)p Fu(s,)h(and)g(the)g Fl(run)g Fu(op-)2042 3024
y(erator)k(are)f(staging)i(annotations.)g(The)o(y)f(indicate)g(the)g
(boundaries)h(within)2042 3107 y(a)33 b(MetaML)g(program)h(where)f(the)
g(program)h(te)o(xt)f(mo)o(v)o(es)g(from)g(meta-)2042
3190 y(program)d(to)f(object-program.)h(The)f(staging)g(annotations)i
(in)e(MetaML)2042 3273 y(are)f(placed)h(manually)h(by)f(the)f
(programmer)i(and)f(are)f(considered)i(part)2042 3356
y(of)24 b(the)g(language.)i(In)e(MetaML)h(the)f(staging)h(annotations)h
(ha)o(v)o(e)f(seman-)2042 3439 y(tic)20 b(meaning,)i(the)o(y)g(are)f
(part)g(of)g(the)g(language)i(de\002nition,)e(not)g(just)g(hints)2042
3522 y(or)26 b(directions)h(to)g(language)h(preprocessors.)g(A)e
(simple)h(e)o(xample)g(using)2042 3605 y(templates)19
b(follo)n(ws:)p Black Black 2042 3746 a Fe(-|)36 b(val)g(x)f(=)h(<3)g
(+)f(2>)h(;)2042 3821 y(val)g(x)f(=)h(<3)g(\045+)g(2>)g(:)f(<int>)2042
3970 y(-|)h(val)g(code)g(=)g(<show)g(~x>)h(;)2042 4045
y(val)f(code)g(=)g(<\045show)h(\(3)f(\045+)g(2\)>)g(:)f(<string>)2141
4193 y Fu(In)d(this)f(e)o(xample)h(we)f(construct)h(the)g
(object-program)g(fragment)g Fl(x)2042 4276 y Fu(and)25
b(use)g(the)g(anti-quotation)h(mechanism)g(to)e(splice)h(it)f(into)h
(the)g(object-)2042 4359 y(program)i(fragment)g Fl(code)p
Fu(.)g(Note)g(ho)n(w)g(the)g(de\002nition)f(of)h Fl(code)g
Fu(uses)g(a)2042 4442 y(template)i(with)g(a)g(hole)h(\(the)f(escaped)i
(e)o(xpression)f Fl(~x)p Fu(\).)f(MetaML)h(also)2042
4525 y(statically)21 b(scopes)i(free)f(v)n(ariable)h(occurrences)h(in)e
(code)h(templates.)e(This)2042 4608 y(is)d(called)g Fr(cr)m(oss-sta)o
(g)o(e)i(per)o(sistence)p Fu(.)f(V)-8 b(ariables)18 b(de\002ned)h(in)g
(earlier)f(stages)2042 4691 y(are)h(a)o(v)n(ailable)g(for)g(use)g(in)g
(later)f(stages.)p Black Black 2042 4832 a Fe(-|)71 b(fun)36
b(f)g(x)f(y)h(=)f(x)h(+)f(y)h(-)g(1;)2042 4907 y(val)g(f)f(=)h(fn)71
b(:)36 b(int)g(->)g(int)g(->)g(int)2042 5056 y(-|)g(val)g(z)f(=)h(<f)g
(4)f(5>;)2042 5131 y(val)h(z)f(=)h(<\045f)g(4)g(5>)g(:)f(<int>)2042
5280 y(-|)h(let)g(fun)g(f)f(x)h(y)g(=)f(not)h(x)g(andalso)h(y)2148
5355 y(in)e(run)i(z)e(end;)2042 5430 y(val)h(it)g(=)f(8)h(:)f(int)p
Black Black eop end
%%Page: 6 6
TeXDict begin 6 5 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -758 -608
a
SDict begin H.S end
 -758 -608 a -758 -608 a
SDict begin H.R end
 -758 -608 a -758 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -758
-608 a Black Black -50 66 a Fu(When)20 b(printing)i(code)f(with)f(a)h
(le)o(xically)g(scoped)h(v)n(ariable,)e(the)h(pretty)-150
149 y(printer)c(places)h(the)f(percent-sign)i(\()p Fl(\045)p
Fu(\))e(in)g(front)g(of)g Fl(f)h Fu(in)f(the)g(code)h(template)-150
232 y Fl(z)d Fu(to)h(indicate)g(that)f(this)g(is)g(a)h(statically)f
(bound)i(object-v)n(ariable)f(\(not)g(a)f(free)-150 315
y(object-v)n(ariable\).)g(Note)g(ho)n(w)g(the)g(free)f(v)n(ariable)h
Fl(f)g Fu(in)f(the)h(code)h(template)e Fl(z)-150 399
y Fu(refers)j(to)g(the)g(function)g Fl(f:int)41 b(->)e(int)h(->)g(int)p
Fu(,)17 b(which)g(w)o(as)h(in)e(scope)-150 482 y(when)27
b(the)f(template)g(w)o(as)g(de\002ned,)g(and)h(not)f(the)g(function)g
Fl(f:bool)41 b(->)-150 565 y(bool)f(->)g(bool)23 b Fu(which)g(w)o(as)g
(in)g(scope)g(when)h Fl(z)e Fu(w)o(as)h(run.)g(V)-8 b(ariables)22
b(in)-150 648 y(MetaML)i(are)g(le)o(xically)g(scoped)i(e)n(v)o(en)f
(across)f(code)h(brack)o(ets.)g(Because)-150 731 y(code)18
b(may)g(be)f(spliced)h(or)f(run)h(in)f(a)g(conte)o(xt)h(f)o(ar)f(remo)o
(v)o(ed)h(from)f(the)g(scope)-150 814 y(where)i(it)f(w)o(as)i
(de\002ned,)f(this)g(le)o(xical)f(scoping)i(becomes)h(important.)-50
888 y(The)k Fl(run)i Fu(operator)f(in)g(MetaML)g(transforms)h(a)e
(piece)i(of)f(code)g(into)-150 963 y(the)21 b(program)i(it)e
(represents.)g(It)g(is)g(useful)h(to)f(think)h(of)f Fl(run)h
Fu(as)g(indicating)-150 1038 y(the)33 b(composition)h(of)f(run-time)g
(compilation)h(with)f(e)o(x)o(ecution.)g(In)g(the)-150
1112 y(e)o(xample)27 b(belo)n(w)-5 b(,)27 b(we)f(\002rst)g(b)o(uild)g
(a)h(generator)g(\()p Fl(power)p 1376 1112 24 4 v 29
w(gen)p Fu(\).)g(Apply)g(it)-150 1187 y(to)h(obtain)g(a)f(piece)i(of)e
(code)i(\()p Fl(power)p 879 1187 V 29 w(code)p Fu(\).)f(Run)g(the)g
(code)g(to)g(obtain)-150 1262 y(a)22 b(function)h(\()p
Fl(power)p 401 1262 V 30 w(fun)p Fu(\).)f(And)h(then)f(apply)h(the)g
(function)g(to)f(obtain)h(an)-150 1337 y(answer)c(\()p
Fl(125)p Fu(\).)p Black Black -150 1467 a Fe(-|)36 b(fun)g(power_gen)i
(m)d(=)26 1542 y(let)i(fun)f(f)f(n)h(x)f(=)309 1617 y(if)h(n)f(=)h(0)f
(then)i(<1>)626 1691 y(else)g(<~x)f(*)f(~\(f)i(\(n-1\))f(x\)>)26
1766 y(in)g(<let)h(fun)f(power)h(x)e(=)h(~\(f)g(m)f(<x>\))i(in)f(power)
g(end>)h(end;)-150 1841 y(val)f(power_gen)i(=)e(fn)71
b(:)35 b(int)h(->)g(<int)h(->)f(int>)-150 1990 y(-|)g(val)g(power_code)
i(=)e(power_gen)i(3;)-150 2065 y(val)e(power_code)i(=)-150
2140 y(<let)e(fun)h(power)f(x)g(=)f(x)h(*)g(x)f(*)h(x)f(*)h(1)f(in)h
(power)h(end>)-150 2214 y(:)f(<int)g(->)g(int>)-150 2364
y(-|)g(val)g(power_fun)i(=)d(run)i(power_code;)-150 2439
y(val)f(power_fun)i(=)e(fn)71 b(:)35 b(int)h(->)g(int)-150
2588 y(-|)g(power_fun)i(5;)-150 2663 y(val)e(it)g(=)g(125)g(:)f(int)-50
2802 y Fu(The)27 b(introduction)h(of)f(staging)h(annotations)g(such)g
(as,)f(run,)g(brack)o(et,)-150 2885 y(and)16 b(escape)g(considerably)h
(complicates)f(the)f(type)g(system)h(for)f(an)o(y)h(staged)-150
2968 y(language.)32 b(Most)f(type)h(systems)f(disqualify)h(bad)f
(programs)h(that)f(ha)o(v)o(e)-150 3051 y(a)k(small)g(class)g(of)g
(errors.)g(This)g(class)g(of)h(errors)f(includes,)h(use)f(of)g(a)-150
3134 y(v)n(ariable)e(in)f(a)h(scope)g(where)g(the)g(v)n(ariable)g(is)f
(not)h(declared,)g(and)g(use)-150 3217 y(of)c(a)g(v)n(alue)g(in)g(a)g
(manner)g(inconsistent)h(with)e(its)g(type)i(\226)f(i.e.)e(using)j(an)
-150 3300 y(inte)o(ger)h(where)g(a)g(\003oat)g(is)g(e)o(xpected,)g(or)g
(applying)i(something)f(that)f(is)-150 3383 y(not)20
b(a)g(function)h(to)f(an)h(ar)o(gument.)f(Once)h(staging)g(annotations)
g(are)f(added)-150 3466 y(to)j(a)f(language)j(the)e(class)g(of)f
(errors)h(becomes)h(measurably)g(lar)o(ger)l(.)e(Ne)n(w)-150
3549 y(problems)e(include)h(tracking)f(the)g(stage)f(at)h(which)g(a)f
(v)n(ariable)h(is)f(declared)-150 3632 y(\(as)e(well)g(as)g(its)g
(scope\),)g(the)h(e)o(x)o(ecution)g(of)f(code)h(with)f(free)g(v)n
(ariables,)h(and)-150 3715 y(tracking)26 b(alpha-renamed)i(v)n
(ariables.)e(Of)f(course)i(all)e(the)g(old)h(problems)-150
3798 y(still)35 b(e)o(xist.)h(W)-6 b(e)36 b(illustrate)g(these)h(three)
g(ne)n(w)g(problems)g(with)f(simple)-150 3881 y(e)o(xamples)20
b(belo)n(w)-5 b(.)p Black -106 4044 a Fn(\017)p Black
-42 4051 a Fq(Corr)o(ect)15 b(use)f(of)h(v)o(ariables.)g
Fu(The)g(staged)h(type)f(system)g(helps)g(the)g(user)-42
4134 y(construct)22 b(well)g(formed)g(object-programs.)h(One)f(of)g
(its)f(most)h(useful)-42 4217 y(features)f(is)g(that)g(it)g(tracks)h
(the)f(le)n(v)o(el)g(at)g(which)h(v)n(ariables)g(are)f(bound.)-42
4300 y(Attempts)16 b(to)f(use)i(v)n(ariables)f(at)g(a)g(le)n(v)o(el)g
(lo)n(wer)g(than)g(the)g(le)n(v)o(el)g(at)g(which)-42
4383 y(the)o(y)j(are)g(bound)i(mak)o(es)e(no)h(sense.)f(F)o(or)f(e)o
(xample:)p Black Black -42 4578 a Fl(-|)40 b(fun)g(id)f(x)h(=)f(x;)-42
4661 y(val)h(id)g(=)f(Fn)79 b(:)39 b('a)79 b(->)40 b('a)-42
4827 y(-|)g(<fn)g(x)f(=>)h(~\(id)g(x\))f(-)h(4>;)-42
4910 y(Error:)h(The)e(term:)i(x)78 b(Variable)42 b(bound)e(in)g(stage)g
(1)742 4993 y(used)h(too)f(early)g(in)g(stage)g(0)-42
5187 y Fu(In)28 b(the)h(abo)o(v)o(e)h(e)o(xample)f Fl(x)f
Fu(is)g(a)h(stage)g(1)f(v)n(ariable,)h(b)o(ut)g(because)g(of)-42
5270 y(the)j(anti-quotation)i(it)e(is)g(used)h(at)f(stage)h(0.)f(This)g
(is)g(semantically)-42 5353 y(meaningless)20 b(and)g(should)g(be)f
(reported)g(as)g(a)g(type)h(error)l(.)p Black Black Black
2085 59 a Fn(\017)p Black 2150 66 a Fq(Running)e(code)i(with)f(fr)o(ee)
h(v)o(ariables.)g Fu(In)g(MetaML)g(we)g(use)h Fl(run)f
Fu(to)2150 141 y(mo)o(v)o(e)i(from)h(one)f(stage)h(to)f(the)g(ne)o(xt.)
g(Because)h(it)f(is)g(le)o(gal)f(to)h(use)h(the)2150
216 y(anti-quotation)i(under)g(a)f(lambda-binding,)i(there)f(is)f(the)g
(possibility)2150 291 y(that)16 b Fl(run)g Fu(may)h(be)f(applied)h(to)g
(v)n(ariables)f(that)g(will)g(not)g(be)h(bound)g(until)2150
365 y(some)i(later)g(stage.)f(F)o(or)h(e)o(xample:)p
Black Black 2150 505 a Fe(-|)36 b(val)g(bad)g(=)f(<fn)i(x)e(=>)h
(~\(run)h(<x>\))f(+)g(4>;)2150 653 y Fu(will)28 b(cause)i(an)g(error)f
(because)i(the)e(object-v)n(ariable)h Fl(x)g Fu(will)e(not)i(be)2150
736 y(bound)i(until)e(the)g(whole)h(piece)f(of)g(code)i(is)d(run,)i
(and)g(then)f(\002nally)2150 819 y(applied.)p Black 2085
988 a Fn(\017)p Black 2150 995 a Fq(T)-6 b(racking)24
b(Alpha-r)o(enaming)o(.)e Fu(The)i(third)g(problem)h(is)f(v)o(ery)g
(subtle.)2150 1078 y(It)18 b(w)o(as)h(described)h(in)f(W)-6
b(alid)18 b(T)-6 b(aha')l(s)19 b(thesis)g(as)g Fr(the)g(puzzle)p
Fu(.)p Black Black 2150 1239 a Fl(-|)39 b(val)h(puzzle)h(=)2267
1322 y(<fn)f(a)g(=>)f(~\(\(fn)i(x)e(=>)h(<x>\)\(fn)h(y)e(=>)h(<a>\)\))g
(0>;)2150 1483 y Fu(Using)24 b(the)g(\(small)f(step\))h(substitution)g
(semantics)g(for)g(a)g(staged)g(lan-)2150 1566 y(guage)36
b(gi)n(v)o(en)g(in)g(the)f(thesis,)g(the)h(e)o(xpression)g
Fl(\(run)k(puzzle\))h(5)2150 1649 y Fu(should)34 b(e)n(v)n(aluate)g(to)
f Fl(<5>)p Fu(,)g(b)o(ut)g(the)h(implementation)g(of)f(MetaML)2150
1732 y(raised)d(an)h(error)l(.)f(The)g(subtlety)h(comes)g(because)h
(bound)f(v)n(ariables)2150 1815 y(in)25 b(object)h(code)g(in)g(MetaML)f
(are)h(generati)n(v)o(e.)g(I.e.)f(the)g(object)h(v)n(ari-)2150
1898 y(able)f Fl(a)f Fu(in)h(the)f(puzzle)i(will)e(be)h(alpha)g
(renamed)g(to)g(some)g(ne)n(w)g(v)n(ari-)2150 1981 y(able)i(name,)g
(say)h Fl(a_97)p Fu(.)f(The)g(generati)n(v)o(e)h(approach)g(is)f
(essential)g(to)2150 2064 y(a)o(v)o(oid)e(inadv)o(ertent)h(name)g
(capture)g(in)g(generated)g(code.)g(This)f(name)2150
2147 y(gets)34 b(stored)h(in)f(the)h(en)m(vironment)g(of)g(the)f
(closure)h(implementing)2150 2230 y Fl(\(fn)40 b(y)f(=>)h(<a>\))p
Fu(,)17 b(this)g(closure)h(is)f(then)g(embedded)i(inside)f(the)f(code)
2150 2313 y(v)n(alue)33 b(created)h(by)f(the)g(template)g
Fl(<x>)p Fu(,)g(creating)g(the)g(object)g(code)2150 2396
y Fl(<fn)40 b(a_97)g(=>)f(\045x)h(0>)24 b Fu(where)g(the)g
Fl(\045x)g Fu(is)f(a)h(cross-stage)g(persistent)2150
2479 y(v)n(alue)29 b(link)o(ed)g(to)f(the)g(closure.)g(This)g(v)n(alue)
h(will)e(only)i(be)f(e)o(x)o(ecuted)2150 2562 y(when)h(the)f(lar)o(ger)
g(enclosing)h(code)g Fl(<fn)40 b(a_97)g(=>)g(\045x)g(0>)28
b Fu(is)g(run.)2150 2645 y(When)g(the)g(entailing)h(function)g
Fl(\(fn)40 b(a_97)g(=>)f(\045x)h(0\))29 b Fu(is)e(applied)2150
2728 y(\(to)h(say)h Fl(5)p Fu(\),)f(the)h(v)n(ariable)g
Fl(a_97)h Fu(becomes)g(bound)g(in)e(the)h(en)m(viron-)2150
2811 y(ment)18 b(to)g Fl(5)p Fu(.)f(Someho)n(w)i(this)f(binding)h
(needs)f(to)g(be)h(propagated)g(inside)2150 2894 y(the)14
b(cross-stage)i(persistent)e(function)i(represented)g(by)f
Fl(\045x)p Fu(.)f(Doing)h(this)2150 2977 y(considerably)25
b(complicates)f(the)f(implementation,)h(and)g(inadv)o(ersely)2150
3060 y(af)n(fects)19 b(its)f(ef)n(\002cienc)o(y)-5 b(.)2141
3196 y(The)20 b(kind)g(of)g(errors)g(described)h(abo)o(v)o(e)f(do)h
(not)f(occur)g(in)g(normal)g(\(un-)2042 3279 y(staged\))32
b(programs.)g(The)o(y)g(complicate)g(the)g(semantics,)f(the)h(type)g
(sys-)2042 3362 y(tems,)21 b(and)h(the)g(implementations)h
(meta-programming)g(systems.)f(There)2042 3446 y(has)h(been)h(much)g
(thought)g(put)f(into)g(de)n(vising)i(type-systems)f(which)f(will)2042
3529 y(disallo)n(w)17 b(such)h(programs)h([)p Fq(?)e(?)h(?)f(?)h
Fu(].)f(The)g(author)h(\002nds)g(all)f(of)g(these)h(sys-)2042
3612 y(tems)f(lacking)i(in)e(some)h(de)o(gree)g(or)g(other)m(,)g(e)n(v)
o(en)g(though)h(he)f(had)g(a)g(hand)g(in)2042 3695 y(de)n(vising)i
(some)f(of)g(them.)2141 3778 y(There)36 b(has)g(been)g(much)g(debate)h
(about)f(the)f(third)h(e)o(xample.)g(Is)f(it)2042 3861
y(a)f(good)h(program?)g(If)e(so)h(then)g(the)g(implementation)h(must)f
(be)g(much)2042 3944 y(more)28 b(complicated)h(than)f(it)f(might)h
(otherwise)g(be.)f(If)h(it)f(is)g(not)h(a)g(good)2042
4027 y(program,)j(this)f(raises)g(tw)o(o)h(questions.)g(First,)e(ho)n
(w)i(do)g(we)g(get)f(a)h(type)2042 4110 y(system)17 b(to)f(disqualify)i
(it?)e(And,)h(second,)g(ho)n(w)g(do)g(we)g(kno)n(w)h(we)e(w)o(on')o(t)h
(be)2042 4193 y(disqualifying)g(important)f(programs)h(that)f(real)g
(users)g(w)o(ant)h(to)f(write?)f(The)2042 4276 y(second)i(objection)f
(is)f(an)h(easier)g(one)g(to)f(answer)l(.)h(Had)g(the)f(user)h
(performed)2042 4359 y(the)j(e)o(xplicit)f(beta)i(reduction)g(inside)f
(the)g(escape,)g(i.e.)f(written:)p Black Black 2042 4495
a Fl(-|)39 b(val)h(puzzle)h(=)e(<fn)h(a)g(=>)f(~\(<fn)i(y)e(=>)h
(<a>>\))g(0>;)2042 4631 y Fu(None)26 b(of)h(the)f(problems)h
(associated)g(with)e(this)h(e)o(xample)h(w)o(ould)g(occur)l(.)2042
4714 y(So)22 b(the)h(challenge)g(is)g(to)f(come)h(up)g(with)g(a)f(type)
h(system)g(that)g(rejects)f(the)2042 4797 y(original)e(program)h(b)o
(ut)f(not)g(this)g(one.)h(In)f(our)g(opinion,)h(this)f(is)f(a)h
(superior)2042 4880 y(solution)26 b(to)g(complicating)g(the)g
(implementation)h(to)f(accommodate)h(the)2042 4963 y(original)17
b(program)h(\(which)g(we)f(belie)n(v)o(e)h(no)f(one)h(w)o(ould)g(e)n(v)
o(er)g(deliberately)2042 5046 y(write\).)2042 5136 y
SDict begin H.S end

2042 5136 a 2042 5136 a
SDict begin 10 H.A end
 2042 5136 a 2042 5136 a
SDict begin [/View [/XYZ H.V]/Dest (section.4) cvn /DEST pdfmark end
 2042
5136 a 94 x Fx(4.)91 b(MetaML)22 b(as)g(an)h Fm(\012)p
Fx(mega)44 b(pr)n(ogram.)2042 5347 y Fu(In)22 b(this)h(section)f(we)h
(play)g(with)f(types.)h(W)-6 b(e)22 b(e)o(xplore,)h(in)f
Fs(\012)p Fu(me)o(ga,)h(se)n(v)o(eral)2042 5430 y(dif)n(ferent)e
(formulations)g(for)g(a)f(MetaML)i(type)f(system.)f(W)-6
b(e)21 b(will)f(discard)p Black Black eop end
%%Page: 7 7
TeXDict begin 7 6 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -758 -608
a
SDict begin H.S end
 -758 -608 a -758 -608 a
SDict begin H.R end
 -758 -608 a -758 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -758
-608 a Black Black -150 66 a Fu(se)n(v)o(eral)30 b(of)g(our)h
(attempts,)e(as)h(our)g(e)o(xploration)h(points)g(out)f(their)g
(de\002-)-150 149 y(ciencies.)c(This)g(section)h(is)f(meant)h(to)f
(illustrate)g(ho)n(w)h Fs(\012)p Fu(me)o(ga)g(is)f(useful)-150
232 y(for)d(e)o(xploring)g(language)i(design)e(issues.)g(Those)g
(interested)g(in)g(the)g(\002nal)-150 315 y(MetaML)c(type)h(system)f
(may)g(skip)g(ahead)h(to)f(Section)1311 316 y
SDict begin H.S end
 1311 316
a Black -1 x Fu(5)p Black 1348 265 a
SDict begin H.R end
 1348 265 a 1348
315 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (section.5) cvn H.B /ANN pdfmark end
 1348 315 a Fu(.)-50 399 y(W)-6 b(e)26 b(will)f(de)n(v)o(elop)j(a)
e(type)h(system)g(for)g(an)f(abstraction)h(of)g(MetaML)-150
482 y(that)32 b(includes)g(all)g(of)g(MetaML)-7 b(')l(s)32
b(important)g(features.)g(It)f(has)h(a)g(stan-)-150 565
y(dard)44 b(lambda)g(calculus)g(fragment,)g(and)g(a)f(staging)h
(fragment.)f(The)-150 648 y(staging)28 b(fragment)g(includes)g(brack)o
(ets,)g(escape,)g(run,)g(and)g(cross-stage-)-150 731
y(persistence.)-50 814 y(As)19 b(we)h(did)g(in)g(Section)596
815 y
SDict begin H.S end
 596 815 a Black -1 x Fu(2.7)p Black 690 763 a
SDict begin H.R end
 690
763 a 690 814 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (subsection.2.7) cvn H.B /ANN pdfmark end
 690 814 a 19 w Fu(with)g(the)g Fl(Lam)g
Fu(GADT)-6 b(,)20 b(we)g(represent)g(the)-150 897 y(lambda)e(fragment)f
(with)f(tagged)i(de)f(Bruijn)g(style)g(v)n(ariables.)g(The)g(staging)
-150 980 y(fragment)25 b(is)f(more)g(problematic.)h(Ho)n(w)g(do)f(we)h
(deal)f(with)g(the)g(multiple)-150 1063 y(le)n(v)o(els)d(in)f(a)h
(staged)g(e)o(xpression?)h(The)f(standard)h(solution[)p
Fq(?)f(?)g Fu(])f(is)g(to)h(use)-150 1146 y(a)g(le)n(v)o(el-inde)o(x)o
(ed)h(f)o(amily)f(of)g(e)o(xpressions.)h(In)f Fs(\012)p
Fu(me)o(ga)g(we)g(w)o(ould)g(e)o(xtend)-150 1229 y(the)e
Fl(Lam)g Fu(GADT)g(as)f(follo)n(ws:)p Black Black -150
1352 a Fl(data)40 b(Lam::)h(Nat)e(~>)h(Row)g(HasType)h(~>)f(*0)f(~>)h
(*0)79 b(where)-72 1435 y(Var)237 b(::)39 b(Label)i(s)e(->)399
1518 y(Lam)h(n)g(\(RCons)g(\(Has)g(s)g(t\))f(env\))i(t)-72
1601 y(Shift)159 b(::)39 b(Lam)h(n)g(env)f(t)h(->)399
1684 y(Lam)g(n)g(\(RCons)g(\(Has)g(s)g(q\))f(env\))i(t)-72
1767 y(Abstract)h(::)d(Label)i(a)e(->)399 1850 y(Lam)h(n)g(\(RCons)g
(\(Has)g(a)g(s\))f(env\))i(t)e(->)399 1933 y(Lam)h(n)g(env)f(\(s)h(->)g
(t\))-72 2016 y(Apply)159 b(::)39 b(Lam)h(n)g(env)f(\(s)h(->)g(t\))g
(->)399 2099 y(Lam)g(n)g(env)f(s)h(->)399 2182 y(Lam)g(n)g(env)f(t)-72
2265 y(Bracket)81 b(::)39 b(Lam)h(n)g(env)f(t)h(->)g(Lam)g(\(S)f(n\))h
(env)g(t)-72 2348 y(Escape)120 b(::)39 b(Lam)h(\(S)g(n\))f(env)h(t)g
(->)g(Lam)f(n)h(env)g(t)-150 2471 y Fu(Note,)25 b(ho)n(w)g(a)h(natural)
f(number)h(inde)o(x)g(is)e(added)j(to)e Fl(Lam)p Fu(,)g(and)h(that)f
(ho)n(w)-150 2554 y(the)37 b(constructor)g(for)g(brack)o(et)g(lifts)f
(the)h(inde)o(x)g(of)g(a)f(term,)g(and)i(ho)n(w)-150
2637 y(the)27 b(constructor)h(for)f(escape)h(drops)g(the)f(inde)o(x)g
(of)g(a)g(term.)g(It)f(is)h(at)g(this)-150 2720 y(point)i(in)g(the)g
(design)h(e)o(xploration)g(that)f(the)g(automation)h(inherent)f(that)
-150 2803 y(the)c(meta-language)h(be)o(gins)f(to)f(payof)n(f.)i(A)e
(well-typed)h(term)f(b)o(uilt)g(with)-150 2886 y(the)30
b(constructors)i(of)e Fl(Lam)h Fu(is)f(a)g(deri)n(v)n(ation)i(of)e(the)
g(type)h(of)g(that)f(term.)-150 2969 y(By)d(entering)g(simple)g(e)o
(xpressions)i(at)d(the)h Fs(\012)p Fu(me)o(ga)h(prompt)f(we)g(get)g
(the)-150 3052 y Fs(\012)p Fu(me)o(ga)i(type)h(system)f(to)g(check)g
(the)g(well-formedness)h(of)f(the)g(deri)n(v)n(a-)-150
3136 y(tion,)i(and)i(to)e(display)i(the)f(type)g(of)g(the)f(term.)h(F)o
(or)f(e)o(xample,)h(by)g(typ-)-150 3219 y(ing:)e Fl(Bracket)41
b(\(Apply)g(\(Var)f(`f\))g(\(Shift)g(\(Var)g(`x\)\)\))31
b Fu(we)f(get)-150 3302 y(the)19 b(follo)n(wing)g(result:)p
Black Black -111 3425 a Fl(Lam)40 b(#\(1+u\))h({`f:a)f(->)g(b,`x:a;)h
(v})e(b)-150 3631 y Fu(Right)14 b(a)o(w)o(ay)-5 b(,)15
b(an)g(error)f(becomes)i(ob)o(vious)g(in)e(our)h(formulation.)f
(Shouldn')o(t)-150 3714 y(an)23 b(e)o(xpression)h(that)f(is)f(brack)o
(eted)i(ha)o(v)o(e)f(a)g(code)g(type?)h(W)-6 b(e)22 b(need)i(typing)
-150 3797 y(rules)19 b(some)g(thing)h(lik)o(e)f(the)g(follo)n(wing)g
(for)g(escape)h(and)f(brack)o(et.)p Black Black -72 3920
a Fl(Bracket)81 b(::)39 b(Lam)h(n)g(env)f(t)h(->)g(Lam)g(\(S)f(n\))h
(env)g(\(Code)g(t\))-72 4003 y(Escape)120 b(::)39 b(Lam)h(\(S)g(n\))f
(env)h(\(Code)h(t\))e(->)h(Lam)g(n)f(env)h(t)-150 4126
y Fu(But,)c(what)g(then)h(is)f Fl(Code)p Fu(?)h(Some)g(thought)g(leads)
g(to)f(the)h(follo)n(wing)-150 4209 y(de\002nition.)p
Black Black -150 4333 a Fl(data)j(Code)g(t)g(=)f(exists)i(env)f(.)f
(Code)h(\(Lam)g(Z)g(env)g(t\))-150 4456 y Fu(Code)17
b(is)e(just)h(a)g Fl(Lam)g Fu(term)g(at)g(le)n(v)o(el)g(zero)g(\()p
Fl(Z)p Fu(\))g(which)g(can)h(be)f(typed)h(in)f(some)-150
4542 y(en)m(vironment)223 4542 y
SDict begin H.S end
 223 4542 a -32 x Fd(1)254
4542 y
SDict begin 10 H.L end
 254 4542 a 254 4542 a
SDict begin [/Subtype /Link/Dest (Hfootnote.1) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 254 4542 a Fu(.)i(No)n(w)-5
b(,)19 b(let')l(s)f(observ)o(e)i(the)f(type)h(of)e(the)h(same)h(term:)p
Black Black -150 4665 a Fl(Bracket)41 b(\(Apply)f(\(Var)h(`f\))e
(\(Shift)i(\(Var)f(`x\)\)\))-150 4748 y(::)g(Lam)g(#\(1+u\))g({`f:a)h
(->)e(b,`x:a;)i(v})f(\(Code)g(b\))-150 4871 y Fu(Almost,)18
b(b)o(ut)g(the)h(en)m(vironment)h(inde)o(x,)e Fl({`f:a)41
b(->)e(b,`x:a;)i(v})p Fu(,)19 b(does)-150 4954 y(not)29
b(indicate)g(the)h(stage)f(at)f(which)i(a)f(v)n(ariable)g(is)g(bound.)h
(This)f(can)g(be)-150 5037 y(\002x)o(ed)d(by)h(making)g(the)f(en)m
(vironment)i(be)e(a)g(ro)n(w)g(of)g(triples)g(\(rather)g(than)-150
5120 y(pairs\).)17 b(W)-6 b(e)17 b(introduce)i(the)e(kind)h
Fl(HasT)g Fu(to)g(encode)h(triples,)d(and)i(adjust)g(the)-150
5203 y(de\002nition)h(of)g Fl(Var)p Fu(,)g Fl(Shift)p
Fu(,)h(and)f Fl(Abstract)p Fu(.)p Black -150 5280 997
3 v -150 5331 a Fd(1)-113 5355 y
SDict begin H.S end
 -113 5355 a -113 5355
a
SDict begin H.R end
 -113 5355 a -113 5355 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.1) cvn /DEST pdfmark
end
 -113 5355 a Fc(Which)k(en)m(vironment)h
(actually)g(matters,)f(b)o(ut)f(will)g(discuss)g(this)g(in)g(more)g
(detail)-150 5430 y(later)l(.)p Black Black Black Black
Black 2042 66 a Fl(kind)40 b(HasT)g(=)g(H3)f(Tag)h(Nat)g(*0)2042
232 y(data)g(Lam::)g(Nat)g(~>)g(Row)g(HasT)g(~>)g(*0)f(~>)h(*0)79
b(where)2120 315 y(Var)236 b(::)40 b(Label)g(s)g(->)f(Nat')i(n)e(->)
2591 399 y(Lam)h(n)f(\(RCons)i(\(H3)f(s)f(n)h(t\))f(env\))i(t)2120
482 y(Abstract)g(::)f(Label)g(a)g(->)2591 565 y(Lam)g(n)f(\(RCons)i
(\(H3)f(a)f(n)h(s\))f(env\))i(t)e(->)2591 648 y(Lam)h(n)f(env)h(\(s)g
(->)g(t\))2120 731 y(Shift)158 b(::)40 b(Lam)g(n)f(env)h(t)g(->)2591
814 y(Lam)g(n)f(\(RCons)i(\(H3)f(s)f(m)h(q\))f(env\))i(t)2042
958 y Fu(When)25 b(a)g(v)n(ariable)h(is)e(used,)i(it)e(must)h(be)h
(applied)f(to)g(a)g(singleton)h Fl(\(Nat')2042 1041 y(n\))19
b Fu(to)h(indicate)g(at)f(what)g(le)n(v)o(el)h(it)f(w)o(as)g
(de\002ned.)h(Consider)g(again)g(the)g(type)2042 1124
y(of)k(the)g(e)o(xample)g(term)g(\(adjusted)h(to)e(include)i(le)n(v)o
(el)f(information)h(on)f(the)2042 1207 y(v)n(ariables\).)p
Black Black 2042 1350 a Fl(Bracket)41 b(\(Apply)f(\(Var)g(`f)g(#0\))g
(\(Shift)h(\(Var)f(`x)f(#0\)\)\))2042 1434 y(::)g(Lam)h(#1)g
({`f^#0:\(a)h(->)f(b\),)g(`x^#0:a;)h(u})f(\(Code)g(b\))2042
1577 y Fu(W)-6 b(e)41 b(ha)o(v)o(e)i(\(again\))f(introduced)i(some)e
(syntactic)h(sugar)l(.)f(When)g(dis-)2042 1660 y(playing)28
b(a)f(type)h(of)f(kind)h Fl(HasT)p Fu(,)f(we)h(display)f
Fl(\(H3)40 b(`tag)g(#n)g(typ\))28 b Fu(as)2042 1743 y
Fl(\(`tag^#n:typ\))p Fu(.)c(A)d(ne)n(w)g(problem)i(arises)e(if)g(the)g
(tw)o(o)g(v)n(ariables)h(come)2042 1826 y(from)f(tw)o(o)g(dif)n(ferent)
g(stages.)g(Assume)g Fl(`f)h Fu(comes)f(from)g(stage)g(0,)g(and)h
Fl(`x)2042 1910 y Fu(from)14 b(stage)h(1,)f(as)h(it)e(might)i(in)f(the)
h(MetaML)g(term)f Fl(\(fn)40 b(f)f(=>)h(<fn)g(x)f(=>)h(f)f(x>\))p
Fu(.)2042 1993 y(This)19 b(mak)o(es)i Fl(`f)g Fu(a)f(cross)g(stage)g
(persistent)g(v)n(alue.)h(W)-6 b(e)19 b(replace)i Fl(\(Var)40
b(`x)2042 2076 y(#0\))30 b Fu(with)g Fl(\(Var)40 b(`x)g(#1\))p
Fu(.)30 b(Observ)o(e)h(the)f(types)h(of)f Fl(f)g Fu(and)g
Fl(x)p Fu(,)g(and)h(the)2042 2159 y(constructor)20 b
Fl(Apply)p Fu(:)p Black Black 2042 2302 a Fl(Var)40 b(`f)f(#0)h(::)g
(Lam)g(#0)f({`f^#0:a;)j(u})d(a)2042 2385 y(Var)h(`x)f(#1)h(::)g(Lam)g
(#1)f({`x^#1:a;)j(u})d(a)2042 2469 y(Apply)h(::)g(Lam)g(u)f(v)h(\(a)f
(->)h(b\))g(->)f(Lam)h(u)g(v)f(a)h(->)f(Lam)h(u)g(v)f(b)2042
2612 y Fu(As)24 b(we)h(intended,)g(the)g(le)n(v)o(els)g(of)g(the)g(tw)o
(o)g(terms)f(no)n(w)h(dif)n(fer)l(.)g(The)f(term)2042
2695 y Fl(f)j Fu(is)f(at)g(le)n(v)o(el)h(0,)g(and)g(the)g(term)f
Fl(x)h Fu(is)f(at)h(le)n(v)o(el)g(1.)f(The)h(application)g(of)g
Fl(f)2042 2778 y Fu(to)18 b Fl(x)h(\(Apply)40 b(\(Var)g(`f)g(#0\))g
(\(Shift)h(\(Var)f(`x)f(#1\)\)\))20 b Fu(will)d(be)i(ill-)2042
2861 y(typed,)e(because)h Fl(Apply)f Fu(requires)g(that)g(the)f(le)n(v)
o(el)h(of)f(the)h(tw)o(o)g(terms)f(be)h(the)2042 2945
y(same.)i(The)g(problem)g(here)h(is)e(similar)g(to)h(the)g(problem)h
(of)f(constructing)h(a)2042 3028 y(term)f(with)g(tw)o(o)g(dif)n(ferent)
h(v)n(ariables)g(with)f(dif)n(ferent)g(names)h(b)o(ut)f(with)g(the)2042
3111 y(same)g(de)g(Bruijn)g(indices.)g(W)-6 b(e)19 b(solv)o(ed)h(that)f
(problem)g(be)h(introducing)g(the)2042 3194 y Fl(Shift)h
Fu(operator)l(.)g(W)-6 b(e)19 b(can)i(solv)o(e)g(the)f(le)n(v)o(el)g
(problem)h(by)g(similar)f(means.)2042 3277 y(Introduce)27
b(a)g(ne)n(w)g(constructor)h(of)e Fl(Lam)h Fu(terms)g(that)f(raises)h
(the)f(le)n(v)o(el)h(of)2042 3360 y(a)e(term.)g(W)-6
b(e)24 b(call)h(this)g(constructor)h Fl(Cross)p Fu(,)g(because)h(it)d
(used)i(when)g(we)2042 3443 y(w)o(ant)19 b(cross-stage)h(persistence.)p
Black Black 2081 3587 a Fl(Cross)158 b(::)40 b(Lam)g(n)f(env)h(t)f(->)h
(Lam)g(\(S)g(n\))f(env)h(t)2042 3730 y Fu(Using)19 b
Fl(Cross)h Fu(on)f Fl(f)p Fu(,)g(the)g(term)f(is)h(no)n(w)g(well)g
(typed:)p Black Black 2042 3874 a Fl(Apply)40 b(\(Cross)h(\(Shift)f
(\(Var)g(`f)g(#0\)\)\))h(\(Var)f(`x)f(#1\))2042 3957
y(::)g(Lam)h(#1)g({`x^#1:a,)h(`f^#0:\(a)g(->)f(b\);)g(u})g(\(Code)g
(b\))2042 4101 y Fu(The)18 b(term)h(is)f(a)g(second)i(le)n(v)o(el)e
(term.)g(This)h(is)f(indicated)h(in)f(the)h(le)n(v)o(el)f(inde)o(x)2042
4184 y(\()p Fl(#1)p Fu(\).)k(It)h(mentions)h(tw)o(o)f(v)n(ariables)g
Fl(f)g Fu(de\002ned)h(at)f(le)n(v)o(el)g Fl(#0)g Fu(with)f(type)i
Fl(\(a)2042 4267 y(->)39 b(b\))p Fu(,)21 b(and)g Fl(x)f
Fu(de\002ned)h(at)f(le)n(v)o(el)g Fl(#1)h Fu(with)f(type)h
Fl(b)p Fu(.)f(The)g(type)h(of)f(the)g(term)2042 4350
y(is)15 b Fl(\(Code)40 b(b\))p Fu(.)15 b(W)-6 b(e)15
b(ha)o(v)o(e)h(succeeded)h(in)e(describing)h(well-formed)g(object-)2042
4433 y(le)n(v)o(el)j(terms)f(using)i(the)f(type)g(system)h(of)f(the)g
(meta-language!)2141 4516 y(Unfortunately)-5 b(,)19 b(while)f(an)g
(interesting)g(e)o(x)o(ercise,)g(this)g(particular)g(path)2042
4599 y(is)j(hard)i(to)f(e)o(xtend.)h(The)f(problem)h(comes)f(from)h(ha)
o(ving)f(v)n(ariables)h(from)2042 4682 y(all)c(le)n(v)o(els)h(in)g(a)g
(single)h(en)m(vironment.)g(Rhetorically)-5 b(,)20 b(should)h(it)e(be)h
(neces-)2042 4765 y(sary)25 b(for)h(the)f(v)n(ariables)h
Fl(f)g Fu(and)g Fl(x)f Fu(to)h(ha)o(v)o(e)f(dif)n(ferent)h(deBruijn)f
(indices?)2042 4848 y(While)16 b(e)o(x)o(ecuting)j(in)e(the)g(second)i
(stage,)e(the)g(en)m(vironment)i(including)f(the)2042
4932 y(binding)h(for)e Fl(f)h Fu(\(as)g(well)f(as)h(the)g(need)h(for)f
Fl(f)p Fu(\))f(will)g(be)h(long)h(gone.)f(The)g(sin-)2042
5015 y(gle)i(en)m(vironment)i(approach)g(also)f(causes)g(man)o(y)h
(problems)f(when)g(doing)2042 5098 y(proofs.)16 b(It)g(is)g(necessary)h
(to)g(construct)f(lemmas)h(which)g(talk)f(about)h(projec-)2042
5181 y(tions)h(o)o(v)o(er)g(en)m(vironments.)h(A)f(projection)h
(projects)f(only)h(those)f(v)n(ariables)2042 5264 y(de\002ned)26
b(a)g(single)g(stage.)f(The)h(k)o(e)o(y)g(to)g(a)f(simple)h(and)g(ele)o
(gant)g(type)g(sys-)2042 5347 y(tem)19 b(for)h(a)f(staged)h(language)i
(is)d(to)g(break)h(from)g(tradition.)f(Do)h(not)g(use)g(an)2042
5430 y(le)n(v)o(el-inde)o(x)o(ed)g(term,)e(and)i(do)f(not)g(use)h(a)f
(single)g(en)m(vironment.)p Black Black eop end
%%Page: 8 8
TeXDict begin 8 7 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -758 -608
a
SDict begin H.S end
 -758 -608 a -758 -608 a
SDict begin H.R end
 -758 -608 a -758 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 -758
-608 a Black Black Black -150 3 1993 4 v Black Black
38 800 a
 currentpoint currentpoint translate 0.40 0.40 scale neg exch neg exch
translate
 38 800 a 18 w @beginspecial 77 @llx 383 @lly
560 @urx 607 @ury 4830 @rwi @setspecial
%%BeginDocument: stack.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - pictures.ppt)
%%Version: 1 4
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 09:15:57 04/07/05
%%DocumentData: Clean7Bit
%%BoundingBox: 77 383 560 607
%%HiResBoundingBox: 76.744141 382.988617 559.883362 607.116333
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0


%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Times-Roman
[/N13/Times-Roman 1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1151 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-14, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:23d898e7-c754-42f0-978c-6283490931d4' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0.1 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:23d898e7-c754-42f0-978c-6283490931d4' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreateDate='2005-04-07T09:14:33-07:00' xap:CreatorTool='PScript5.dll Version 5.2.2' xap:ModifyDate='2005-04-07T09:14:33-07:00'></rdf:Description>
<rdf:Description rdf:about='uuid:23d898e7-c754-42f0-978c-6283490931d4' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:ca75d274-2fff-44e6-953a-a1197d3629bf'/>
<rdf:Description rdf:about='uuid:23d898e7-c754-42f0-978c-6283490931d4' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Microsoft PowerPoint - pictures.ppt</rdf:li></rdf:Alt></dc:title></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
77 383 483 224 rectclip
/N11 [/DeviceRGB] /ColorSpace defineRes pop

%ADOBeginSubsetFont: MNLDDN+Symbol Initial
ct_CffDict begin
%ADOt1write: (1.0.21)
13 dict dup begin
/FontType 1 def
/FontName /MNLDDN+Symbol def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (Symbol) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 42996 def
/FontBBox {-180 -293 1090 1010} def
end
systemdict begin
dup /Private
9 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 0 673 688 487 500] def
/StdHW [92] def
/StdVW [85] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 1 /Gamma 32 /space 45 /minus 48 /zero/one/two
/three 71 /Gamma 138 /minus
/N14/MNLDDN+Symbol -1 TZ
76.744141 382.988617 483.139221 224.127716 re
W
n
q
n
36.040001 755.959961 539.999977 -720.0 re
eoclip
n
n
36.040001 35.959999 539.999977 720.000023 re
1.0 1.0 1.0 setrgbcolor
f
Q
n
308.320007 419.959991 -4.559998 44.76001 re
303.759979 419.959991 m
h
299.320007 462.440002 m
306.039978 476.0 l
312.759979 462.440002 l
0.003922 0.003922 0.003922 setrgbcolor
f
1 J
0.75 w
8.0 M
n
333.039978 563.959961 -54.0 -80.040009 re
279.040009 563.959961 m
h
400.47998 563.959961 -54.0 -80.040009 re
346.47998 563.959961 m
h
454.47998 563.959961 -54.0 -80.040009 re
400.47998 563.959961 m
h
508.47998 563.959961 -54.0 -80.040009 re
454.47998 563.959961 m
h
270.040009 563.959961 -54.0 -80.040009 re
216.039993 563.959961 m
h
216.039993 563.959961 -54.0 -80.040009 re
162.039993 563.959961 m
h
162.039993 563.959961 -54.0 -80.040009 re
108.040001 563.959961 m
h
S
0.0 sg
285.399597 586.280273 m
/N13 15.960007 Tf
(present)
[7.99756 5.332119 7.103803 6.22612 7.103803 7.99756 4.454436 ] pdfxs
412.359802 588.439636 m
(future)
[5.29222 8.040652 4.414536 8.040652 5.29222 7.063903 ] pdfxs
169.359238 585.080078 m
(past)
[8.010327 7.11657 6.238887 4.467204 ] pdfxs
304.239594 520.760315 m
%ADOBeginSubsetFont: MNLDDN+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/MNLDDN+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Gamma <1C60D8A8C9B7C05465AA31B7F7197D4ED4340BBB8EF33BC85414001D
80F19014E90E35517432EBC8A3D28A15168E878098164BC3B44308A9CA09873D
D55054372442DB44EA9DBBA32F4DBEEE59DFB292B6BEE0EAA2785DF09AB747A0
AB6DC1EE726F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MNLDDN+Symbol findfont /Encoding get
dup 1 /Gamma put
pop
end
%ADOEndSubsetFont
/N14 24.0 Tf
(\001) show
318.759583 520.760315 m
%ADOBeginSubsetFont: MNLDDN+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/MNLDDN+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B7A73D33B1D14157887705178A7A78C297BD731978DD3B6
EAF1E6D698CE8E726EC0E0BF4BD54174B895149D427991846436963DF981DC35
F07A5E43F5D45854DC326ED37324F7E6C5754B886FE897C8ADBBEFC52F76C68> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MNLDDN+Symbol findfont /Encoding get
dup 48 /zero put
pop
end
%ADOEndSubsetFont
/N14 9.960007 Tf
(0) show
372.519684 520.760315 m
/N14 24.0 Tf
(\001) show
387.039581 520.760315 m
%ADOBeginSubsetFont: MNLDDN+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/MNLDDN+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7A73DC54E0D6CD3D5FF71BFC1591E9A6BDC0E5114E72675
8F3266F02439FDC9C2CEEE92C355C9467AF224B8EB7ED7882BBA92F5EE0FFAE0
245A29FC9A7975F1E6BF3CDD2DA91FF0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MNLDDN+Symbol findfont /Encoding get
dup 49 /one put
pop
end
%ADOEndSubsetFont
/N14 9.960007 Tf
(1) show
422.079681 520.760315 m
/N14 24.0 Tf
(\001) show
436.599579 520.760315 m
%ADOBeginSubsetFont: MNLDDN+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/MNLDDN+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A73DC50461563DED76A882B91B396C3C6302F8A071E453
8B58FA876AC68DC1F4B1EFCEFB47A32B5753B7441252734609EABFC0755843C5
7185DC3899485ED70CB3FF2C1262AA818CA1D4DA073F1D0CE6961F622DA81475
346B8817EFEFF5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MNLDDN+Symbol findfont /Encoding get
dup 50 /two put
pop
end
%ADOEndSubsetFont
/N14 9.960007 Tf
(2) show
471.519684 520.760315 m
/N14 24.0 Tf
(\001) show
486.039581 520.760315 m
%ADOBeginSubsetFont: MNLDDN+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/MNLDDN+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A73D33B7A78F980126C683D4AA418F9D791CD8E68412
F223B75F5B66AABEFF149661CEF61E9134DFE3296E7595F4EE56EFCBCABB1ACD
AC0D65842AA9577EED24B0175FEE1EFDB30E48C330E6510F93A14AC5460C7827
4FC1F6AB15DB20BC3E9EB640874A167432CAEDFC84A74FE78FB3B9AE5BE17CB7
D953E09AE5E015D0E4421734B4C8881D5B85F1A96E39CD80A6B3EBD4B3F260E8
E15E6E8FEDF40AD23E605C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MNLDDN+Symbol findfont /Encoding get
dup 51 /three put
pop
end
%ADOEndSubsetFont
/N14 9.960007 Tf
(3) show
236.799698 520.760315 m
/N14 24.0 Tf
(\001) show
251.319687 520.760315 m
%ADOBeginSubsetFont: MNLDDN+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/MNLDDN+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/minus <1C60D8A8C9B79676F46FD783B8A2CE84D6DCBCA08607E78F35D0F30F
2A79> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MNLDDN+Symbol findfont /Encoding get
dup 138 /minus put
pop
end
%ADOEndSubsetFont
/N14 9.960007 Tf
(\2121)
[5.519796 5.031796 ] pdfxs
187.2397 520.760315 m
/N14 24.0 Tf
(\001) show
201.759598 520.760315 m
/N14 9.960007 Tf
(\2122)
[5.519796 5.031796 ] pdfxs
134.079697 520.760315 m
/N14 24.0 Tf
(\001) show
148.599594 520.760315 m
/N14 9.960007 Tf
(\2123)
[5.519796 5.031796 ] pdfxs
n
375.759979 419.959991 -4.440002 44.76001 re
371.319977 419.959991 m
h
366.759979 462.440002 m
373.47998 476.0 l
380.319977 462.440002 l
0.003922 0.003922 0.003922 setrgbcolor
f
n
245.319992 419.959991 -4.559998 44.76001 re
240.759995 419.959991 m
h
236.319992 462.440002 m
243.039993 476.0 l
249.759995 462.440002 l
f
0.0 sg
371.799683 389.840302 m
/N13 18.0 Tf
(Top of the \223future\224 stack)
[10.997864 9.0 9.0 4.5594 9.0 5.993866 4.4406 5.003998 9.0 7.992004 4.5594 
7.992004 5.993866 9.0 5.003998 9.0 5.880466 7.992004 7.992004 4.5594 7.002136 5.003998 
7.992004 7.992004 9.0 ] pdfxs
83.799683 393.440308 m
(Top of the \223past\224 stack)
[11.039263 8.9586 8.9586 4.5594 8.9586 5.952466 4.4406 5.039998 9.0 7.950604 4.5594 
7.950604 8.9586 8.040605 6.960736 4.962598 8.040605 4.5594 6.960736 5.039998 7.950604 8.040605 
8.9586 ] pdfxs
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font Times-Roman
%%EOF

%%EndDocument
 @endspecial 38 800 a
 currentpoint currentpoint translate 1 0.40 div 1 0.40 div scale neg
exch neg exch translate
 38 800 a -150 894 1993 3 v -150
979 a Fq(Figur)o(e)30 b(2.)184 979 y
SDict begin H.S end
 184 979 a 184 979
a
SDict begin H.R end
 184 979 a 184 979 a
SDict begin [/View [/XYZ H.V]/Dest (figure.2) cvn /DEST pdfmark end
 184 979 a Fu(A)g(typing)i(judgment)f(contains)h
(a)e(\223sliding)h(band\224)h(of)f(type)-150 1062 y(conte)o(xts.)25
b(The)f(band)i(is)e(\223implemented\224)i(using)f(a)f(single)h(type)g
(conte)o(xt,)-150 1145 y(and)31 b(tw)o(o)g(stacks)g(of)g(type)g(conte)o
(xts.)g(The)g(depth)g(of)g(the)g(stacks)g(is)f(un-)-150
1228 y(bounded,)21 b(since)e(a)f(multistage)h(program)h(can)f(ha)o(v)o
(e)g(an)g(arbitrary)g(number)-150 1311 y(of)g(stages.)p
-150 1364 1993 4 v Black -150 1545 a
SDict begin H.S end
 -150 1545 a -150
1545 a
SDict begin 10 H.A end
 -150 1545 a -150 1545 a
SDict begin [/View [/XYZ H.V]/Dest (section.5) cvn /DEST pdfmark end
 -150 1545 a 66 x Fx(5.)91
b(Sliding)23 b(Bands)e(of)i(Contexts)-150 1727 y Fu(The)18
b(k)o(e)o(y)g(to)f(typing)i(staged)f(terms)f(is)h(to)f(think)h(about)h
(the)e(en)m(vironment)i(as)-150 1810 y(a)i(\223sliding)h(band\224)h(of)
e(type)h(conte)o(xts.)f(The)h(lambda)g(fragment)g(binds)g(and)-150
1893 y(looks)i(up)f(v)n(ariables)g(in)g(the)g(\223present\224)h(stage.)
f(Staging)f(operations)i(slide)-150 1976 y(the)17 b(pointer)l(.)g(The)g
(structure)g(of)g(the)g(en)m(vironment)h(is)f(illustrated)g(in)f
(Figure)-150 2060 y
SDict begin H.S end
 -150 2060 a Black Fu(2)p Black -113
2009 a
SDict begin H.R end
 -113 2009 a -113 2060 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.2) cvn H.B /ANN pdfmark end
 -113 2060 a Fu(.)-50 2143
y(Capturing)33 b(this)g(structure)g(in)g(the)g(object-le)n(v)o(el)g
(type)g(system)g(as)g(a)-150 2226 y(meta-le)n(v)o(el)27
b(GADT)e(is)h(an)h(interesting,)f(though)i(not)e(too)h(dif)n(\002cult)f
(e)o(x)o(er)o(-)-150 2309 y(cise.)j(W)-6 b(e)29 b(start)g(by)h
(introducing)h(a)f(ne)n(w)g(GADT)f(for)g(terms)h Fl(Exp)p
Fu(.)f(Lik)o(e)-150 2392 y Fl(Lam)p Fu(,)e(it)f(has)h(multiple)g(inde)o
(x)o(es.)g(W)-6 b(e)26 b(write)g Fl(\(Exp)40 b(past)g(now)g(future)-150
2475 y(t\))21 b Fu(where)h Fl(past)g Fu(and)f Fl(future)i
Fu(are)e(stacks)g(of)h(conte)o(xts,)f Fl(now)h Fu(is)e(the)i(cur)o(-)
-150 2558 y(rent)d(en)m(vironment,)h(and)g Fl(t)e Fu(is)h(the)g(type)g
(of)g(the)g(term.)-50 2641 y(F)o(or)f(mnemonic)h(purposes)h(we)f(w)o
(ould)g(lik)o(e)g(the)f(past)h(stack)g(to)f(\223gro)n(w\224)-150
2724 y(on)23 b(the)g(right,)f(and)i(the)f(future)g(stack)g(to)f
(\223gro)n(w\224)i(on)f(the)g(left.)f(T)-6 b(o)22 b(do)i(this)-150
2807 y(we)f(use)h(meta-le)n(v)o(el)f(pairs)g(\(i.e.)f
Fl(\(a,b\))p Fu(\).)i(Unfortunately)-5 b(,)24 b(the)f(type)h(con-)-150
2890 y(structor)15 b(for)g(pairs)h(only)g(allo)n(ws)f(types)h(of)f
(kind)h Fl(*0)f Fu(as)h(ar)o(guments,)f(and)h(en-)-150
2973 y(vironments)k(\(as)f(we)f(ha)o(v)o(e)i(de\002ned)f(them\))g(ha)o
(v)o(e)g(kind)h Fl(\(Row)40 b(HasType\))p Fu(.)-150 3056
y(F)o(ortunately)16 b(we)f(also)h(de\002ned)g(the)f(type)h(constructor)
h Fl(Rec)e Fu(\(for)h(construct-)-150 3139 y(ing)g(records\))h(which)f
(when)h(applied)f(to)g(a)g Fl(\(Row)40 b(HasType\))18
b Fu(has)e(kind)g Fl(*0)p Fu(.)-150 3222 y(T)-6 b(o)19
b(push)h(a)e(conte)o(xt)i Fl(\(r::Row)41 b(HasType\))20
b Fu(on)g(to)e(a)h(right)g(gro)n(wing)h(stack)-150 3305
y Fl(\(past::*0\))i Fu(we)e(write)f Fl(\(past,Rec)41
b(r\))p Fu(,)20 b(and)h(to)f(push)g(a)g(conte)o(xt)h
Fl(r)f Fu(on)-150 3388 y(to)g(a)f(left)h(gro)n(wing)g(stack)h
Fl(future)g Fu(we)e(write)g Fl(\(Rec)41 b(r,future\))p
Fu(.)21 b(K)n(eep-)-150 3471 y(ing)29 b(these)h(e)o(xplanations)g(in)f
(mind)h(study)f(the)h(GADT)e(for)h(e)o(xpressions)-150
3554 y(belo)n(w:)p Black Black -150 3686 a Fl(data)40
b(Cd)g(n)f(f)h(t)f(=)h(Cd)f(\(forall)i(p)f(.)f(Exp)h(p)f(n)h(f)f(t\))
-150 3852 y(data)h(Exp::)h(*0)e(~>)h(Row)g(HasType)h(~>)e(*0)h(~>)g(*0)
f(~>)h(*0)g(where)-72 3935 y(--)g(The)g(lambda)h(fragment)-72
4018 y(V::)f(Label)h(s)e(->)h(Exp)g(p)f(\(RCons)i(\(Has)f(s)f(t\))h
(env\))g(f)g(t)-72 4101 y(Sh::)80 b(Exp)40 b(p)f(env)h(f)g(t)f(->)164
4184 y(Exp)h(p)f(\(RCons)i(\(Has)f(s)f(q\))h(env\))g(f)g(t)-72
4267 y(Abs::)h(Label)f(x)g(->)164 4350 y(Exp)g(p)f(\(RCons)i(\(Has)f(x)
f(s\))h(n\))g(f)f(t)h(->)164 4433 y(Exp)g(p)f(n)h(f)f(\(s)h(->)f(t\))
-72 4516 y(App::)i(Exp)f(p)f(n)h(f)f(\(t1->t\))i(->)164
4599 y(Exp)f(p)f(n)h(f)f(t1)h(->)164 4682 y(Exp)g(p)f(n)h(f)f(t)-72
4848 y(--)h(the)g(staging)h(fragment)-72 4932 y(Br::)80
b(Exp)40 b(\(p,Rec)g(n\))g(c)f(f)h(t)f(->)164 5015 y(Exp)h(p)f(n)h
(\(Rec)g(c,f\))g(\(Cd)g(c)f(f)h(t\))-72 5098 y(Esc::)h(Exp)f(p)f(b)h
(\(Rec)g(n,f\))g(\(Cd)g(n)f(f)h(t\))f(->)164 5181 y(Exp)h(\(p,Rec)g
(b\))g(n)f(f)h(t)-72 5264 y(Csp::)h(Exp)f(p)f(b)h(\(Rec)g(n,f\))g(t)f
(->)164 5347 y(Exp)h(\(p,Rec)g(b\))g(n)f(f)h(t)-72 5430
y(Run::)h(\(forall)g(x)e(.)h(Exp)f(p)h(n)f(\(Rec)i(x,f\))f(\(Cd)g(x)f
(f)g(t\)\))h(->)p Black Black 2356 66 a(Exp)g(p)f(n)g(f)h(t)2120
232 y(--)g(pairs)g(and)g(constants)2120 315 y(Pair::)h(Exp)f(p)f(n)h(f)
f(s)h(->)2395 399 y(Exp)g(p)f(n)h(f)f(t)h(->)2395 482
y(Exp)g(p)f(n)h(f)f(\(s,t\))2120 565 y(Const::)i(t)f(->)f(Exp)h(past)g
(now)g(future)h(t)2042 690 y Fu(The)16 b(type)h Fl(Cd)g
Fu(is)f(similar)g(to)g(the)h(type)g Fl(Code)g Fu(from)f(Section)3606
690 y
SDict begin H.S end
 3606 690 a Black Fu(4)p Black 3643 639 a
SDict begin H.R end
 3643 639
a 3643 690 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (section.4) cvn H.B /ANN pdfmark end
 3643 690 a Fu(.)g(It)g(is)g(nothing)2042
773 y(more)j(than)h(a)f(restricted)g(form)h(of)f Fl(Exp)p
Fu(,)g(and)h(is)f(the)g(meta-le)n(v)o(el)h(type)f(used)2042
856 y(to)27 b(implement)g(object)h(le)n(v)o(el)f(terms)f(with)h(code)h
(type.)f(In)g(the)g(e)o(xamples)2042 939 y(belo)n(w)21
b(we)g(often)g(contrast)g Fl(Lam)h Fu(terms)f(from)g(Section)3518
939 y
SDict begin H.S end
 3518 939 a Black Fu(4)p Black 3556 888 a
SDict begin H.R end
 3556 888
a 3556 939 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (section.4) cvn H.B /ANN pdfmark end
 3556 939 a 20 w Fu(with)g Fl(Exp)g Fu(terms)2042
1022 y(from)31 b(this)f(section)i(and)f(the)g(distiction)g(between)h
Fl(Code)f Fu(\(used)h(in)f Fl(Lam)2042 1105 y Fu(terms\))18
b(and)i Fl(Cd)f Fu(\(used)h(in)e Fl(Exp)i Fu(terms\))e(is)h(important.)
2141 1188 y(The)24 b Fl(Exp)g Fu(type)g(is)g(ho)n(w)g(we)g(represent)g
(object-le)n(v)o(el)g(MetaML)g(terms)2042 1271 y(in)32
b Fs(\012)p Fu(me)o(ga.)h(The)f(lambda)h(fragment)g(of)f(the)g
(language)i(is)e(completely)2042 1354 y(standard.)e(It)f(basically)h
(ignores)g(\(by)g(k)o(eeping)i(constant\))e(the)g(\002rst)e(and)2042
1437 y(third)34 b(inde)o(x)o(es)h(which)g(are)g(the)f(stacks)h(of)f
(conte)o(xts.)h(Its)f(approach)i(to)2042 1520 y(v)n(ariables)15
b(is)f(the)h(same)g(as)g(in)f(the)h Fl(Lam)g Fu(object-language,)i
(using)e Fl(Sh)g Fu(to)f(shift)2042 1604 y(v)n(ariables)27
b(into)f(increasing)h(de)f(Bruijn)g(indices.)h(The)f(staging)h
(fragment)2042 1687 y(is)35 b(reminiscent)g(of)h(the)f(le)n(v)o(el)g
(inde)o(x)o(ed)i Fl(Lam)f Fu(terms.)e(But)h(rather)h(than)2042
1770 y(changing)d(the)e(le)n(v)o(el)g(inde)o(x,)h(these)f(constructors)
i(manipulate)f(the)f(tw)o(o)2042 1853 y(conte)o(xt)20
b(stacks.)f(Let')l(s)f(compare)j(the)e(brack)o(et)h(constructor)g(from)
g(the)f(tw)o(o)2042 1936 y(approaches.)p Black Black
2042 2061 a Fl(Bracket)41 b(::)e(Lam)h(u)g(v)f(a)h(->)2473
2144 y(Lam)g(#\(1+u\))h(v)e(\(Code)i(a\))2042 2310 y(Br)236
b(::)39 b(Exp)h(\(a,Rec)h(u\))e(v)h(b)f(c)h(->)2473 2393
y(Exp)g(a)g(u)f(\(Rec)h(v,b\))g(\(Cd)g(v)g(b)f(c\))2042
2519 y Fu(While)23 b(the)g Fl(Lam)h Fu(brack)o(et)h(constructor)f
(increments)g(the)g(le)n(v)o(el)f(inde)o(x,)h(the)2042
2602 y Fl(Exp)16 b Fu(brack)o(et)g(constructor)h(shifts)e(the)h(top)g
(conte)o(xt)g(on)g(the)g(past)g(stack)g(\()p Fl(Rec)2042
2685 y(u)p Fu(\))21 b(into)g(the)g(no)n(w)h(conte)o(xt,)g(and)g(shifts)
e(the)i(current)f(conte)o(xt)h(\()p Fl(v)p Fu(\))f(onto)h(the)2042
2768 y(top)d(of)g(the)g(future)g(stack.)p Black Black
2042 2894 a Fl(Escape)40 b(::)g(Lam)g(#\(1+u\))h(v)e(\(Code)h(a\))g(->)
2434 2977 y(Lam)g(u)f(v)h(a)2042 3143 y(Esc)157 b(::)40
b(Exp)g(a)f(u)h(\(Rec)g(v,b\))g(\(Cd)g(v)g(b)f(c\))h(->)2434
3226 y(Exp)g(\(a,Rec)h(u\))e(v)h(b)f(c)2042 3392 y(Cross)79
b(::)40 b(Lam)g(u)f(v)h(a)f(->)2434 3475 y(Lam)h(#\(1+u\))h(v)e(a)2042
3641 y(Csp)157 b(::)40 b(Exp)g(a)f(u)h(\(Rec)g(v,b\))g(c)g(->)2434
3724 y(Exp)g(\(a,Rec)h(u\))e(v)h(b)f(c)2042 3850 y Fu(A)24
b(similar)g(\(b)o(ut)g(in)m(v)o(erse\))h(relationship)h(holds)f(for)g
(the)f(escape)i(operator)l(.)2042 3933 y(The)17 b(cross-stage)h
(persistence)g(operator)m(,)g(rather)g(than)f(changing)j(the)d(le)n(v)o
(el)2042 4016 y(of)g(a)g(term,)f(cause)h(its)g(ar)o(gument)g(to)g
(reach)g(into)g(the)g(top)g(most)g(past)g(conte)o(xt)2042
4099 y(to)i(compute)h(its)f(type.)g(Lets)g(observ)o(e)i(the)e(type)h
(of)f(our)h(e)o(xample)g(from)f(the)2042 4182 y(pre)n(vious)h(section)f
(in)g(both)h(systems.)p Black Black 2042 4308 a Fl(Apply)40
b(\(Cross)h(\(Shift)f(\(Var)g(`f)g(#0\)\)\))h(\(Var)f(`x)f(#1\))2042
4391 y(::)g(Lam)h(#1)g({`x^#1:a,)h(`f^#0:\(a)g(->)f(b\);)g(u})g(b)2042
4557 y(App)g(\(Csp\(Sh\(V)h(`f\)\)\))f(\(V)g(`x\))2042
4640 y(::)f(Exp)h(\(a,Rec)h({u:b,`f:c)g(->)f(d;)g(v}\))g({`x:c;)g(w})g
(e)f(d)2042 4806 y(App)h(\(Csp)g(\(V)g(`f\)\))g(\(V)f(`x\))2042
4889 y(::)g(Exp)h(\(a,Rec)h({`f:c)f(->)g(d;)g(v}\))g({`x:c;)g(w})g(e)f
(d)2042 5015 y Fu(Notice)24 b(ho)n(w)i(the)e(en)m(vironment)j(of)d(the)
h(tw)o(o)g(stages)g(is)f(no)n(w)h(completely)2042 5098
y(separate.)19 b(Both)g Fl(f)g Fu(and)h Fl(x)f Fu(could)g(li)n(v)o(e)g
(at)g(the)g(same)g(de)g(Bruijn)g(inde)o(x)h(since)2042
5181 y(the)25 b(tw)o(o)g(en)m(vironments)h(are)f(disjoint.)g(The)f
(third)h(term)g(illustrates)f(what)2042 5264 y(happens)e(when)g(we)f
(de)g(Bruijn)f(shift)h(neither)g(v)n(ariable.)g(If)g(we)g(le)n(v)o(el)f
(shift)2042 5347 y(the)c(last)g(e)o(xpression)h(by)g(wrapping)h(the)e
(whole)h(thing)f(inside)h(a)f(brack)o(et)h(we)2042 5430
y(obtain.)p Black Black eop end
%%Page: 9 9
TeXDict begin 9 8 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -758 -608
a
SDict begin H.S end
 -758 -608 a -758 -608 a
SDict begin H.R end
 -758 -608 a -758 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 -758
-608 a Black Black Black Black -150 66 a Fl(Br\(App)41
b(\(Csp)f(\(V)f(`f\)\))i(\(V)e(`x\)\))-150 149 y(::)h(Exp)g(a)f({`f:c)h
(->)g(d;)g(v})203 232 y(\(Rec)g({`x:c;)h(w},e\))203 315
y(\(Cd)f({`x:c;)h(w})e(e)h(d\))-150 457 y Fu(Notice)23
b(ho)n(w)h(the)f Fl(Br)h Fu(shifts)e(the)i(top)f(conte)o(xt)h(in)f(the)
g(past)h(stack)f(into)g(the)-150 540 y(current)16 b(en)m(vironment,)g
(and)g(mak)o(es)g(the)g(type)g(of)f(the)g(resulting)h(e)o(xpression)
-150 623 y(ha)o(v)o(e)j(code)h(type.)-50 706 y(The)27
b(last)f(staging)i(fragment)g(constructor)g(is)e Fl(Run)p
Fu(.)h(The)h(typing)f(rule)-150 789 y(for)f(run)g(is)f(intimately)g
(tied)h(with)f(the)h(declaration)g(for)g(code.)g(As)g(in)f(the)-150
872 y(le)n(v)o(el)31 b(inde)o(x)o(ed)g(e)o(xample,)g(code)h(is)e
(should)i(be)e(nothing)i(more)f(than)g(an)-150 955 y(e)o(xpression)20
b(at)f(le)n(v)o(el)g(0)g(typed)g(in)g(some)h(en)m(vironment.)p
Black Black -150 1079 a Fl(data)40 b(Cd)g(n)f(f)h(t)f(=)h(Cd)f
(\(forall)i(p)f(.)f(Exp)h(p)f(n)h(f)f(t\))-150 1204 y
Fu(A)25 b(term)g(is)g(at)g(le)n(v)o(el)h(0)f(if)g(it)g(has)h(no)g
(embedded)h(escapes)f(or)g(cross-stage)-150 1287 y(persistent)33
b(sub-terms.)g(W)-6 b(e)33 b(capture)g(this)g(by)h(requiring)f(that)g
(the)g(past)-150 1370 y(en)m(vironment)28 b(is)e(uni)n(v)o(ersally)i
(quanti\002able.)e(T)-6 b(o)27 b(better)f(understand)j(this)-150
1453 y(requirement,)21 b(consider)g(a)g(term)f(with)g(an)h(embedded)h
(escape)g(v)o(ersus)f(one)-150 1536 y(without.)p Black
Black -150 1660 a Fl(App)40 b(\(Esc)g(\(V)g(`f\)\))g(\(Const)g(3\))-150
1743 y(::)g(Exp)g(\(a,Rec)g({`f:Cd)h(u)e(b)h(\(Int)g(->)g(c\);)f(v}\))h
(u)g(b)f(c)-150 1910 y(App)h(\(V)g(`f\))g(\(Const)g(3\))-150
1993 y(::)g(Exp)g(a)f({`f:Int)i(->)f(b;)f(u})h(c)f(b)-150
2117 y Fu(Notice)19 b(the)g(rich)g(structure)g(of)g(the)g(past)g(stack)
p Black Black -150 2242 a Fl(\(a,Rec)41 b({`f:Cd)f(u)g(b)f(\(Int)h(->)g
(c\);)g(v}\))-150 2366 y Fu(when)18 b(the)g(escape)g(is)g(present,)g
(and)g(that)f(it)g(is)h(simply)f(a)h(uni)n(v)o(ersally)g(quan-)-150
2449 y(ti\002ed)28 b(v)n(ariable)h(\()p Fl(a)p Fu(\))f(when)h(there)g
(are)f(no)h(escapes.)g(It)f(seems)h(polymor)o(-)-150
2532 y(phism)d(is)g(as)g(useful)g(as)g(counting)h(le)n(v)o(els!)f
(Finally)g(we)f(can)i(e)o(xplain)f(the)-150 2615 y(type)19
b(for)g(the)g(run)g(construct.)p Black Black -150 2740
a Fl(data)40 b(Exp::)h(*0)e(~>)h(Row)g(HasType)h(~>)e(*0)h(~>)g(*0)f
(~>)h(*0)g(where)-72 2823 y(...)-72 2906 y(Run::)h(\(forall)g(x)e(.)h
(Exp)f(p)h(n)f(\(Rec)i(x,f\))f(\(Cd)g(x)f(f)g(t\)\))h(->)164
2989 y(Exp)g(p)f(n)h(f)f(t)-50 3113 y Fu(A)16 b(piece)i(of)f(code)h
(can)f(be)g(run)h(if)e(it)g(has)i(no)f(free)g(v)n(ariables.)g(W)-6
b(e)17 b(use)g(the)-150 3196 y(same)25 b(trick)f(for)h(testing)f(for)h
(the)f(lack)h(of)f(free)h(v)n(ariables,)g(as)f(we)h(did)f(for)-150
3279 y(testing)g(for)g(the)g(lack)g(of)g(escapes:)g(polymorphism.)h(A)f
(term)f(can)i(be)f(run)-150 3362 y(only)17 b(if)e(has)i(code)g(type)f
Fl(\(Cd)40 b(x)g(f)f(t\))p Fu(,)16 b(and)h(the)f(current)h(en)m
(vironment)h(\()p Fl(x)p Fu(\))-150 3445 y(is)h(uni)n(v)o(ersally)g
(quanti\002able.)-50 3528 y(Re\003ect)f(for)h(a)g(minute)h(on)f(what)g
(we)g(ha)o(v)o(e)g(just)g(done.)h(The)f(meta-le)n(v)o(el)-150
3611 y(types)28 b(of)g(the)g(constructors)g(for)g(the)f(object-le)n(v)o
(el)i(terms)e Fl(Exp)h Fu(speci\002es)-150 3694 y(a)k(complete)h(type)g
(system)g(for)f(object-le)n(v)o(el)h(terms)g(for)f(a)g(multi-stage)-150
3778 y(language)c(with)f(all)f(the)h(features)g(of)f(brack)o(et,)i
(escape,)f(run,)g(and)g(cross-)-150 3861 y(stage)k(persistence.)f(The)g
(correspondence)j(between)e(typing)g(rules)g(and)-150
3944 y(the)f(types)h(of)f(the)h(object-le)n(v)o(el)f(constructors)i(is)
d(one-to-)i(one.)g(This)f(is)-150 4027 y(illustrated)19
b(in)f(Figure)458 4028 y
SDict begin H.S end
 458 4028 a Black -1 x Fu(3)p
Black 495 3976 a
SDict begin H.R end
 495 3976 a 495 4027 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.3) cvn H.B /ANN pdfmark end
 495 4027 a Fu(.)-150
4109 y
SDict begin H.S end
 -150 4109 a -150 4109 a
SDict begin 10 H.A end
 -150 4109 a -150 4109
a
SDict begin [/View [/XYZ H.V]/Dest (subsection.5.1) cvn /DEST pdfmark
end
 -150 4109 a 67 x Fq(5.1)75 b(An)18 b(Ev)o(aluation)h(Function.)-150
4292 y Fu(The)c(last)g(step)h(is)f(to)h(sho)n(w)g(that)f(the)h(e)n(v)n
(aluation)g(of)g(a)f(well)g(typed)h(term)g(does)-150
4375 y(not)23 b(go)g(wrong.)h(There)e(are)h(se)n(v)o(eral)g(w)o(ays)h
(to)f(describe)g(what)g(e)n(v)n(aluation)-150 4458 y(means.)j(In)g
(this)g(section)h(we)f(de\002ne)g(an)g(interpreter)g(just)g(as)g(we)g
(did)g(for)-150 4541 y Fl(Lam)21 b Fu(in)f(Section)310
4542 y
SDict begin H.S end
 310 4542 a Black -1 x Fu(2.7)p Black 404 4490
a
SDict begin H.R end
 404 4490 a 404 4541 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (subsection.2.7) cvn H.B /ANN pdfmark end
 404 4541 a Fu(,)g(we)g(introduce)h(an)g(e)n(v)n
(aluation)h(function)f(with)f(type:)-150 4624 y Fl(Exp)40
b(past)g(now)g(future)h(t)e(->)23 b(Rec)40 b(now)g(->)f(t)p
Fu(.)23 b(Ev)o(ery)f(well)h(typed)-150 4707 y Fl(Exp)16
b Fu(term)g(with)g(type)g Fl(t)g Fu(under)h(an)f(en)m(vironment)h(with)
f(shape)h Fl(now)f Fu(is)f(gi)n(v)o(en)-150 4790 y(meaning)20
b(as)f(a)g(function)h(from)e(a)h(record)h(with)e(shape)i
Fl(now)g Fu(to)e Fl(t)p Fu(.)p Black Black -150 4932
a Fl(eval)40 b(::)g(Exp)g(past)g(now)g(future)g(t)g(->)g(Rec)f(now)h
(->)g(t)-150 5015 y(eval)g(\(Const)h(n\))e(env)h(=)g(n)-150
5098 y(eval)g(\(V)g(a\))79 b(\(RecCons)41 b(b)e(y)h(x\))f(=)h(y)-150
5181 y(eval)g(\(Sh)g(e\))g(\(RecCons)h(b)e(x)h(y\))f(=)h(eval)g(e)f(y)
-150 5264 y(eval)h(\(App)g(f)g(x\))f(env)h(=)g(\(eval)g(f)g(env\))g
(\(eval)g(x)g(env\))-150 5347 y(eval)g(\(Abs)g(a)g(e\))f(env)h(=)g(\\)f
(v)h(->)f(eval)i(e)e(\(RecCons)i(a)e(v)h(env\))-150 5430
y(eval)g(\(Pair)h(x)e(y\))h(env)g(=)f(\(eval)h(x)g(env,)g(eval)g(y)g
(env\))p Black Black 2042 66 a(eval)g(\(Br)g(e\))g(env)f(=)h(Cd)g(\(bd)
f(\(EnvZ)i(env\))f(e\))2042 149 y(eval)g(\(Run)g(e\))g(env)g(=)f(case)h
(eval)g(e)g(env)g(of)2866 232 y(Cd)f(x)h(->)f(eval)i(x)e(RecNil)2141
384 y Fu(As)27 b(al)o(w)o(ays,)h(once)g(the)f(type)h(system)f(is)g
(right,)g(the)g(e)n(v)n(al)h(function)f(is)2042 467 y(simplicity)18
b(itself.)g(Lets)h(consider)g(the)g(cases)h(one)f(at)g(a)g(time.)p
Black 2085 612 a Fn(\017)p Black 2150 619 a Fw(\(Const)d(n\))p
Fq(.)j Fu(Constants)g(e)n(v)n(aluate)h(to)f(themselv)o(es.)p
Black 2085 728 a Fn(\017)p Black 2150 735 a Fw(\(V)k(a\))p
Fq(.)j Fu(The)h(v)n(alue)g(of)g(e)n(v)o(ery)g(\(unshifted\))g(v)n
(ariable)g(is)g(stored)f(as)h(the)2150 818 y(\002rst)19
b(element)h(of)g(the)g(record)g(storing)g(the)g(en)m(vironment.)h
(There)f(is)g(no)2150 901 y(need)27 b(to)g(check)h(that)e(the)h(label)g
Fl(a)g Fu(and)g Fl(b)g Fu(match,)g(because)h(the)f(type)2150
984 y(system)19 b(ensures)h(that)e(the)o(y)i(do.)p Black
2085 1093 a Fn(\017)p Black 2150 1100 a Fw(\(Sh)29 b(e\))p
Fq(.)k Fu(A)g(shifted)g(e)o(xpression)h(ignores)g(the)f(\002rst)f
(element)i(of)f(the)2150 1183 y(record.)23 b(Simply)g(e)n(v)n(aluate)h
(the)f(unshifted)i(e)o(xpression)f(in)f(the)g(rest)g(of)2150
1266 y(the)c(record.)p Black 2085 1375 a Fn(\017)p Black
2150 1382 a Fw(\(A)n(pp)27 b(f)f(x\))p Fq(.)k Fu(Ev)n(aluate)h(the)f
(function)h(part)f(of)g(the)h(application.)f(This)2150
1465 y(must)j(be)h(a)f(function.)g(Apply)h(it)f(to)g(the)g(result)g(of)
g(e)n(v)n(aluating)i(the)2150 1548 y(ar)o(gument)19 b(part)g(of)g(the)g
(application.)p Black 2085 1658 a Fn(\017)p Black 2150
1665 a Fw(\(Abs)24 b(a)g(e\))p Fq(.)k Fu(The)g(result)f(of)h(an)f
(abstraction)i(must)e(be)h(a)g(function,)g(so)2150 1748
y(we)k(return)g(a)g(meta-le)n(v)o(el)h(lambda)g(abstraction.)f(The)g
(body)i(of)e(the)2150 1831 y(object-le)n(v)o(el)24 b(term)f(is)g(well)g
(typed)h(in)g(an)g(en)m(vironment)h(which)f(maps)2150
1914 y(its)15 b(formal)g(parameter)h(to)g(the)f(\002rst)g(element)h(of)
f(the)h(record.)g(So)f(simply)2150 1997 y(e)n(v)n(aluate)25
b(the)f(body)h(in)f(a)g(ne)n(w)g(record)h(with)e(the)h(meta-le)n(v)o
(el)g(lambda)2150 2080 y(bound)c(v)n(alue)g(as)f(an)g(additional)h
(element)f(at)f(the)h(front.)p Black 2085 2189 a Fn(\017)p
Black 2150 2196 a Fw(\(P)o(air)f(x)f(y\))p Fq(.)i Fu(Ev)n(aluate)g
(each)h(part)f(of)g(a)g(pair)m(,)g(and)h(b)o(uild)f(a)g(pair)g(with)g
(the)2150 2279 y(result.)p Black 2085 2388 a Fn(\017)p
Black 2150 2395 a Fw(\(Br)f(e\))p Fq(.)j Fu(Build)f(an)g(e)o(xpression)
h(that)f(is)g(polymorphic)i(in)e(the)g(past)g(with)2150
2478 y(the)j(function)i Fl(bd)p Fu(,)e(then)h(mak)o(e)h(code)f(out)g
(of)f(it)g(with)h(the)f(constructor)2150 2561 y(for)33
b(code)i Fl(Cd)p Fu(.)f(W)-6 b(e)33 b(discuss)h(b)o(uilding)g(code)h
(with)e Fl(bd)h Fu(in)g(the)g(ne)o(xt)2150 2644 y(section.)p
Black 2085 2753 a Fn(\017)p Black 2150 2760 a Fw(\(Run)14
b(e\))p Fq(.)j Fu(The)g(e)o(xpression)h Fl(e)e Fu(must)h(e)n(v)n
(aluate)h(to)e(code)i(whose)f(underly-)2150 2844 y(ing)g
Fl(Exp)h Fu(is)f(typable)h(in)f(an)o(y)h(en)m(vironment.)g(Thus,)f(e)n
(v)n(aluate)h Fl(e)p Fu(,)f(e)o(xtract)2150 2927 y(the)24
b(code)h Fl(x)p Fu(,)f(and)h(e)n(v)n(aluate)h(that)e(in)g(the)g(empty)h
(record.)g(An)o(y)f(record)2150 3010 y(will)18 b(do,)h
Fl(RecNil)h Fu(is)e(a)h(con)m(v)o(enient)i(one.)2042
3097 y
SDict begin H.S end
 2042 3097 a 2042 3097 a
SDict begin 10 H.A end
 2042 3097 a 2042 3097
a
SDict begin [/View [/XYZ H.V]/Dest (subsection.5.2) cvn /DEST pdfmark
end
 2042 3097 a 72 x Fq(5.2)75 b(Building)17 b(code.)2042
3286 y Fu(T)-6 b(o)26 b(e)n(v)n(aluate)h(a)f(code)g(template,)g(that)g
(is)g(an)g Fl(Exp)g Fu(whose)h(top-le)n(v)o(el)g(con-)2042
3369 y(structor)i(is)g Fl(Br)p Fu(,)g(we)g(must)g(w)o(alk)g(o)o(v)o(er)
h(the)f(term)g(remo)o(ving)h(embedded)2042 3452 y(escapes)18
b(and)g(cross-stage)g(persistent)f(terms.)g(Inside)h(a)f(brack)o(et)h
(these)g(tw)o(o)2042 3535 y(kinds)k(of)g(subterms)g(are)f(the)h(only)g
(ones)h(that)e(refer)g(to)h(v)n(alues)g(in)g(the)g(cur)o(-)2042
3618 y(rent)29 b(\(or)g(past\))g(en)m(vironments.)h(W)-6
b(e)28 b(must)h(embed)h(these)f(v)n(alues)h(in)f(the)2042
3701 y(code)22 b(produced)h(no)n(w)-5 b(,)22 b(because)g(when)g(the)f
(resulting)h(code)g(is)f(e)n(v)n(aluated,)2042 3784 y(the)f(v)n(alues)i
(in)e(the)h(current)f(en)m(vironment)i(will)e(no)h(longer)g(be)g
(accessible.)2042 3867 y(T)-6 b(o)20 b(understand)i(this,)e(recall)g
(ho)n(w)h(run)g(e)n(v)n(aluates)g(code)g(in)f(the)h(empty)g(en-)2042
3950 y(vironment.)j(If)e(we)h(don')o(t)h(capture)g(the)f(v)n(alues)h
(of)f(v)n(ariables)h(from)f(lo)n(wer)2042 4033 y(le)n(v)o(els)i(when)h
(the)f(code)h(is)e(b)o(uilt,)g(it)h(will)f(be)h(too)g(late)g(when)h
(the)f(code)g(is)2042 4116 y(run.)2141 4199 y(Escapes)e(are)g(remo)o(v)
o(ed)g(by)g(splicing)g(in)f(the)h(code)g(obtained)h(by)f(e)n(v)n(al-)
2042 4282 y(uating)i(the)h(term)f(inside)g(the)g(escape.)h(This)f(is)f
(ho)n(w)i(template)f(holes)h(are)2042 4365 y(spliced)f(in.)g
(Cross-stage)h(persistent)f(term)g(are)g(remo)o(v)o(ed)h(by)g(e)n(v)n
(aluating)2042 4448 y(them)c(in)f(the)h(current)g(en)m(vironment,)h
(and)f(lifting)g(the)f(v)n(alue)i(obtained)g(up)2042
4531 y(to)17 b(the)g(code)h(le)n(v)o(el.)g(If)e(all)h(the)g(escapes)i
(and)f(all)e(the)i(cross-stage)g(persistent)2042 4614
y(terms)g(are)f(remo)o(v)o(ed,)i(the)f(resulting)g(e)o(xpression)h
(will)e(be)i(polymorphic)g(in)2042 4697 y(the)25 b(past)g(stack.)g
(This)g(is)g(captured)h(by)f(the)h(type)f(of)g(the)g(b)o(uild)g
(function:)2042 4780 y Fl(\(bd)40 b(::)f(Env)h(a)g(z)f(->)h(Exp)g(a)f
(n)h(f)f(t)h(->)f(Exp)h(z)g(n)f(f)h(t\))p Fu(.)63 b(Note)2042
4863 y(ho)n(w)20 b(the)f(past)h(inde)o(x)g(\()p Fl(z)p
Fu(\))f(of)g(the)h Fl(Exp)f Fu(in)h(the)f(range)h(of)f
Fl(bd)h Fu(is)f(unrelated)h(to)2042 4946 y(the)f(type)g(of)g(the)g
(past)g(stack)g(\()p Fl(a)p Fu(\))g(of)g(the)g(input)g
Fl(Exp)p Fu(.)2141 5029 y(The)30 b Fl(bd)f Fu(function)h(w)o(alks)g(o)o
(v)o(er)g(an)f(e)o(xpression,)i(cop)o(ying)g(it)d(e)o(xcept)2042
5112 y(when)15 b(it)f(reaches)i(an)f(escape)h(or)f(cross-stage)g
(persistent)g(sub-term.)g(Notice)2042 5195 y(ho)n(w)k(only)h(the)f
(cases)g(for)g Fl(Esc)g Fu(and)h Fl(Csp)f Fu(do)h(an)o(ything)g
(interesting.)p Black Black 2042 5347 a Fl(data)40 b(Env::)g(*0)g(~>)g
(*0)f(~>)h(*0)g(where)2120 5430 y(EnvZ::)h(a)e(->)h(Env)g(\(b,a\))g(c)p
Black Black eop end
%%Page: 10 10
TeXDict begin 10 9 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -758 -608
a
SDict begin H.S end
 -758 -608 a -758 -608 a
SDict begin H.R end
 -758 -608 a -758 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 -758
-608 a Black Black Black Black Black 241 631 a
 currentpoint currentpoint translate 0.85 0.85 scale neg exch neg exch
translate
 241 631
a 19 w @beginspecial 54 @llx 611 @lly 532 @urx 693 @ury
4780 @rwi @setspecial
%%BeginDocument: rules.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - pictures.ppt)
%%Version: 1 4
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 16:11:59 04/14/05
%%DocumentData: Clean7Bit
%%BoundingBox: 54 611 532 693
%%HiResBoundingBox: 54.069733 611.476807 531.976379 693.453491
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0


%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Times-Roman
[/N14/Times-Roman 1 TZ
%%IncludeResource Times-Italic
[/N15/Times-Italic 1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1151 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-14, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:df1f61d2-ffa0-4dcf-85a3-a900fe371a21' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0.1 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:df1f61d2-ffa0-4dcf-85a3-a900fe371a21' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreateDate='2005-04-14T16:10:57-07:00' xap:CreatorTool='PScript5.dll Version 5.2.2' xap:ModifyDate='2005-04-14T16:10:57-07:00'></rdf:Description>
<rdf:Description rdf:about='uuid:df1f61d2-ffa0-4dcf-85a3-a900fe371a21' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:0bf12e75-4b7e-409c-b02e-6211ecff9ed3'/>
<rdf:Description rdf:about='uuid:df1f61d2-ffa0-4dcf-85a3-a900fe371a21' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Microsoft PowerPoint - pictures.ppt</rdf:li></rdf:Alt></dc:title></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
54 611 478 82 rectclip
/N12 [/DeviceRGB] /ColorSpace defineRes pop

%ADOBeginSubsetFont: ADKFBA+Symbol Initial
ct_CffDict begin
%ADOt1write: (1.0.21)
13 dict dup begin
/FontType 1 def
/FontName /ADKFBA+Symbol def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (Symbol) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 42996 def
/FontBBox {-180 -293 1090 1010} def
end
systemdict begin
dup /Private
9 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 0 673 688 487 500] def
/StdHW [92] def
/StdVW [85] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 1 /tau/Gamma 32 /space 40 /parenleft/parenright 59 /semicolon
/less 62 /greater 71 /Gamma 116 /tau
/N11/ADKFBA+Symbol -1 TZ
%ADOBeginSubsetFont: ADKFGL+EuclidMathOne-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (ADKFGL+EuclidMathOne)
%%Title: (ADKFGL+EuclidMathOne Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /ADKFGL+EuclidMathOne def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-113 -316 1395 927} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 153 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /ADKFGL+EuclidMathOne-Identity-H /Identity-H 0 [/ADKFGL+EuclidMathOne] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N16 (ADKFGL+EuclidMathOne-Identity-H)
/N16 (ADKFGL+EuclidMathOne-Identity-H) /Identity-H [ (ADKFGL+EuclidMathOne) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
54.069733 611.476807 477.906647 81.976685 re
W
n
q
n
35.519001 755.47998 539.999981 -720.0 re
eoclip
n
n
35.519001 35.48 539.999981 719.999981 re
1.0 1.0 1.0 setrgbcolor
f
Q
106.199097 656.720276 m
%ADOBeginSubsetFont: ADKFBA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/ADKFBA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C34D0DEABA8505943A200047BB952AC3AA58E
243E203E61F4EF5668073F17F46F9D70D95496792FA461B14302FD00501B0B88
C5BC866673616658058AFF955DC11AC6884732A305D90F3F683DA2E623D06354
B25E7B10> |-
/parenright <1C60D8A8C9B81F2C34D0DEAB9F181AFD2DF6519D962AC715A35
E17E8EA5F9534CF3413ACC02E55E492481BAF4253E1666EA0D1BEB87F13CF596
4EA98AD936E9BD32BC319EAD0821290D2DD48AAC227777E90E02831771ABBACE
A7368E27DDB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ADKFBA+Symbol findfont /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
pop
end
%ADOEndSubsetFont
/N11 [13.157806 0.0 0.0 15.048706 0.0 0.0] Tf
(\(\))
[25.199732 25.199732 ] pdfxs
140.999008 655.88031 m
/N11 [13.157806 0.0 0.0 18.671799 0.0 0.0] Tf
(\(\))
[18.960302 18.960302 ] pdfxs
169.919006 656.720276 m
/N11 [13.157806 0.0 0.0 15.048706 0.0 0.0] Tf
(\(\))
[14.640594 14.640594 ] pdfxs
62.159256 636.080994 m
(\(\)\(\))
[13.79981 15.24059 13.080078 13.79981 ] pdfxs
119.279099 635.360413 m
/N11 [13.157806 0.0 0.0 18.671799 0.0 0.0] Tf
(\(\))
[31.799686 31.799686 ] pdfxs
1 J
1 j
0.659 w
n
61.799004 650.23999 m
263.639008 650.23999 l
S
119.159103 657.080261 m
/N14 11.1474 Tf
(,;:)
[46.440071 42.720184 46.752197 ] pdfxs
q
n
266.039001 644.359985 39.480011 12.599976 re
W
n
266.039001 647.000305 m
(brackets)
[5.525766 3.719804 4.800073 4.920465 5.525766 4.901515 3.120156 4.288489 ] pdfxs
Q
81.599106 636.560303 m
(;  , : ;;)
[4.920461 28.080297 22.799774 54.239906 5.520189 5.639468 27.959908 12.959965 4.920461 ] pdfxs
154.799011 663.080261 m
/N15 5.503601 Tf
(f) show
133.079056 642.440125 m
(ff)
[93.480858 93.480858 ] pdfxs
112.079102 657.080261 m
/N15 11.1474 Tf
(PFe)
[63.600288 25.320118 61.738762 ] pdfxs
68.039063 636.56012 m
(PFeF)
[74.279495 31.679707 61.800072 74.279495 ] pdfxs
212.519012 657.080261 m
%ADOBeginSubsetFont: ADKFBA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/ADKFBA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/tau <1C60D8A8C9B76427AA93ECB1E9D0714A288528602C7E65A898A70D1CC9
52B1B1C14371083AF4BCE23C29FD474BDFD4C683F6BAF19CBDF5302BA15FD501
5C7F8D3677A8AD8676A725263B683729258C14435E00A320D46D7072BFBA40AD
A87082F37575B88FE6DEC9FAB25E5A6C9D5A168A467C2359270F376EB238BFF9
F43C6368C8E027AF13711BCDBEFF3EB30A362E90F7EAC1F5763CB84302C7B914
7010C01DD4F7428748889B4999950BEB2F8E0A56CDD3B3349429B9AB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ADKFBA+Symbol findfont /Encoding get
dup 1 /tau put
pop
end
%ADOEndSubsetFont
/N11 [11.1474 0.0 3.812393 11.1474 0.0 0.0] Tf
(\001) show
247.199112 636.56012 m
(\001) show
123.599106 657.080261 m
%ADOBeginSubsetFont: ADKFBA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/ADKFBA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Gamma <1C60D8A8C9B7C05465AA31B7F7197D4ED4340BBB8EF33BC85414001D
80F19014E90E35517432EBC8A3D28A15168E878098164BC3B44308A9CA09873D
D55054372442DB44EA9DBBA32F4DBEEE59DFB292B6BEE0EAA2785DF09AB747A0
AB6DC1EE726F> |-
/semicolon <1C60D8A8C9B854D088EEB7E01BCFA6DF2B08704BE64B4ADE835C
B4013D95898BBBA94D7E48A762FD1011D7BCE99F1479A5B072CCF299C261B44A
31D521909329C5CDB9BD46B73EA8CC622E238CDB54C4F5B4035808F3E3EF8A78
35EE003FC3768554A3C1230607EC623EF788B2014A8C161064843E4CC2457A8A
E0F46185179A3D910213FCB84429F130DD00097951F8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ADKFBA+Symbol findfont /Encoding get
dup 2 /Gamma put
dup 59 /semicolon put
pop
end
%ADOEndSubsetFont
/N11 11.1474 Tf
(\002;\002)
[13.319993 9.479747 13.319993 ] pdfxs
96.478592 636.56012 m
%ADOBeginSubsetFont: ADKFBA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/ADKFBA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/less <1C60D8A8C9B79676A3B7499F02B739146663B725DA64ACD106571A49A
78D09A1144530645F7C04257E9A31041E> |-
/greater <1C60D8A8C9B79676A3B7499F02B73949D2D08520E41FBE54FFC4FC
26781626B57DAFEAB59B287FE68E933AA99F21> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ADKFBA+Symbol findfont /Encoding get
dup 60 /less put
dup 62 /greater put
pop
end
%ADOEndSubsetFont
(\002;\002<><\002>)
[13.319993 14.760271 40.32011 17.279541 26.879679 9.119642 38.759476 12.718023 ] pdfxs
191.519089 657.080261 m
%ADOBeginSubsetFont: ADKFGL+EuclidMathOne-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
/ADKFGL+EuclidMathOne 1 GetGlyphDirectory
65 <001C60D8A8C9B7D8BE19375C1A4245A638EA86DD157DF1903A779852F059
E0065B3DD078AA1667E1D796B2C6A0CF47C474155A403B77CF40B12FABDABC9A
5FE0DBFC16BD92147FA45413ACACCFE38B389B9A1F7713CE2C5BDEA4A86E1B44
A67B80BCE4706CBF19C360D8C6B73AA49468DCBF2A> |
!
end
end end
%ADOEndSubsetFont
/N16 11.1474 Tf
(\000A) show
158.159378 636.56012 m
(\000A) show
320.039001 655.760254 m
/N11 [12.588196 0.0 0.0 14.324005 0.0 0.0] Tf
(\(\))
[13.199888 13.199888 ] pdfxs
346.07901 655.040283 m
/N11 [12.588196 0.0 0.0 17.772202 0.0 0.0] Tf
(\(\))
[17.759333 17.759333 ] pdfxs
378.359009 655.760254 m
/N11 [12.588196 0.0 0.0 14.324005 0.0 0.0] Tf
(\(\))
[24.95978 24.95978 ] pdfxs
340.439026 635.360413 m
/N11 [12.588196 0.0 0.0 17.772202 0.0 0.0] Tf
(\(\))
[29.399639 29.399639 ] pdfxs
384.359009 636.080261 m
/N11 [12.588196 0.0 0.0 14.324005 0.0 0.0] Tf
(\(\)\(\))
[12.599431 14.279955 14.039521 12.599431 ] pdfxs
0.622 w
n
319.679016 649.640015 m
485.879028 649.640015 l
S
338.639008 656.1203 m
/N14 10.610199 Tf
(; ; , : ;)
[2.999502 27.600311 4.680158 16.199652 32.52026 5.279636 5.399529 33.360588 2.999502 ] pdfxs
q
n
488.279022 643.880005 32.639984 12.0 re
W
n
488.279083 646.400269 m
( escape)
[2.639817 4.681222 4.097739 4.681222 4.681222 5.275391 4.681222 ] pdfxs
Q
352.919006 636.560303 m
(,;  ~:)
[22.319614 4.680158 26.879879 31.799829 15.83997 22.616699 ] pdfxs
358.919006 661.760254 m
/N15 5.238693 Tf
(p) show
364.918884 642.2005 m
(p) show
325.679016 656.1203 m
/N15 10.610199 Tf
(PFeF)
[69.239952 22.440483 41.880577 69.239952 ] pdfxs
346.079254 636.560425 m
(PFe)
[70.799652 30.719629 69.027832 ] pdfxs
470.159088 656.1203 m
/N11 [10.610199 0.0 3.628601 10.610199 0.0 0.0] Tf
(\001) show
458.638947 636.560425 m
(\001) show
351.119019 656.1203 m
/N11 10.610199 Tf
(\002\002<\002;>)
[32.40033 55.680172 8.759736 6.479614 24.960493 31.827372 ] pdfxs
357.11908 636.560425 m
(\002\002;)
[32.40033 12.720533 28.952049 ] pdfxs
410.039581 656.1203 m
/N16 10.610199 Tf
(\000A\000\000)
[6.479513 10.606961 ] pdfxs
431.999512 636.560425 m
(\000A) show
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font Times-Roman
%%+ font Times-Italic
%%EOF

%%EndDocument
 @endspecial 241 631 a
 currentpoint currentpoint translate 1 0.85 div 1 0.85 div scale neg
exch neg exch translate
 241 631 a -150 485 4185 3 v 594
570 a Fq(Figur)o(e)18 b(3.)917 570 y
SDict begin H.S end
 917 570 a 917 570
a
SDict begin H.R end
 917 570 a 917 570 a
SDict begin [/View [/XYZ H.V]/Dest (figure.3) cvn /DEST pdfmark end
 917 570 a Fu(Compare)h(the)g(type)h(inference)f
(rules)g(with)g(the)g(type)g(of)g(the)g(constructors)h
Fl(Br)f Fu(and)h Fl(Esc)p Fu(.)p -150 590 4185 4 v Black
-72 822 a Fl(EnvS::)80 b(Env)40 b(a)g(b)f(->)h(Env)g(\(a,c\))g(\(b,c\))
-150 988 y(bd)g(::)f(Env)h(a)g(z)f(->)h(Exp)g(a)f(n)h(f)f(t)h(->)f(Exp)
h(z)g(n)f(f)h(t)-150 1071 y(bd)g(env)g(\(Const)g(n\))g(=)f(Const)i(n)
-150 1154 y(bd)f(env)g(\(V)f(z\))h(=)f(V)h(z)-150 1237
y(bd)g(env)g(\(App)g(x)f(y\))h(=)f(App)h(\(bd)g(env)g(x\))g(\(bd)g(env)
g(y\))-150 1320 y(bd)g(env)g(\(Abs)g(a)f(e\))h(=)f(Abs)h(a)g(\(bd)g
(env)g(e\))-150 1403 y(bd)g(env)g(\(Pair)g(x)f(y\))h(=)g(Pair)g(\(bd)g
(env)g(x\))f(\(bd)h(env)g(y\))-150 1486 y(bd)g(env)g(\(Br)g(e\))f(=)h
(Br\(bd)g(\(EnvS)g(env\))h(e\))-150 1569 y(bd)f(env)g(\(Run)g(e\))f(=)h
(Run\(bd)g(env)g(e\))-150 1652 y(bd)g(\(EnvZ)g(env\))g(\(Esc)g(e\))g(=)
-72 1735 y(case)h(eval)f(e)f(env)h(of)7 1818 y(Cd)g(x)f(->)h(x)-150
1901 y(bd)g(\(EnvS)g(r\))g(\(Esc)g(e\))g(=)-72 1984 y(case)h(bd)e(r)h
(e)f(of)7 2067 y(Br)h(x)f(->)h(x)7 2150 y(y)f(->)h(Esc)g(y)-150
2233 y(bd)g(\(EnvZ)g(env\))g(\(Csp)g(e\))g(=)f(Const\(eval)j(e)d(env\))
-150 2316 y(bd)h(\(EnvS)g(r\))g(\(Csp)g(e\))g(=)f(Csp\(bd)i(r)e(e\))-50
2524 y Fu(Not)18 b(all)g(escapes)h(or)f(cross-stage)h(persistent)g(can)
f(be)h(remo)o(v)o(ed.)g(Those)-150 2607 y(embedded)28
b(inside)f(more)f(than)h(the)g(original)f(surrounding)i(brack)o(ets)g
(re-)-150 2690 y(fer)36 b(to)g(v)n(alues)h(a)o(v)n(ailable)f(when)h
(the)f(code)h(being)g(b)o(uilt)f(will)f(be)h(run.)-150
2773 y(F)o(or)e(e)o(xample,)g(when)h(e)n(v)n(aluating)g(a)f(term)g(lik)
o(e)h Fl(<f)k(~x)h(<g)g(~y>>)34 b Fu(we)-150 2856 y(reb)o(uild)28
b(the)g(term)f Fl(\(f)40 b(~x)g(<g)f(~y>\))p Fu(.)29
b(Only)f(the)g(\002rst)e(le)n(v)o(el)i(escape)h Fl(~x)-150
2939 y Fu(should)24 b(be)g(e)n(v)n(aluated)h(and)f(then)g(spliced)g(in)
f(the)g(reb)o(uilding)h(process.)g(In)-150 3022 y(order)33
b(to)g(kno)n(w)g(which)g(escapes)h(\(and)f(cross-stage)h(persistent)f
(terms\))-150 3105 y(to)e(process,)g(brack)o(ets)h(must)f(be)g(counted)
h(as)f Fl(bd)g Fu(cra)o(wls)g(o)o(v)o(er)g(a)g(term.)-150
3188 y(Counting)k(brack)o(ets)f(is)f(the)h(role)g(of)f(the)h
Fl(Env)g Fu(parameter)g(to)g Fl(bd)p Fu(.)f(The)-150
3271 y(number)k(of)f(brack)o(ets)i(inside)e(the)g(original)h(pair)f
(\(that)g(w)o(as)g(remo)o(v)o(ed)-150 3354 y(in)g(the)f
Fl(Br)h Fu(case)g(of)g Fl(eval)p Fu(\))g(can)g(be)g(determined)h(by)f
(the)g(number)g(of)-150 3437 y Fl(EnvS)24 b Fu(constructors)g(wrapped)g
(around)g(the)f(current)h(en)m(vironment.)g(Thus)-150
3520 y Fl(\(EnvS)40 b(\(EnvS)h(\(EnvZ)f(env\)\)\))24
b Fu(means)g(the)f Fl(bd)g Fu(is)g(processing)h(a)f(sub-)-150
3603 y(term)e(inside)g(of)g(tw)o(o)g(additional)g(sets)g(of)g(brack)o
(ets.,)h(while)e Fl(\(EnvZ)41 b(env\))-150 3686 y Fu(means)20
b(zero)f(additional)g(sets)g(of)g(brack)o(ets.)-50 3769
y(The)35 b(only)i(interesting)f(cases)g(inside)g Fl(bd)g
Fu(are)g(the)g Fl(\(Br)k(e\))p Fu(,)c Fl(\(Esc)-150 3852
y(e\))p Fu(,)28 b(and)g Fl(\(Csp)40 b(e\))28 b Fu(cases.)f(F)o(or)g
(the)h Fl(\(Br)40 b(e\))28 b Fu(case)g(simply)g(reb)o(uild)f(the)-150
3935 y(subterm,)e(b)o(ut)g(wrap)f(an)i(e)o(xtra)e Fl(EnvS)i
Fu(term)e(around)i(the)f(en)m(vironment)h(to)-150 4018
y(record)20 b(the)f(f)o(act.)g(F)o(or)f(the)h Fl(\(Esc)40
b(e\))20 b Fu(case,)f(if)f(the)h(en)m(vironment)i(is)d
Fl(\(EnvZ)-150 4101 y(env\))e Fu(then)f(the)g(subterm)h
Fl(e)f Fu(should)h(be)f(e)n(v)n(aluated,)h(and)g(the)f(resulting)g
(code)-150 4184 y(term)29 b(spliced)h(in.)e(If)h(the)g(en)m(vironment)i
(is)e Fl(\(EnvS)40 b(env\))30 b Fu(then)g(at)f(least)-150
4267 y(one)g(e)o(xtra)g(pair)f(of)h(brack)o(ets)h(surrounds)g(this)e
(term.)g(Simply)g(reb)o(uild)h(it)-150 4350 y(\(remembering)e(to)f
(count)h(do)n(wn)g(by)f(one)h(by)f(remo)o(ving)h(the)f
Fl(EnvS)p Fu(\))h(and)-150 4433 y(wrap)f(an)h Fl(Esc)g
Fu(around)g(the)g(result.)e(An)i(optimization)f(is)g(possible)h(here.)
-150 4516 y(Consider)17 b(a)g(subterm)g(inside)f(a)h(brack)o(eted)h
(term)e(lik)o(e)h Fl(~<e>)p Fu(,)f(this)h(could)g(be)-150
4599 y(replaced)h(by)g Fl(e)p Fu(.)f(W)-6 b(e)17 b(recognize)i(this)e
(by)h(comparing)h(the)e(reb)o(uilt)g(subterm.)-150 4682
y(If)g(it)h(is)f(itself)g(a)h(brack)o(eted)h(term,)f(then)g(we)g(can)g
(apply)h(the)f(rule,)g(and)g(don')o(t)-150 4765 y(need)h(to)f(wrap)h
(the)f(e)o(xtra)h(escape)g(around)g(the)g(returned)g(result.)f(The)g
(cases)-150 4849 y(for)e Fl(Csp)h Fu(are)f(almost)g(identical)h(e)o
(xcept)g(we)f(use)h Fl(Const)g Fu(to)f(lift)f(a)h(v)n(alue)h(into)-150
4932 y(a)i(piece)g(of)g(code)h(when)f(the)g(en)m(vironment)i(count)e
(is)g(zero.)-150 5081 y
SDict begin H.S end
 -150 5081 a -150 5081 a
SDict begin 10 H.A end
 -150
5081 a -150 5081 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.5.3) cvn /DEST pdfmark
end
 -150 5081 a 66 x Fq(5.3)75 b(W)-5
b(ell-typed)18 b(MetaML)g(pr)o(ograms)h(do)g(not)f(go)i(wr)o(ong)-150
5264 y Fu(In)31 b(Section)199 5265 y
SDict begin H.S end
 199 5265 a Black
-1 x Fu(2.7)p Black 292 5213 a
SDict begin H.R end
 292 5213 a 292 5264 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (subsection.2.7) cvn H.B /ANN pdfmark end

292 5264 a 31 w Fu(we)g(sho)n(wed)i(that)e(a)h(denotational)g
(semantics)g(for)f(the)-150 5347 y(lambda)16 b(calculus)g(w)o(as)f
(sound)h(by)g(sho)n(wing)g(that)f(it)g(w)o(as)g(well-typed,)g(total,)
-150 5430 y(and)20 b(compositional.)p Black Black 2141
822 a(Sho)n(wing)15 b(that)g(well-typed)f(programs)i(do)f(not)f(go)h
(wrong)h(for)e(MetaML)2042 905 y(is)24 b(more)g(complicated.)h(First,)e
(our)i(e)n(v)n(aluator)g(is)f(not)g(a)h(denotational)g(se-)2042
988 y(mantics,)g(because)h(it)f(is)g(not)g(compositional.)h(The)f
(problematic)h(case)f(is)2042 1071 y(the)k(e)n(v)n(aluation)h(of)f(a)g
Fl(Run)h Fu(term,)e(where)i(the)f Fl(eval)g Fu(function)h(is)f(called)
2042 1154 y(twice.)p Black Black 2042 1280 a Fl(eval)40
b(\(Run)g(e\))g(env)g(=)f(case)h(eval)g(e)g(env)g(of)2866
1363 y(Cd)f(x)h(->)f(eval)i(x)e(RecNil)2042 1489 y Fu(The)24
b(second)i(call)f(to)f Fl(eval)i Fu(is)e(on)h(a)g(term)f(that)g(is)h
(not)g(a)f(subterm)h(of)g(the)2042 1572 y(original)19
b(term.)g(Note)h(if)f(e)n(v)n(aluating)h Fl(e)g Fu(from)f(a)h(term)f
Fl(\(Run)40 b(e\))20 b Fu(causes)g(an)2042 1655 y(in\002nite)c
(sequence)j(of)e Fl(Run)h Fu(subterms,)f(the)h(e)n(v)n(aluator)g(w)o
(ould)g(not)f(be)h(total.)2141 1738 y(Can)31 b(we)e(ar)o(gue)i(the)f
(non-compositional)i(e)n(v)n(aluator)f(is)e(sound?)j(I.e.)2042
1821 y(that)c(e)n(v)o(ery)g(well-typed)h(term)f(is)f(mapped)j(to)e(a)f
(meta-le)n(v)o(el)i(v)n(alue)f(with)2042 1904 y(that)i(type.)h(T)-6
b(o)31 b(sho)n(w)h(this)e(we)h(must)g(answer)g(the)g(question:)h
Fr(What')m(s)f(a)2042 1987 y(well-typed)d(term)g(in)h(MetaML?)f
Fu(In)h(MetaML)g(only)g(le)n(v)o(el)f(0)g(terms)h(can)2042
2070 y(be)24 b(e)n(v)n(aluated)h(i.e.)e(As)g(discussed)i(in)f(Section)
3302 2070 y
SDict begin H.S end
 3302 2070 a Black Fu(4)p Black 3339 2019
a
SDict begin H.R end
 3339 2019 a 3339 2070 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (section.4) cvn H.B /ANN pdfmark end
 3339 2070 a Fu(,)g(le)n(v)o(el)f(0)h(terms)g
(ha)o(v)o(e)g(no)2042 2153 y(escapes)30 b(at)f(le)n(v)o(el)g(0,)f(and)i
(a)f(term)g(is)f(at)h(le)n(v)o(el)g(0,)g(if)g(and)g(only)h(if,)e(its)g
(is)2042 2236 y(polymorphic)e(in)e(its)f(past.)i(Thus)f(we)g(need)h(ar)
o(gue)g(soundness)h(for)e(terms)2042 2319 y(polymorphic)c(in)f(their)g
(past.)2141 2402 y(Sho)n(wing)i Fr(totality)e Fu(is)h(problematic)g
(for)g(tw)o(o)g(reasons.)g(The)g(\002rst)f(is)g(the)2042
2485 y(possibility)30 b(of)g(e)n(v)n(aluation)h(leading)g(to)f(an)g
(in\002nite)g(sequence)i(of)e Fl(Run)p Fu(s)2042 2568
y(inside)24 b Fl(Run)p Fu(s.)g(W)-6 b(e)24 b(are)g(currently)g(w)o
(orking)h(on)f(a)g(solution)h(in)f(which)g(the)2042 2651
y(nesting)c(le)n(v)o(el)g(of)g Fl(Run)g Fu(is)g(encoded)i(as)e(an)g
(additional)g(type)h(inde)o(x)f(to)g Fl(Exp)p Fu(.)2042
2734 y(W)-6 b(e)18 b(hope)i(to)f(report)g(on)g(this)g(in)g(the)g
(\002nal)f(paper)l(.)2141 2817 y(The)33 b(second)h(cause)f(of)g
(non-totality)g(is)f(non-e)o(xhausti)n(v)o(eness.)j(The)2042
2900 y(function)28 b Fl(eval)g Fu(is)e(not)i(de\002ned)g(on)f(terms)g
(b)o(uilt)g(with)g(the)g Fl(Esc)g Fu(or)h Fl(Csp)2042
2983 y Fu(constructors.)19 b(F)o(ortunately)-5 b(,)19
b(code)g(polymorphic)i(in)d(its)g(past)h(cannot)h(con-)2042
3066 y(tain)28 b(either)h Fl(Esc)g Fu(or)g Fl(Csp)g Fu(at)f(le)n(v)o
(el)h(0.)f(This)g(leads)h(us)g(to)g(the)g(follo)n(wing)2042
3149 y(strate)o(gy)-5 b(,)19 b(\002rst)g(de\002ne)h(a)f(v)o(ersion)i
(of)e Fl(eval)p Fu(,)h(called)g Fl(eval0)p Fu(,)g(that)f(can)h(only)
2042 3232 y(be)f(applied)h(to)e(terms)h(polymorphic)i(in)e(their)f
(past.)p Black Black 2042 3376 a Fl(eval0)40 b(::)g(\(forall)h(p)e(.)h
(Exp)f(p)h(now)g(future)g(t\))g(->)2395 3459 y(Rec)g(now)g(->)f(t)2042
3542 y(eval0)h(exp)g(env)g(=)f(eval)i(exp)e(env)2120
3625 y(where)i(eval::Exp)g(past)f(now)g(future)h(t)e(->)h(Rec)g(now)f
(->)h(t)2356 3708 y(eval)g(\(Const)g(n\))g(env)g(=)f(n)2356
3791 y(...)2356 3874 y(eval)h(\(Run)g(e\))g(env)f(=)2473
3957 y(case)h(eval)h(e)e(env)h(of)2552 4040 y(Cd)f(x)h(->)g(eval0)g(x)f
(RecNil)2356 4206 y(bd::Env)h(a)g(z)f(->)h(Exp)g(a)f(n)h(f)f(t)h(->)f
(Exp)h(z)g(n)f(f)h(t)2356 4289 y(bd)f(env)h(\(Const)h(n\))e(=)h(Const)g
(n)2356 4373 y(...)2042 4516 y Fu(By)22 b(de\002ning)i
Fl(eval)f Fu(and)h Fl(bd)f Fu(as)f(local)h(functions)h(of)f
Fl(eval0)g Fu(It)f(is)h(impos-)2042 4599 y(sible)i(to)h(apply)h
Fl(eval)f Fu(to)g(terms)f(not)i(polymorphic)g(in)f(their)f(past,)h
(since)2042 4682 y(all)f(access)h(to)g Fl(eval)g Fu(is)f(through)i
Fl(eval0)f Fu(which)g(requires)g(polymorphic)2042 4765
y(terms.)18 b(All)g(recursi)n(v)o(e)h(calls)f(to)g Fl(eval)i
Fu(and)f Fl(Bd)g Fu(\(e)o(xcept)g(the)f(second)i(one)f(in)2042
4848 y(the)h Fl(Run)h Fu(case)f(in)h Fl(eval)p Fu(\))f(are)h(applied)g
(to)f(strict)f(subterms)i(of)g(the)f(original)2042 4932
y(term,)25 b(so)h(if)f(the)g(original)h(terms)f(w)o(as)h(polymorphic,)h
(so)f(must)g(all)f(these)2042 5015 y(sub-terms)19 b(be)g(polymorphic.)h
(The)e(problematic)h(second)h(call)e(to)h Fl(eval)g Fu(in)2042
5098 y(the)g Fl(Run)h Fu(case)f(which)h(is)f(applied)h(to)f(the)g
(return)h(result)f(of)g(applying)h Fl(eval)2042 5181
y Fu(to)g(a)g(subterm,)g(can)h(be)g(replaced)g(with)f
Fl(eval0)p Fu(,)g(because)i(e)o(xpressions)f(in-)2042
5264 y(side)e(the)g Fl(Cd)h Fu(constructor)g(must)f(also)g(be)g(le)n(v)
o(el)h(0)f(terms.)f(Thus)i(both)f Fl(eval)2042 5347 y
Fu(and)i Fl(eval0)h Fu(are)f(total,)f(in)g(that)h(the)o(y)g(will)f(ne)n
(v)o(er)i(be)f(called)g(on)g(a)g(term)f(for)2042 5430
y(which)25 b(the)o(y)f(are)h(not)f(de\002ned.)h(While)f(not)g(a)h
(complete)g(proof,)g(we)f(ha)o(v)o(e)p Black Black eop
end
%%Page: 11 11
TeXDict begin 11 10 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -758
-608 a
SDict begin H.S end
 -758 -608 a -758 -608 a
SDict begin H.R end
 -758 -608 a -758 -608
a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 -758 -608 a Black Black -150 66 a Fu(made)24 b(subtantial)g
(progress.)h(In)e(the)h(ne)o(xt)g(section)g(we)g(demonstrate)g(that)
-150 149 y(the)19 b(type)h(system)f(distinguishes)h(the)g(subtle)f
(staging)h(errors)f(discussed)h(in)-150 232 y(Section)93
233 y
SDict begin H.S end
 93 233 a Black -1 x Fu(3)p Black 130 182 a
SDict begin H.R end
 130
182 a 130 232 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (section.3) cvn H.B /ANN pdfmark end
 130 232 a Fu(.)-150 332 y
SDict begin H.S end
 -150 332 a
-150 332 a
SDict begin 10 H.A end
 -150 332 a -150 332 a
SDict begin [/View [/XYZ H.V]/Dest (section.6) cvn /DEST pdfmark end
 -150 332 a 107 x Fx(6.)91
b(Ev)o(aluating)22 b(the)h(type)f(system.)-150 555 y
Fu(Section)103 556 y
SDict begin H.S end
 103 556 a Black -1 x Fu(3)p Black
140 504 a
SDict begin H.R end
 140 504 a 140 555 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (section.3) cvn H.B /ANN pdfmark end
 140 555 a 29 w Fu(introduced)30
b(three)f(programs)g(that)g(highlight)g(subtle)h(typing)-150
638 y(issues)21 b(for)f(multi-stage)h(programs.)g(W)-6
b(e)20 b(no)n(w)h(e)n(v)n(aluate)g(the)g(no)o(v)o(el)g(multi-)-150
721 y(stage)i(type)h(system)f(discussed)h(in)f(the)g(pre)n(vious)i
(section)e(based)h(on)g(ho)n(w)-150 804 y(it)18 b(performs)i(on)f
(these)g(issues.)p Black -106 948 a Fn(\017)p Black -42
955 a Fq(Corr)o(ect)30 b(use)f(of)h(v)o(ariables.)g Fu(The)g(follo)n
(wing)g(program)g(e)o(xhibits)g(a)-42 1038 y(le)n(v)o(el-mismatch)19
b(error)m(,)g(and)g(is)g(incorrect.)p Black Black -42
1193 a Fl(<fn)40 b(x)f(=>)h(~\(id)g(x\)>;)-42 1347 y
Fu(This)19 b(program)g(mak)o(es)h(use)g(of)f(the)g(v)n(ariable)g(x)g
(at)g(a)g(stage)g(prior)g(to)g(the)-42 1430 y(stage)i(in)f(which)h(it)f
(is)g(bound.)h(What)f(about)i(the)e Fs(\012)p Fu(me)o(ga)h(encoding)h
(of)-42 1513 y(this)d(program?)p Black Black -42 1668
a Fl(Br)40 b(\(Abs)g(`x)f(\(Esc)i(\(App)f(\(Abs)g(`y)g(\(V)f(`y\)\))h
(\(V)g(`x\)\)\)\))-42 1822 y Fu(The)19 b(interpreter)g(gi)n(v)o(es)g
(this)g(term)f(the)h(follo)n(wing)h(type:)p Black Black
-42 1977 a Fl(Exp)40 b(a)f({`x:Cd)i({`x:b;)f(u})g(c)g(d;)f(v})193
2060 y(\(Rec)h(u,c\))193 2143 y(\(Cd)g(u)g(c)f(\(b)h(->)f(d\)\)\))-42
2297 y Fu(The)20 b(v)n(ariable)g Fl(`x)h Fu(sho)n(ws)f(up)h(in)f(tw)o
(o)g(dif)n(ferent)g(en)m(vironments)h(at)f(tw)o(o)-42
2380 y(dif)n(ferent)k(stages.)g(Each)h(en)m(vironment)g(in)f(the)g
(sliding)h(band)g(of)f(type)-42 2463 y(conte)o(xts)k(is)g(a)f(separate)
h(name)h(space,)f(so)g(the)f(tw)o(o)h(occurrences)h(of)-42
2546 y Fl(`x)i Fu(in)f(the)g Fs(\012)p Fu(me)o(ga)h(encoding)i(aren')o
(t)d(the)g(same)h(v)n(ariable,)g(as)f(the)o(y)-42 2629
y(are)36 b(in)f(the)h(MetaML)g(program.)g(So)g(while)f(this)h(is)f(a)g
(\223type)i(cor)o(-)-42 2712 y(rect\224)25 b(program)h(in)f(the)g
Fs(\012)p Fu(me)o(ga)h(encoding,)g(it)f(isn')o(t)f(an)h(encoding)i(of)
-42 2796 y Fl(<fn)40 b(x)f(=>)h(~\(id)g(x\)>)p Fu(.)-42
2903 y(This)22 b(brings)h(up)g(an)f(important)h(point.)f(The)g
(cross-stage)i(persistence)-42 2986 y(construct)i(does)f(not)g(appear)h
(in)f(MetaML,)g(so)g(there)g(must)h(be)f(some)-42 3069
y(syntactic)h(sugar)g(in)g(the)g(parsing)g(stage)g(which)g(translates)g
(MetaML)-42 3153 y(syntax)35 b(into)f(the)g Fl(Exp)h
Fu(data-structures.)f(This)g(preprocessing)i(step)-42
3236 y(counts)17 b(brack)o(ets,)h(and)f(assigns)h(to)e(e)n(v)o(ery)i(v)
n(ariable)f(a)g(static)f(le)n(v)o(el)g(at)h(its)-42 3319
y(point)e(of)g(de\002nition.)g(At)g(each)g(point)h(of)f(use,)g(a)g
(number)h(of)f(cross-stage)-42 3402 y(persistent)j(annotations)g(\()p
Fl(Csp)p Fu(\))g(are)g(inserted.)f(The)g(correct)h(number)h(is)-42
3485 y(the)j(dif)n(ference)g(between)g(the)g(le)n(v)o(el)f(at)g(which)h
(a)g(v)n(ariable)g(is)f(de\002ned,)-42 3568 y(and)g(the)g(le)n(v)o(el)g
(at)f(which)h(it)f(is)g(used.)h(If)f(this)h(number)g(is)f(ne)o(gati)n
(v)o(e,)h(the)-42 3651 y(program)e(is)g(ill-typed.)f(So)g(this)g(kind)h
(of)g(error)g(is)f(actually)h(caught)g(be-)-42 3734 y(fore)g(type)g
(checking)i(in)d(the)h(syntactic)h(sugar)f(pre-processing)h(phase.)p
Black -106 3903 a Fn(\017)p Black -42 3910 a Fq(Running)31
b(code)i(with)f(fr)o(ee)h(v)o(ariables.)h Fu(The)f(follo)n(wing)g
(program)-42 3993 y(should)e(be)e(rejected)h(because)h(the)f
Fl(run)g Fu(will)e(force)i(the)g(e)n(v)n(aluation)-42
4076 y(of)19 b(the)g(not-yet-bound)i(v)n(ariable)e Fl(x)p
Fu(.)p Black Black -42 4230 a Fl(val)40 b(bad)g(=)f(<fn)h(x)g(=>)f
(~\(run)i(<x>\))f(+)f(4>;)-42 4385 y Fu(Ho)n(w)19 b(does)h(this)e
(program)i(hold)g(up)f(in)g(our)g Fs(\012)p Fu(me)o(ga)h(encoding?)p
Black Black -42 4539 a Fl(|-)40 b(Br)f(\(Abs)h(`x)g(\(Esc)g(\(Run)g
(\(Br)g(\(V)g(`x\)\)\)\)\))-42 4622 y(Error:)h(Br)e(\(V)h(`x\))g(isn't)
g(polymorphic)i(enough)-42 4706 y(Expected)f(type:)f(forall)h(v.)546
4789 y(Exp)f(a)g(u)f(\(Rec)h(v,b\))860 4872 y(\(Cd)g(v)g(b)f(c\))76
4955 y(Found)h(type:)g(Exp)g(a)g(u)f(\(Rec)h({`x:c;)h(w},b\))860
5038 y(\(Cd)f({`x:c;)h(w})e(b)h(c\)\))-42 5192 y Fu(The)25
b(program)i(is)e(rejected)g(because)i(the)e(term)g Fl(\(Br)40
b(\(V)g(`x\)\))26 b Fu(isn')o(t)-42 5275 y(polymorphic)20
b(enough.)h(The)e(term)f(has)i(the)f(type)p Black Black
-42 5430 a Fl(Exp)40 b(a)f(u)h(\(Rec)g({`x:b;)g(v},c\))h(\(Cd)f({`x:b;)
g(v})g(c)f(b\))p Black Black 2150 66 a Fu(See)24 b(ho)n(w)g(the)h(v)n
(ariable)f Fl(x)h Fu(sho)n(ws)f(up)h(in)f(the)g(current)h(conte)o(xt)g
(of)f(the)2150 149 y(code)35 b(type.)g(Run)g(can)g(be)f(applied)i(only)
f(to)f(code)i(whose)f(current)2150 232 y(conte)o(xt)19
b(is)g(completely)g(polymorphic.)p Black 2085 402 a Fn(\017)p
Black 2150 409 a Fq(T)-6 b(racking)15 b(Alpha-r)o(enaming)o(.)e
Fu(Recall)i(the)g(test)g(programs)h(highlight-)2150 492
y(ing)j(the)g(subtle)g(issues)g(at)g(w)o(ork)g(here.)p
Black Black 2150 646 a Fl(-|)39 b(val)h(puzzle1)h(=)2424
729 y(<fn)f(a)g(=>)f(~\(\(fn)i(x)e(=>)h(<x>\)\(fn)h(y)e(=>)h(<a>\)\))g
(0>;)2150 812 y(-|)f(val)h(puzzle2)h(=)2424 895 y(<fn)f(a)g(=>)f
(~\(<fn)i(y)e(=>)h(<a>>\))g(0>;)2150 1048 y Fu(W)-6 b(e)20
b(ar)o(gued)h(that)f Fl(\(run)40 b(puzzle1\))22 b Fu(should)f(cause)g
(a)g(type)f(error)m(,)g(b)o(ut)2150 1131 y Fl(\(run)40
b(puzzle2\))20 b Fu(shouldn')o(t.)2150 1239 y(The)e Fs(\012)p
Fu(me)o(ga)h(encoding)g(beha)o(v)o(es)g(in)f(e)o(xactly)h(this)f(w)o
(ay)-5 b(.)18 b(Consider)h(the)2150 1322 y(type)g(of)g(the)g
Fs(\012)p Fu(me)o(ga)g(translation)h(of)f Fl(puzzle1)p
Fu(.)p Black Black 2150 1476 a Fl(Br)39 b(\(Abs)i(`a)2464
1559 y(\(App)f(\(Esc)g(\(App)g(\(Abs)g(`x)g(\(Br)g(\(Csp)g(\(V)f
(`x\)\)\)\))3052 1642 y(\(Abs)h(`y)g(\(Br)g(\(V)f(`a\)\)\)\)\))2660
1725 y(\(Const)h(0\))g(\)\))2150 1808 y(::)f(Exp)h(a)g(u)f(\(Rec)h
(v,b\))2581 1891 y(\(Cd)g(v)g(b)f(\(c)h(->)f(Cd)h({`a:c;)h(v})e(b)h
(c\)\))2150 2045 y Fu(It)34 b(appears)h(polymorphic)h(enough.)g(Note)e
(the)h(current)f(conte)o(xt)h(is)2150 2128 y(typed)d(by)f(the)g(type)h
(v)n(ariable)f Fl(v)g Fu(inside)h(the)f Fl(Cd)g Fu(type.)g(But)g
(further)2150 2211 y(inspection)d(sho)n(ws)f(that)g(this)g(type)g(v)n
(ariable)h Fl(v)f Fu(also)g(appears)h(in)f(the)2150 2294
y(type)d(of)g(the)g(code)h(returned)f Fl(\(c)40 b(->)g(Cd)f({`a:c;)i
(v})f(b)f(c\))p Fu(.)24 b(Thus)2150 2377 y(it)18 b(isn')o(t)g(really)h
(polymorphic)i(at)d(all.)p Black Black 2150 2531 a Fl(-|)39
b(run)h(puzzle1)2150 2614 y(Error:)g(puzzle1)h(isn't)f(polymorphic)i
(enough)2150 2697 y(Expected)f(Type:)2267 2780 y(\(forall)g(v.)f(Exp)g
(a)f(u)h(\(Rec)g(v,b\))3013 2863 y(\(Cd)g(v)f(b)h(c\)\))2150
2946 y(Found)g(Type:)119 b(Exp)40 b(a)f(u)h(\(Rec)g(v,b\))3013
3029 y(\(Cd)g(v)f(b)h(\(c)f(->)h(Cd)g({`a:c;)g(v})3680
3112 y(b)f(c\)\)\))2150 3258 y Fu(The)c(type)h(gi)n(v)o(en)g(to)f
Fl(puzzle1)i Fu(illustrates)e(of)g(the)g(problem.)h(The)2150
3332 y(en)m(vironment)f Fl(v)g Fu(is)e(needed)j(e)n(v)o(en)f(after)f
(the)g(function)h(is)f(applied.)2150 3407 y(But)23 b(if)g(the)h(user)g
(performs)g(the)g(beta-reduction)h(manually)-5 b(,)24
b(then)g(the)2150 3482 y(problem)19 b(does)h(not)f(occur)l(.)p
Black Black 2150 3627 a Fe(-|)36 b(puzzle2)2256 3702
y(Br)f(\(Abs)i(`a)f(\(App)g(\(Esc)h(\(Br)f(\(Abs)g(`y)g(\(Br)g(\(V)g
(`a\)\)\)\)\))2820 3777 y(\(Const)h(0\)\)\))2185 3851
y(::)f(Exp)g(a)g(u)f(\(Rec)i(v,\(Rec)g({`a:b;)g(w},c\)\))2573
3926 y(\(Cd)f(v)g(\(Rec)g({`a:b;)h(w},c\))2785 4001 y(\(d)f(->)g(Cd)f
({`a:b;)i(w})f(c)g(b\)\))2150 4076 y(-|)g(Run)g(puzzle2)2256
4150 y(Run)g(\(Br)g(\(Abs)g(`a)g(\(App)h(\(Esc)f(\(Br)g(\(Abs)h(`y)e
(\(Br)i(\(V)e(`a\)\)\)\)\))2820 4225 y(\(Const)i(0\)\)\)\))2185
4300 y(::)f(Exp)g(a)g(u)f(\(Rec)i({`a:b;)g(v},c\))2573
4374 y(\(d)f(->)g(Cd)g({`a:b;)h(v})f(c)f(b\))2141 4528
y Fu(The)23 b Fs(\012)p Fu(me)o(ga)g(function)g Fl(eval)g
Fu(sho)n(ws)g(that)f(if)g(we)g(disallo)n(w)h Fl(puzzle1)2042
4611 y Fu(we)c(can)g(use)g(a)g(v)o(ery)g(simple)g(implementation,)h
(yet)f(still)f(remain)h(safe.)2042 4724 y
SDict begin H.S end
 2042 4724 a
2042 4724 a
SDict begin 10 H.A end
 2042 4724 a 2042 4724 a
SDict begin [/View [/XYZ H.V]/Dest (section.7) cvn /DEST pdfmark end
 2042 4724 a 91 x
Fx(7.)91 b(Related)22 b(w)o(ork.)2042 4932 y Fu(There)36
b(are)g(tw)o(o)g(areas)g(of)g(related)g(w)o(ork)g(that)g(should)h(be)f
(discussed.)2042 5015 y(First,)22 b(type)i(systems)g(for)f(multi-stage)
h(languages,)h(and)f(second,)g(the)g(de-)2042 5098 y(sign)d(of)g
(meta-languages)i(for)e(specifying)h(and)g(reasoning)g(about)g(object-)
2042 5181 y(languages.)2141 5264 y Fq(T)-6 b(ype)23 b(Systems.)f
Fu(Of)g(the)g(man)o(y)h(papers)g(on)g(type)g(systems)f(for)h(multi-)
2042 5347 y(stage)33 b(languages)i(only)e(tw)o(o)g(achie)n(v)o(e)h(the)
g(scope)g(of)f(the)g(system)g(pre-)2042 5430 y(sented)26
b(in)f(this)g(paper)h(\(in)f(terms)h(of)f(the)g(features)h
(supported\),)g(and)g(one)p Black Black eop end
%%Page: 12 12
TeXDict begin 12 11 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -758
-608 a
SDict begin H.S end
 -758 -608 a -758 -608 a
SDict begin H.R end
 -758 -608 a -758 -608
a
SDict begin [/View [/XYZ H.V]/Dest (page.12) cvn /DEST pdfmark end
 -758 -608 a Black Black -150 66 a Fu(should)18 b(be)g(discussed)h
(because)f(it)f(uses)h(a)f(similar)m(,)g(b)o(ut)g(weak)o(er)h
(approach.)-150 149 y(The)o(y)k(are:)g Fr(En)m(vir)m(onment)g
(Classi\002er)o(s)p Fu([)p Fq(?)h Fu(])e(by)i(T)-6 b(aha)22
b(and)g(Nielsen,)g Fr(Meta-)-150 232 y(Pr)m(o)o(gr)o(amming)f(thr)m
(ough)h(T)-6 b(ypeful)21 b(Code)g(Repr)m(esentation)p
Fu([)p Fq(?)h Fu(])e(by)h(Chiyan)-150 315 y(Chen)g(and)f(Hongwei)h(Xi,)
e(and)i Fr(A)f(Modal)h(Analysis)f(of)g(Sta)o(g)o(ed)i(Computa-)-150
399 y(tion)d Fu(by)g(Da)o(vies)g(and)h(Pfenning.)-50
482 y(Neither)28 b(of)h(the)h(\002rst)e(tw)o(o)h(has)g(the)g
(simplicity)g(of)g(the)g(system)g(pre-)-150 565 y(sented)20
b(in)f(this)g(paper)m(,)h(and)g(the)f(third)g(co)o(v)o(ers)h(a)f(much)h
(simpler)f(language.)-150 648 y(The)i(\002rst)f(tw)o(o)i(emplo)o(y)g(a)
f(single)h(type)g(conte)o(xt)f(that)g(records)h(the)g(type)f(of)-150
731 y(all)g(v)n(ariables,)g(rather)h(than)f(a)h(sliding)f(band)h(of)g
(type)f(conte)o(xts.)h(The)f(third)-150 814 y(uses)e(a)g(single)g
(stack,)g(rather)g(than)h(a)e(sliding)i(band)f(\(tw)o(o)g(stacks\).)-50
897 y(The)33 b(paper)i Fr(En)m(vir)m(onment)f(Classi\002er)o(s)h
Fu(emplo)o(ys)g(a)f(le)n(v)o(el-strati\002ed)-150 980
y(syntax)e(and)g(a)f(complicated)h(syntactic)g(notion)f(called)h
Fr(demotion)p Fu(.)g(De-)-150 1063 y(motion)23 b(is)e(a)i(term)e(to)h
(term)g(transformation)h(\(performed)g(under)g(a)f(set)g(of)-150
1146 y(v)n(ariables\))29 b(that)f(essentially)g(places)h(additional)g
(cross-stage)g(persistent)-150 1229 y(annotations)c(around)f(the)g(v)n
(ariables)f(mentioned)i(in)e(the)h(set.)e(The)i(notion)-150
1312 y(of)f(demotion)i(is)e(necessary)i(to)e(sho)n(w)h(that)f
(reduction)i(preserv)o(es)f(typing.)-150 1395 y(This)19
b(considerably)h(complicates)g(the)f(type)g(system.)-50
1478 y(The)f(paper)h Fr(Meta-Pr)m(o)o(gr)o(amming)g(thr)m(ough)h(T)-6
b(ypeful)19 b(Code)f(Repr)m(esen-)-150 1561 y(tation)j
Fu(emplo)o(ys)i(a)e(de)g(Bruijn)g(notation)g(similar)g(to)g(the)g
(notation)h(used)f(in)-150 1644 y(this)27 b(paper)m(,)i(b)o(ut)e
(relies)g(an)h(a)g(complicated)h(notion)f(of)g(projection.)g(Pro-)-150
1727 y(jection,)k(computes)i(a)e(ne)n(w)h(type)g(conte)o(xt)g(with)f
(only)h(those)g(v)n(ariables)-150 1810 y(from)26 b(speci\002ed)g(le)n
(v)o(els)g(from)f(the)h(\223master\224)g(conte)o(xt)g(with)g
(information)-150 1893 y(about)h(all)f(le)n(v)o(els.)g(This)g
(considerably)i(complicates)f(proofs)g(about)g(pro-)-150
1976 y(gram)19 b(properties,)g(lik)o(e)g(subject)g(reduction.)h
(Neither)e(system)h(approaches)-150 2059 y(the)g(simplicity)g(or)g(the)
g(compactness)h(of)f(the)g(system)g(presented)h(here.)-50
2142 y(The)25 b(paper)i Fr(A)e(Modal)h(Analysis)g(of)g(Sta)o(g)o(ed)h
(Computation)g Fu([)p Fq(?)f Fu(])f(pro-)-150 2225 y(vides)30
b(a)g(type)g(system)g(for)f(se)n(v)o(eral)h(staged)h(languages)g(based)
f(on)g(intu-)-150 2308 y(itionist)21 b(modal)h(logic)g(S4.)f(While)g
(similar)g(is)g(some)h(respects)g(to)f(the)h(type)-150
2391 y(system)j(for)f(MetaML)g(presented)i(here)e(it)g(has)g(some)h
(basic)g(dif)n(ferences.)-150 2474 y(First,)16 b(the)h(languages)h
(presented)g(can)g(only)f(b)o(uild)g(code)h(for)f(closed)h(terms.)-150
2557 y(F)o(or)25 b(e)o(xample:)h Fl(<fn)40 b(x)f(=>)h(~\(f)g(<x>\)>)26
b Fu(could)g(not)g(be)g(typed)g(because)-150 2640 y(the)31
b(ar)o(gument)g(to)g Fl(f)f Fu(is)h(a)f(code)i(term)e(with)h(a)f(free)h
(v)n(ariable)g(bound)h(in)-150 2723 y(the)19 b(present)h(le)n(v)o(el)f
(\(from)g(the)g(perspecti)n(v)o(e)h(of)f(inside)g(the)g(brack)o(ets\).)
h(This)-150 2806 y(se)n(v)o(erely)j(limits)e(the)h(code)h(generators)f
(that)g(can)h(be)f(e)o(xpressed.)h(Second,)-150 2889
y(the)i(type)h(system)f(uses)h(a)f(single)g(stack)g(of)g(en)m
(vironments)i(one)f(for)f(each)-150 2972 y(le)n(v)o(el,)k(as)g(opposed)
i(to)f(a)f(sliding)g(band)i(\(a)e(pair)g(of)g(stacks)h(of)f(en)m
(viron-)-150 3055 y(ments\),)22 b(this)g(simpli\002cation)f(is)h(suf)n
(\002cient)g(because)h(the)f(language)i(lacks)-150 3138
y(the)17 b(escape)g(annotation.)h(Instead)f(it)g(uses)g(a)f(weak)o(er)i
Fr(unbox)g Fu(construct)f(that)-150 3221 y(cannot)27
b(be)g(placed)g(inside)g(of)f(brack)o(ets,)h(also)g(limiting)f(the)g(e)
o(xpressi)n(v)o(e-)-150 3304 y(ness)20 b(of)g(the)f(language.)i
(Finally)-5 b(,)19 b(none)h(of)g(there)g(languages)h(pro)o(vides)f(the)
-150 3387 y(e)o(xplicit)28 b(cross)g(operator)h(that)f(lifts)f(v)n
(alues)i(from)f(pre)n(vious)h(stages)f(into)-150 3470
y(code.)-50 3553 y Fq(Meta-languages.)17 b Fu(There)g(are)g(man)o(y)h
(systems)g(that)f(could)h(be)f(used)h(as)-150 3636 y(meta-languages)31
b(for)e(manipulating)h(object-languages.)h(The)o(y)f(include)-150
3719 y(Inducti)n(v)o(e)d(F)o(amilies[)p Fq(?)e(?)g Fu(],)g(theorem)i
(pro)o(v)o(ers)f(\(Coq[)p Fq(?)g Fu(],)f(Isabelle[)p
Fq(?)h Fu(]\),)-150 3802 y(logical)17 b(frame)n(w)o(orks)g(\(T)-6
b(welf[)p Fq(?)16 b Fu(],)g(LEGO[)p Fq(?)f Fu(]\),)h(proof)h
(assistants)f(\(ALF[)p Fq(?)-150 3885 y Fu(],)i(Agda[)p
Fq(?)i Fu(]\))e(dependently)j(typed)f(languages)h(\(Epigram[)p
Fq(?)e Fu(],)f(RSP[)p Fq(?)g Fu(]\).)-50 3968 y(These)c(systems)h(all)g
(choose)g(a)g(point)g(in)f(the)h(design)h(space)f(where)g(types)-150
4051 y(and)27 b(v)n(alues)f(are)g(indistinguishable.)h(In)f
Fs(\012)p Fu(me)o(ga)h(we)f(choose)h(a)f(point)g(in)-150
4134 y(the)d(design)g(space)h(with)e(a)h(strict)e(phase)j(distinction)f
(between)g(types)h(and)-150 4218 y(v)n(alues.)e(W)-6
b(e)22 b(also)g(ha)o(v)o(e)g(a)g(strong)g(desire)g(to)g(minimize)g
(type)g(annotations)-150 4301 y(and)e(other)f(administrati)n(v)o(e)g(w)
o(ork.)-50 4384 y(Se)n(v)o(eral)29 b(systems)h(choose)h(a)f(point)g(in)
f(the)h(design)g(space)h(closer)e(to)-150 4467 y(ours,)22
b(where)g(the)g(distinction)g(between)h(types)f(and)g(v)n(alues)h(is)f
(preserv)o(ed.)-150 4550 y(W)-6 b(e)18 b(o)n(we)h(much)h(to)e(these)h
(w)o(orks)h(for)e(inspiration,)h(e)o(xamples,)g(and)g(imple-)-150
4633 y(mentation)k(techniques.)h(These)f(include)g(Guarded)h(Recursi)n
(v)o(e)f(Datatype)-150 4716 y(Constructors[)p Fq(?)g
Fu(],)e(First-class)g(phantom)j(types[)p Fq(?)e Fu(],)g(W)-6
b(obbly)22 b(types[)p Fq(?)h Fu(],)-150 4799 y(and)e(Silly)f(T)-6
b(ype)21 b(F)o(amilies[)p Fq(?)f Fu(].)g(There)g(are)h(only)g(minor)g
(syntactic)g(dif)n(fer)o(-)-150 4882 y(ences)28 b(between)g(these)g
(systems)g(and)g(our)f(o)n(wn,)h(and)g(we)f(imagine)h(the)o(y)-150
4965 y(could)d(be)h(used)f(in)g(a)f(similar)g(manner)m(,)h(e)o(xcept)h
(for)e(one)i(v)o(ery)f(important)-150 5048 y(thing.)d(In)g(these)h
(systems,)f(type)g(inde)o(x)o(es)h(are)f(restricted)g(to)g(types)h
(classi-)-150 5131 y(\002ed)i(by)h Fl(*0)p Fu(,)g(because)g(the)g
(systems)g(ha)o(v)o(e)g(no)g(w)o(ay)g(of)f(introducing)i(ne)n(w)-150
5214 y(kinds.)d(W)-6 b(e)23 b(consider)i(the)f(introduction)g(of)g(ne)n
(w)g(kinds)g(as)g(an)g(important)-150 5297 y(contrib)o(ution)i(of)f
(our)g(w)o(ork.)g(W)m(ithout)g(ne)n(w)g(kinds,)h(ro)n(ws,)f(natural)g
(num-)p Black Black 2042 66 a(bers,)h(and)h(other)g(important)g
(meta-le)n(v)o(el)f(entities)g(at)g(the)h(type)g(le)n(v)o(el)f(are)2042
149 y(not)19 b(possible.)2042 244 y
SDict begin H.S end
 2042 244 a 2042 244
a
SDict begin 10 H.A end
 2042 244 a 2042 244 a
SDict begin [/View [/XYZ H.V]/Dest (section.8) cvn /DEST pdfmark end
 2042 244 a 92 x Fx(8.)91 b(Conclusion.)2042
452 y Fu(The)16 b(goals)h(of)f(this)g(paper)h(were)f(three)g(fold.)g
(First,)f(to)h(introduce)h(the)f(meta-)2042 535 y(language)24
b Fs(\012)p Fu(me)o(ga.)f(Second,)h(to)f(illustrate)f(that)h(important)
g(e)o(xplorations)2042 618 y(in)d(language)i(design)g(can)f(be)g
(assisted)g(with)f(the)h(correct)g(tools.)f(Third,)g(to)2042
701 y(demonstrate)28 b(that)f(a)g(sound)h(type)f(system)h(for)f(a)g
(multi-stage)g(language)2042 784 y(can)18 b(also)f(be)h(simple,)f
(concise,)h(and)h(easy)f(to)f(understand.)i(W)-6 b(e)17
b(belie)n(v)o(e)h(the)2042 867 y(system)j(using)g(a)g(sliding)g(band)h
(of)f(type)g(conte)o(xts)h(can)f(generalize)h(to)f(an)o(y)2042
950 y(multi-stage)16 b(language)i(and)f(is)g(of)f(general)h(interest)f
(to)h(all)f(who)h(study)g(pro-)2042 1033 y(gram)i(generation.)h(As)f
(illustrated)f(the)h(type)h(system)f(can)g(disqualify)h(pro-)2042
1116 y(grams)k(with)f(subtle)h(properties,)f(and)i(can)f(thus)g
(simplify)f(the)h(semantics)2042 1199 y(of)j(multi-stage)h(languages)h
(because)f(the)o(y)g(no-longer)h(need)f(to)f(address)2042
1282 y(programs)20 b(with)e(these)h(subtle)h(characteristics.)2042
1469 y
SDict begin H.S end
 2042 1469 a 2042 1469 a
SDict begin 13 H.A end
 2042 1469 a 2042 1469
a
SDict begin [/View [/XYZ H.V]/Dest (section*.2) cvn /DEST pdfmark end
 2042 1469 a Fx(Refer)n(ences)p Black 2075 1577 a
SDict begin H.S end
 2075
1577 a Fc([1])2152 1577 y
SDict begin 9 H.A end
 2152 1577 a 2152 1577 a
SDict begin [/View [/XYZ H.V]/Dest (cite.sillyTF) cvn /DEST pdfmark
end
 2152
1577 a Black 29 w Fc(Lennart)c(Augustsson)f(and)g(K)n(ent)g(Petersson.)
20 b(Silly)15 b(type)h(f)o(amilies.)k(A)-5 b(v)n(ailable)2181
1652 y(from:)67 b Fe(http://www.cs.pdx.edu/~sh)q(ear)q(d/pa)q(per)q
(s/si)q(lly)q(.pdf)q Fc(,)2181 1726 y(1994.)p Black 2075
1825 a
SDict begin H.S end
 2075 1825 a Fc([2])2152 1825 y
SDict begin 9 H.A end
 2152 1825 a 2152
1825 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Baars:2002:TDT) cvn /DEST
pdfmark end
 2152 1825 a Black 29 w Fc(Arthur)20 b(I.)e(Baars)i(and)g(S.)e
(Doaitse)i(Swierstra.)32 b(T)-5 b(yping)19 b(dynamic)h(typing.)32
b(In)2181 1900 y Fb(Pr)m(oceedings)21 b(of)e(the)g(Se)o(venth)i(A)n(CM)
d(SIGPLAN)g(International)k(Confer)n(ence)2181 1975 y(on)c(Functional)h
(Pr)m(o)o(gr)o(amming)p Fc(,)f(pages)g(157\226166.)g(A)m(CM)f(Press,)g
(Ne)n(w)h(Y)-7 b(ork,)2181 2050 y(September)19 b(2002.)25
b(Also)17 b(appears)h(in)f(A)m(CM)h(SIGPLAN)e(Notices)i(37/9.)p
Black 2075 2149 a
SDict begin H.S end
 2075 2149 a Fc([3])2152 2149 y
SDict begin 9 H.A end
 2152
2149 a 2152 2149 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Calgano-Moggi-Sheard-JFP03)
cvn /DEST pdfmark end
 2152 2149 a Black 29 w Fc(Cristiano)25
b(Calcagno,)g(Eugenio)e(Moggi,)g(and)g(T)n(im)f(Sheard.)42
b(Closed)24 b(types)2181 2223 y(for)d(a)f(safe)h(imperati)n(v)o(e)i
(MetaML.)34 b Fb(J)n(ournal)22 b(of)e(Functional)j(Pr)m(o)o(gr)o
(amming)p Fc(,)2181 2298 y(13\(12\):545\226572,)d(May)d(2003.)p
Black 2075 2397 a
SDict begin H.S end
 2075 2397 a Fc([4])2152 2397 y
SDict begin 9 H.A end
 2152
2397 a 2152 2397 a
SDict begin [/View [/XYZ H.V]/Dest (cite.XiChen2003) cvn /DEST pdfmark
end
 2152 2397 a Black 29 w Fc(Chiyan)25
b(Chen)g(and)f(Hongwei)g(Xi.)45 b(Meta-programming)26
b(through)f(typeful)2181 2472 y(code)20 b(representation.)34
b(In)19 b Fb(Pr)m(oceedings)i(of)e(the)h(8th)f(A)n(CM)g(SIGPLAN)f
(Inter)o(-)2181 2547 y(national)29 b(Confer)n(ence)g(on)d(Functional)j
(Pr)m(o)o(gr)o(amming)e(\(ICFP-03\))p Fc(,)f(A)m(CM)2181
2621 y(SIGPLAN)19 b(Notices,)i(pages)g(275\226286,)g(Ne)n(w)f(Y)-7
b(ork,)19 b(August)40 b(25\22629)21 b(2003.)2181 2696
y(A)m(CM)d(Press.)p Black 2075 2795 a
SDict begin H.S end
 2075 2795 a Fc([5])2152
2795 y
SDict begin 9 H.A end
 2152 2795 a 2152 2795 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Hinze:03:Phantom) cvn /DEST
pdfmark end
 2152 2795 a Black 29 w
Fc(James)i(Chene)o(y)i(and)e(Ralf)h(Hinze.)35 b(First-class)21
b(phantom)g(types.)34 b(T)-5 b(echnical)2181 2870 y(Report)19
b(TR2003-1901,)f(Cornell)h(Uni)n(v)o(ersity)l(,)f(2003.)25
b(Also)17 b(a)o(v)n(ailable)j(from:)2181 2945 y Fa
(http://www.informatik.uni-bonn.de/~ralf/publications/Pha)o(ntom.pdf)o
Fc(.)p Black 2075 3044 a
SDict begin H.S end
 2075 3044 a Fc([6])2152 3044
y
SDict begin 9 H.A end
 2152 3044 a 2152 3044 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Agda) cvn /DEST pdfmark end
 2152 3044 a Black 29 w Fc(Catarina)29
b(Coquand.)55 b(Agda)27 b(is)f(a)g(system)h(for)f(incrementally)k(de)n
(v)o(eloping)2181 3118 y(proofs)18 b(and)f(programs.)25
b(W)-5 b(eb)16 b(page)i(describing)i(A)m(GD)m(A:)2181
3193 y Fe(http://www.cs.chalmers)q(.se)q(/~ca)q(tar)q(ina/)q(agd)q(a/)
41 b Fc(.)p Black 2075 3292 a
SDict begin H.S end
 2075 3292 a Fc([7])2152
3292 y
SDict begin 9 H.A end
 2152 3292 a 2152 3292 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Coquand:1994:IDT) cvn /DEST
pdfmark end
 2152 3292 a Black 29 w
Fc(T)-5 b(.)30 b(Coquand)j(and)e(P)-7 b(.)30 b(Dybjer)l(.)70
b(Inducti)n(v)o(e)33 b(de\002nitions)g(and)f(type)g(theory)2181
3367 y(an)d(introduction)j(\(preliminary)g(v)o(ersion\).)62
b Fb(Lectur)n(e)30 b(Notes)g(in)f(Computer)2181 3442
y(Science)p Fc(,)20 b(880:60\22676,)e(1994.)p Black 2075
3541 a
SDict begin H.S end
 2075 3541 a Fc([8])2152 3541 y
SDict begin 9 H.A end
 2152 3541 a 2152
3541 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Davies97) cvn /DEST pdfmark
end
 2152 3541 a Black 29 w Fc(Ro)n(w)o(an)32 b(Da)o(vies.)66
b(A)29 b(re\002nement-type)k(check)o(er)g(for)d(Standard)h(ML.)65
b(In)2181 3615 y Fb(International)35 b(Confer)n(ence)g(on)d(Alg)o(ebr)o
(aic)h(Methodolo)o(gy)j(and)c(Softwar)n(e)2181 3690 y(T)-6
b(ec)o(hnolo)o(gy)p Fc(,)36 b(v)o(olume)d(1349)g(of)g
Fb(Lectur)n(e)h(Notes)g(in)f(Computer)h(Science)p Fc(.)2181
3765 y(Springer)o(-V)-7 b(erlag,)20 b(1997.)p Black 2075
3864 a
SDict begin H.S end
 2075 3864 a Fc([9])2152 3864 y
SDict begin 9 H.A end
 2152 3864 a 2152
3864 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Davies-Pfenning-JACM) cvn
/DEST pdfmark end
 2152 3864 a Black 29 w Fc(Ro)n(w)o(an)34 b(Da)o(vies)e(and)h
(Frank)f(Pfenning.)73 b(A)32 b(modal)g(analysis)i(of)e(staged)2181
3939 y(computation.)27 b Fb(J)n(ournal)19 b(of)e(the)h(A)n(CM)p
Fc(,)e(38\(3\):555\226604,)j(2001.)p Black 2042 4038
a
SDict begin H.S end
 2042 4038 a Fc([10])2152 4038 y
SDict begin 9 H.A end
 2152 4038 a 2152 4038
a
SDict begin [/View [/XYZ H.V]/Dest (cite.Dybjer:1999:FAI) cvn /DEST
pdfmark end
 2152 4038 a Black 29 w Fc(P)-7 b(.)15 b(Dybjer)h(and)g(A.)f(Setzer)l
(.)22 b(A)15 b(\002nite)i(axiomatization)j(of)15 b(inducti)n(v)o
(e-recursi)n(v)o(e)2181 4112 y(de\002nitions.)25 b Fb(Lectur)n(e)17
b(Notes)g(in)g(Computer)g(Science)p Fc(,)i(1581:129\226146,)f(1999.)p
Black 2042 4211 a
SDict begin H.S end
 2042 4211 a Fc([11])2152 4211 y
SDict begin 9 H.A end
 2152
4211 a 2152 4211 a
SDict begin [/View [/XYZ H.V]/Dest (cite.113468) cvn /DEST pdfmark
end
 2152 4211 a Black 29 w Fc(T)n(im)30
b(Freeman)h(and)f(Frank)h(Pfenning.)67 b(Re\002nement)32
b(types)f(for)f(ml.)65 b(In)2181 4286 y Fb(Pr)m(oceedings)19
b(of)e(the)g(A)n(CM)g(SIGPLAN)f(1991)h(confer)n(ence)j(on)c(Pr)m(o)o
(gr)o(amming)2181 4361 y(langua)o(g)o(e)32 b(design)d(and)g
(implementation)p Fc(,)k(pages)c(268\226277.)h(A)m(CM)e(Press,)2181
4436 y(1991.)p Black 2042 4535 a
SDict begin H.S end
 2042 4535 a Fc([12])2152
4535 y
SDict begin 9 H.A end
 2152 4535 a 2152 4535 a
SDict begin [/View [/XYZ H.V]/Dest (cite.HinzeHaskellWorkshop02) cvn
/DEST pdfmark end
 2152 4535 a Black 29 w
Fc(Ralf)33 b(Hinze)f(and)g(James)f(Chene)o(y)l(.)70 b(A)31
b(lightweight)j(implementation)h(of)2181 4609 y(generics)25
b(and)d(dynamics.)42 b(In)22 b(Manuel)h(Chakra)o(v)n(arty)l(,)i(editor)
m(,)e Fb(Pr)m(oceedings)2181 4684 y(of)f(the)g(A)n(CM)e(SIGPLAN)h(2002)
g(Hask)o(ell)i(W)-6 b(orkshop)p Fc(,)21 b(pages)h(90\226104.)g(A)m(CM)
2181 4759 y(SIGPLAN,)16 b(October)j(2002.)p Black 2042
4858 a
SDict begin H.S end
 2042 4858 a Fc([13])2152 4858 y
SDict begin 9 H.A end
 2152 4858 a 2152
4858 a
SDict begin [/View [/XYZ H.V]/Dest (cite.wobbly) cvn /DEST pdfmark
end
 2152 4858 a Black 29 w Fc(Simon)34 b(Pe)o(yton)g(Jones,)f(Geof)n
(fre)o(y)h(W)-5 b(ashb)o(urn,)33 b(and)g(Stephanie)j(W)-5
b(eirich.)2181 4933 y(W)g(obbly)30 b(types:)h(type)g(inference)h(for)e
(generalised)i(algebraic)h(data)d(types.)2181 5007 y
Fa(http://research.microsoft.com/Users/simonpj/)p Fc(,)11
b(2004.)p Black 2042 5106 a
SDict begin H.S end
 2042 5106 a Fc([14])2152
5106 y
SDict begin 9 H.A end
 2152 5106 a 2152 5106 a
SDict begin [/View [/XYZ H.V]/Dest (cite.oai:CiteSeerPSU:312481) cvn
/DEST pdfmark end
 2152 5106 a Black 29 w
Fc(A.)31 b(J.)f(Kfoury)i(and)g(Said)g(Jahama.)70 b(T)-5
b(ype)31 b(reconstruction)k(in)d(the)g(pres-)2181 5181
y(ence)21 b(of)e(polymorphic)j(recursion)f(and)e(recursi)n(v)o(e)j
(types.)32 b(T)-5 b(echnical)22 b(report,)2181 5256 y(March)c(21)f
(2000.)p Black 2042 5355 a
SDict begin H.S end
 2042 5355 a Fc([15])2152 5355
y
SDict begin 9 H.A end
 2152 5355 a 2152 5355 a
SDict begin [/View [/XYZ H.V]/Dest (cite.LuoPollack92) cvn /DEST pdfmark
end
 2152 5355 a Black 29 w Fc(Zhaohui)k(Luo)e
(and)i(Robert)g(Pollack.)34 b(LEGO)18 b(proof)j(de)n(v)o(elopment)h
(system:)2181 5430 y(User')l(s)k(manual.)53 b(T)-5 b(echnical)28
b(Report)f(ECS-LFCS-92-211,)f(LFCS,)e(Com-)p Black Black
eop end
%%Page: 13 13
TeXDict begin 13 12 bop -600 -600 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 -600 -600 a -758
-608 a
SDict begin H.S end
 -758 -608 a -758 -608 a
SDict begin H.R end
 -758 -608 a -758 -608
a
SDict begin [/View [/XYZ H.V]/Dest (page.13) cvn /DEST pdfmark end
 -758 -608 a Black Black -10 66 a Fc(puter)22 b(Science)h(Dept.,)e
(Uni)n(v)o(ersity)i(of)e(Edinb)o(ur)o(gh,)g(The)g(King')l(s)h
(Buildings,)-10 141 y(Edinb)o(ur)o(gh)17 b(EH9)g(3JZ,)e(May)j(1992.)24
b(Updated)19 b(v)o(ersion.)p Black -150 243 a
SDict begin H.S end
 -150 243
a Fc([16])-40 243 y
SDict begin 9 H.A end
 -40 243 a -40 243 a
SDict begin [/View [/XYZ H.V]/Dest (cite.epigram) cvn /DEST pdfmark
end
 -40 243 a Black
30 w Fc(Connor)25 b(McBride.)50 b(Epigram:)25 b(Practical)j
(programming)d(with)h(dependent)-10 317 y(types.)55 b(In)27
b Fb(Notes)g(fr)m(om)g(the)g(5th)g(International)j(Summer)d(Sc)o(hool)h
(on)f(Ad-)-10 392 y(vanced)18 b(Functional)i(Pr)m(o)o(gr)o(amming)p
Fc(,)d(August)g(2004.)25 b(A)-5 b(v)n(ailable)20 b(at:)-10
467 y Fa(http://www.dur.ac.uk/CARG/epigram/epigram-afpnotes)o(.pdf)25
b Fc(.)p Black -150 568 a
SDict begin H.S end
 -150 568 a Fc([17])-40 568
y
SDict begin 9 H.A end
 -40 568 a -40 568 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Milner78) cvn /DEST pdfmark
end
 -40 568 a Black 30 w Fc(Robin)d(Milner)l(.)40
b(A)20 b(theory)j(of)e(type)i(polymorphism)f(in)g(programming)g(lan-)
-10 643 y(guages.)56 b Fb(J)n(ournal)29 b(of)e(Computer)h(and)f(System)
h(Science)p Fc(,)h(17\(3\):348\226375,)-10 717 y(1978.)p
Black -150 819 a
SDict begin H.S end
 -150 819 a Fc([18])-40 819 y
SDict begin 9 H.A end
 -40 819
a -40 819 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Moggi-Taha-Benaissa-Sheard-ESOP99)
cvn /DEST pdfmark end
 -40 819 a Black 30 w Fc(E.)12 b(Moggi,)i(W)-6
b(.)13 b(T)-5 b(aha,)13 b(Z.)g(Benaissa,)i(and)f(T)-5
b(.)13 b(Sheard.)k(An)d(idealized)j(MetaML:)-10 894 y(Simpler)m(,)j
(and)f(more)h(e)o(xpressi)n(v)o(e.)33 b(In)19 b Fb(Eur)m(opean)h
(Symposium)g(on)f(Pr)m(o)o(gr)o(am-)-10 968 y(ming)25
b(\(ESOP\))p Fc(,)f(v)o(olume)i(1576)f(of)g Fb(Lectur)n(e)h(Notes)g(in)
g(Computer)g(Science)p Fc(,)-10 1043 y(pages)18 b(193\226207.)f
(Springer)o(-V)-7 b(erlag,)19 b(1999.)p Black -150 1144
a
SDict begin H.S end
 -150 1144 a Fc([19])-40 1144 y
SDict begin 9 H.A end
 -40 1144 a -40 1144
a
SDict begin [/View [/XYZ H.V]/Dest (cite.oai:CiteSeerPSU:38734) cvn
/DEST pdfmark end
 -40 1144 a Black 30 w Fc(Bengt)f(Nordstrom.)24 b(The)17
b(ALF)f(proof)i(editor)m(,)g(March)g(20)f(1996.)p Black
-150 1246 a
SDict begin H.S end
 -150 1246 a Fc([20])-40 1246 y
SDict begin 9 H.A end
 -40 1246 a
-40 1246 a
SDict begin [/View [/XYZ H.V]/Dest (cite.PasalicLingerGpce) cvn /DEST
pdfmark end
 -40 1246 a Black 30 w Fc(Emir)32 b(P)o(asalic)j(and)e
(Nathan)h(Linger)l(.)76 b(Meta-programming)35 b(with)f(typed)-10
1320 y(object-language)i(representations.)73 b(In)31
b Fb(Gener)o(ative)j(Pr)m(o)o(gr)o(amming)e(and)-10 1395
y(Component)18 b(Engineering)h(\(GPCE'04\))p Fc(,)e(pages)g(136)g(\226)
g(167,)g(October)h(2004.)-10 1470 y(LNCS)e(v)o(olume)i(3286.)p
Black -150 1571 a
SDict begin H.S end
 -150 1571 a Fc([21])-40 1571 y
SDict begin 9 H.A end
 -40
1571 a -40 1571 a
SDict begin [/View [/XYZ H.V]/Dest (cite.SheardPasalic2002) cvn /DEST
pdfmark end
 -40 1571 a Black 30 w Fc(Emir)d(P)o(asalic,)h(W)-5
b(alid)16 b(T)-5 b(aha,)15 b(and)h(T)n(im)e(Sheard.)22
b(T)-5 b(agless)15 b(staged)i(interpreters)-10 1646 y(for)22
b(typed)i(languages.)44 b(In)22 b Fb(Pr)m(oceedings)j(of)d(the)i(Se)o
(venth)g(A)n(CM)f(SIGPLAN)-10 1721 y(International)35
b(Confer)n(ence)g(on)d(Functional)i(Pr)m(o)o(gr)o(amming)f
(\(ICFP-02\).)p Fc(,)-10 1795 y(pages)18 b(218\226229,)f(Pittsb)o(ur)o
(gh,)h(P)-6 b(A.,)16 b(October)35 b(4\2266)17 b(2002.)g(A)m(CM)g
(Press.)p Black -150 1897 a
SDict begin H.S end
 -150 1897 a Fc([22])-40 1897
y
SDict begin 9 H.A end
 -40 1897 a -40 1897 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Paulson90lacs) cvn /DEST pdfmark
end
 -40 1897 a Black 30 w Fc(La)o(wrence)27
b(C.)e(P)o(aulson.)51 b(Isabelle:)28 b(The)e(ne)o(xt)g(700)g(theorem)h
(pro)o(v)o(ers.)51 b(In)-10 1972 y(P)-7 b(.)27 b(Odifreddi,)k(editor)m
(,)f Fb(Lo)o(gic)g(and)f(Computer)h(Science)p Fc(,)h(pages)e
(361\226386.)-10 2046 y(Academic)19 b(Press,)d(1990.)p
Black -150 2148 a
SDict begin H.S end
 -150 2148 a Fc([23])-40 2148 y
SDict begin 9 H.A end
 -40
2148 a -40 2148 a
SDict begin [/View [/XYZ H.V]/Dest (cite.CADE99*202) cvn /DEST pdfmark
end
 -40 2148 a Black 30 w Fc(Frank)23 b(Pfenning)h(and)g
(Carsten)g(Sch)6 b(\250)-28 b(urmann.)44 b(System)23
b(description:)j(T)-5 b(welf)-10 2222 y(\227)35 b(A)f(meta-logical)k
(frame)n(w)o(ork)f(for)d(deducti)n(v)o(e)k(systems.)81
b(In)35 b(Harald)-10 2297 y(Ganzinger)m(,)25 b(editor)m(,)g
Fb(Pr)m(oceedings)f(of)g(the)g(16th)g(International)i(Confer)n(ence)-10
2372 y(on)g(A)o(utomated)h(Deduction)h(\(CADE-16\))p
Fc(,)d(v)o(olume)i(1632)f(of)g Fb(LN)n(AI)p Fc(,)f(pages)-10
2447 y(202\226206,)17 b(Berlin,)i(July)e(7\22610,)g(1999.)g(Springer)o
(-V)-7 b(erlag.)p Black -150 2548 a
SDict begin H.S end
 -150 2548 a Fc([24])-40
2548 y
SDict begin 9 H.A end
 -40 2548 a -40 2548 a
SDict begin [/View [/XYZ H.V]/Dest (cite.pottier2) cvn /DEST pdfmark
end
 -40 2548 a Black 30 w Fc(Franc)-25
b(\270)t(ois)21 b(Pottier)i(and)f(Nadji)g(Gauthier)l(.)39
b(Polymorphic)23 b(typed)f(defunction-)-10 2623 y(alization.)39
b(In)21 b Fb(Pr)m(oceedings)h(of)f(the)h(31st)f(A)n(CM)g(Symposium)h
(on)e(Principles)-10 2697 y(of)k(Pr)m(o)o(gr)o(amming)g(Langua)o(g)o
(es)i(\(POPL)n('04\))p Fc(,)d(pages)h(89\22698,)h(V)-7
b(enice,)24 b(Italy)l(,)-10 2772 y(January)18 b(2004.)24
b(Superseded)19 b(by)e([)p Fw(?)g Fc(].)p Black -150
2873 a
SDict begin H.S end
 -150 2873 a Fc([25])-40 2873 y
SDict begin 9 H.A end
 -40 2873 a -40
2873 a
SDict begin [/View [/XYZ H.V]/Dest (cite.pottier1) cvn /DEST pdfmark
end
 -40 2873 a Black 30 w Fc(Franc)-25 b(\270)t(ois)21
b(Pottier)h(and)g(Y)-7 b(ann)21 b(Rgis-Gianas.)38 b(T)-5
b(o)n(w)o(ards)22 b(ef)n(\002cient,)h(typed)f(LR)-10
2948 y(parsers.)i(Draft)18 b(paper)m(,)g(September)h(2004.)p
Black -150 3050 a
SDict begin H.S end
 -150 3050 a Fc([26])-40 3050 y
SDict begin 9 H.A end
 -40
3050 a -40 3050 a
SDict begin [/View [/XYZ H.V]/Dest (cite.94:2) cvn /DEST pdfmark end
 -40 3050 a Black 30 w Fc(Didier)c(Remy)l(.)i
(Syntactic)g(theories)f(and)e(the)h(algebra)h(of)e(record)h(terms.)i(T)
-5 b(ech-)-10 3124 y(nical)21 b(Report)h(1869,)e(Institut)i(National)g
(de)e(Recherche)j(en)d(Informatique)j(et)-10 3199 y(en)17
b(Automatique,)i(March)f(1993.)p Black -150 3300 a
SDict begin H.S end
 -150
3300 a Fc([27])-40 3300 y
SDict begin 9 H.A end
 -40 3300 a -40 3300 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Sheard01) cvn /DEST pdfmark
end
 -40 3300
a Black 30 w Fc(T)n(im)31 b(Sheard.)73 b(Accomplishments)35
b(and)e(research)h(challenges)h(in)d(meta-)-10 3375 y(programming.)25
b(In)17 b(W)-5 b(alid)18 b(T)-5 b(aha,)17 b(editor)m(,)h
Fb(Pr)m(oceedings)h(of)e(the)h(W)-6 b(orkshop)18 b(on)-10
3450 y(Semantics,)23 b(Applications)g(and)f(Implementation)j(of)d(Pr)m
(o)o(gr)o(am)f(Gener)o(ation)-10 3525 y(\(SAIG'01\))p
Fc(,)29 b(v)o(olume)h(2196)f(of)g Fb(LNCS)p Fc(,)h(pages)g(2\22644,)f
(Berlin,)h(September)-10 3599 y(2001.)17 b(Springer)h(V)-7
b(erlag.)25 b(In)m(vited)19 b(talk.)p Black -150 3701
a
SDict begin H.S end
 -150 3701 a Fc([28])-40 3701 y
SDict begin 9 H.A end
 -40 3701 a -40 3701
a
SDict begin [/View [/XYZ H.V]/Dest (cite.Sheard:2004:LF) cvn /DEST
pdfmark end
 -40 3701 a Black 30 w Fc(T)n(im)i(Sheard.)42 b(Languages)24
b(of)e(the)h(future.)42 b Fb(Onwar)n(d)22 b(T)l(r)o(ac)o(k,)h(OOPSLA)n
('04.)-10 3775 y(Reprinted)i(in:)f(A)n(CM)g(SIGPLAN)f(Notices,)i(Dec.)f
(2004.)p Fc(,)f(39\(10\):116\226119,)-10 3850 y(October)18
b(2004.)p Black -150 3951 a
SDict begin H.S end
 -150 3951 a Fc([29])-40 3951
y
SDict begin 9 H.A end
 -40 3951 a -40 3951 a
SDict begin [/View [/XYZ H.V]/Dest (cite.omegamanual) cvn /DEST pdfmark
end
 -40 3951 a Black 30 w Fc(T)n(im)e(Sheard.)25
b(Ome)o(ga)17 b(users)g(guide,)h(March)g(2005.)24 b(A)-5
b(v)n(ailable)20 b(from:)-10 4026 y Fe(http://www.cs.pdx.edu/~O)q(mega)
q(/)41 b Fc(.)p Black -150 4128 a
SDict begin H.S end
 -150 4128 a Fc([30])-40
4128 y
SDict begin 9 H.A end
 -40 4128 a -40 4128 a
SDict begin [/View [/XYZ H.V]/Dest (cite.SheardLinger) cvn /DEST pdfmark
end
 -40 4128 a Black 30 w Fc(T)n(im)15
b(Sheard)i(and)g(Nathan)h(Linger)l(.)23 b(Programming)17
b(with)g(static)h(in)m(v)n(ariants)i(in)-10 4202 y(Ome)o(ga,)c
(September)j(2004.)24 b(A)-5 b(v)n(ailable)21 b(from:)-10
4277 y Fe(http://www.cs.pdx.edu/~s)q(hear)q(d/)42 b Fc(.)p
Black -150 4378 a
SDict begin H.S end
 -150 4378 a Fc([31])-40 4378 y
SDict begin 9 H.A end
 -40
4378 a -40 4378 a
SDict begin [/View [/XYZ H.V]/Dest (cite.SheardLogFrWks04) cvn /DEST
pdfmark end
 -40 4378 a Black 30 w Fc(T)n(im)20
b(Sheard)i(and)f(Emir)g(P)o(asalic.)38 b(Meta-programming)24
b(with)d(b)o(uilt-in)i(type)-10 4453 y(equality)l(.)e(In)15
b Fb(Lo)o(gical)h(F)l(r)o(ame)o(works)g(and)f(Meta-Langua)o(g)o(es)j
(workshop)p Fc(,)d(July)-10 4528 y(2004.)24 b(A)-5 b(v)n(ailable)20
b(at:)-10 4602 y Fe(http://cs-www.cs.yale.ed)q(u/ho)q(mes)q(/car)q(ste)
q(n/lf)q(m04)q(/)p Fc(.)p Black -150 4704 a
SDict begin H.S end
 -150 4704
a Fc([32])-40 4704 y
SDict begin 9 H.A end
 -40 4704 a -40 4704 a
SDict begin [/View [/XYZ H.V]/Dest (cite.pottier3) cvn /DEST pdfmark
end
 -40 4704 a
Black 30 w Fc(V)l(incent)27 b(Simonet)f(and)g(Franc)-25
b(\270)t(ois)26 b(Pottier)l(.)52 b(Constraint-based)29
b(type)d(infer)o(-)-10 4779 y(ence)18 b(for)f(guarded)i(algebraic)h
(data)e(types.)25 b(A)-5 b(v)n(ailable)20 b(from:)-10
4853 y Fe(http://cristal.inria.fr/)q(~sim)q(one)q(t/pu)q(bli)q(s/in)q
(dex)q(.en.)q(htm)q(l)-10 4928 y Fc(.)p Black -150 5029
a
SDict begin H.S end
 -150 5029 a Fc([33])-40 5029 y
SDict begin 9 H.A end
 -40 5029 a -40 5029
a
SDict begin [/View [/XYZ H.V]/Dest (cite.Rogue) cvn /DEST pdfmark end
 -40 5029 a Black 30 w Fc(Aaron)f(Stump.)30 b(Imperati)n(v)o(e)22
b(LF)c(meta-programming.)32 b(In)19 b Fb(Lo)o(gical)i(F)l(r)o(ame-)-10
5104 y(works)c(and)g(Meta-Langua)o(g)o(es)k(workshop)p
Fc(,)c(July)g(2004.)25 b(A)-5 b(v)n(ailable)20 b(at:)-10
5179 y Fe(http://cs-www.cs.yale.ed)q(u/ho)q(mes)q(/car)q(ste)q(n/lf)q
(m04)q(/)p Fc(.)p Black -150 5280 a
SDict begin H.S end
 -150 5280 a Fc([34])-40
5280 y
SDict begin 9 H.A end
 -40 5280 a -40 5280 a
SDict begin [/View [/XYZ H.V]/Dest (cite.TahNie03) cvn /DEST pdfmark
end
 -40 5280 a Black 30 w Fc(T)-5
b(aha)28 b(and)h(Nielsen.)61 b(En)m(vironment)30 b(classi\002ers.)62
b(In)28 b Fb(POPL:)f(30th)i(A)n(CM)-10 5355 y(SIGA)n(CT)-5
b(-SIGPLAN)26 b(Symposium)i(on)f(Principles)i(of)e(Pr)m(o)o(gr)o
(amming)h(Lan-)-10 5430 y(gua)o(g)o(es)p Fc(,)18 b(2003.)p
Black Black Black 2042 66 a
SDict begin H.S end
 2042 66 a Fc([35])2152 66
y
SDict begin 9 H.A end
 2152 66 a 2152 66 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Taha99) cvn /DEST pdfmark
end
 2152 66 a Black 29 w Fc(W)-5 b(alid)20
b(T)-5 b(aha.)31 b Fb(Multi-Sta)o(g)o(e)23 b(Pr)m(o)o(gr)o(amming:)d
(Its)f(Theory)h(and)f(Applications)p Fc(.)2181 141 y(PhD)29
b(thesis,)g(Ore)o(gon)g(Graduate)h(Institute)h(of)e(Science)h(and)f(T)
-5 b(echnology)l(,)2181 216 y(No)o(v)o(ember)18 b(1999.)p
Black 2042 315 a
SDict begin H.S end
 2042 315 a Fc([36])2152 315 y
SDict begin 9 H.A end
 2152 315
a 2152 315 a
SDict begin [/View [/XYZ H.V]/Dest (cite.T00) cvn /DEST pdfmark end
 2152 315 a Black 29 w Fc(W)-5 b(alid)26
b(T)-5 b(aha.)48 b(A)24 b(sound)h(reduction)i(semantics)f(for)f
(untyped)h(CBN)f(mutli-)2181 390 y(stage)d(computation.)g(Or)m(,)e(the)
h(theory)h(of)e(MetaML)h(is)f(non-tri)n(vial.)38 b(In)20
b Fb(2000)2181 465 y(SIGPLAN)c(W)-6 b(orkshop)17 b(on)f(P)-5
b(artial)17 b(Evaluation)h(and)f(Semantics-Based)i(Pr)m(o-)2181
540 y(gr)o(am)e(Manipulation)k(\(PEPM'00\))p Fc(,)16
b(January)i(2000.)p Black 2042 639 a
SDict begin H.S end
 2042 639 a Fc([37])2152
639 y
SDict begin 9 H.A end
 2152 639 a 2152 639 a
SDict begin [/View [/XYZ H.V]/Dest (cite.TahaTag2000) cvn /DEST pdfmark
end
 2152 639 a Black 29 w Fc(W)-5
b(alid)15 b(T)-5 b(aha.)19 b(T)-5 b(ag)13 b(elimination)18
b(-)c(or)g(-)g(type)h(specialisation)k(is)14 b(a)h(type-inde)o(x)o(ed)
2181 714 y(ef)n(fect.)51 b(In)25 b Fb(APPSEM)e(W)-6 b(orkshop)26
b(on)f(Subtyping)i(&)d(Dependent)j(T)-5 b(ypes)26 b(in)2181
789 y(Pr)m(o)o(gr)o(amming)o(.)15 b(P)-5 b(onte)15 b(de)f(Lima)h(P)-5
b(ortugal.)p Fc(,)14 b(July)h(2000.)k(A)-5 b(v)n(ailable)17
b(online)f(at)2181 863 y(http://www-sop.inria.fr/oasis/DTP00/)q(Proce)q
(ed)q(ing)q(s/proc)q(ee)q(di)q(ngs.html.)p Black 2042
963 a
SDict begin H.S end
 2042 963 a Fc([38])2152 963 y
SDict begin 9 H.A end
 2152 963 a 2152 963
a
SDict begin [/View [/XYZ H.V]/Dest (cite.Taha:2001:TEJ) cvn /DEST pdfmark
end
 2152 963 a Black 29 w Fc(W)-5 b(alid)25 b(T)-5 b(aha,)23
b(Henning)i(Makholm,)f(and)g(John)f(Hughes.)46 b(T)-5
b(ag)23 b(elimination)2181 1038 y(and)c(jones-optimality)l(.)33
b Fb(Lectur)n(e)19 b(Notes)g(in)g(Computer)h(Science)p
Fc(,)g(2053:257\226)2181 1112 y(??,)e(2001.)p Black 2042
1212 a
SDict begin H.S end
 2042 1212 a Fc([39])2152 1212 y
SDict begin 9 H.A end
 2152 1212 a 2152
1212 a
SDict begin [/View [/XYZ H.V]/Dest (cite.TS00) cvn /DEST pdfmark end
 2152 1212 a Black 29 w Fc(W)-5 b(alid)16 b(T)-5
b(aha)15 b(and)h(T)n(im)e(Sheard.)21 b(MetaML:)16 b(Multi-stage)i
(programming)e(with)2181 1287 y(e)o(xplicit)k(annotations.)27
b Fb(Theor)n(etical)20 b(Computer)e(Science)p Fc(,)h(248\(1-2\),)e
(2000.)p Black 2042 1386 a
SDict begin H.S end
 2042 1386 a Fc([40])2152 1386
y
SDict begin 9 H.A end
 2152 1386 a 2152 1386 a
SDict begin [/View [/XYZ H.V]/Dest (cite.COQ74) cvn /DEST pdfmark end
 2152 1386 a Black 29 w Fc(The)70
b(Coq)f(De)n(v)o(elopment)j(T)-5 b(eam.)191 b Fb(The)69
b(Coq)h(Pr)m(oof)f(Assis-)2181 1461 y(tant)80 b(Refer)n(ence)h(Manual,)
f(V)-7 b(er)o(sion)79 b(7.4)p Fc(.)221 b(INRIA,)79 b(2003.)2181
1536 y(http://pauillac.i)q(nria)q(.fr/c)q(oq/)q(doc/)q(mai)q(n.html.)p
Black 2042 1636 a
SDict begin H.S end
 2042 1636 a Fc([41])2152 1636 y
SDict begin 9 H.A end
 2152
1636 a 2152 1636 a
SDict begin [/View [/XYZ H.V]/Dest (cite.IC::Wand1991) cvn /DEST pdfmark
end
 2152 1636 a Black 29 w Fc(Mitchell)21
b(W)-5 b(and.)26 b(T)-5 b(ype)17 b(inference)j(for)e(record)h
(concatenation)j(and)c(multiple)2181 1710 y(inheritance.)28
b Fb(Information)19 b(and)e(Computation)p Fc(,)i(93\(1\):1\22615,)g
(July)e(1991.)p Black 2042 1810 a
SDict begin H.S end
 2042 1810 a Fc([42])2152
1810 y
SDict begin 9 H.A end
 2152 1810 a 2152 1810 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Wright:94) cvn /DEST pdfmark
end
 2152 1810 a Black 29 w
Fc(Andre)n(w)32 b(K.)d(Wright)i(and)g(Matthias)h(Felleisen.)69
b(A)30 b(syntactic)j(approach)2181 1885 y(to)h(type)g(soundness.)76
b Fb(Information)35 b(and)e(Computation)p Fc(,)i(115\(1\):38\22694,)
2181 1959 y(15)18 b(No)o(v)o(ember)f(1994.)p Black 2042
2059 a
SDict begin H.S end
 2042 2059 a Fc([43])2152 2059 y
SDict begin 9 H.A end
 2152 2059 a 2152
2059 a
SDict begin [/View [/XYZ H.V]/Dest (cite.XiCheChe03) cvn /DEST pdfmark
end
 2152 2059 a Black 29 w Fc(Hongwei)35 b(Xi,)f(Chiyan)h(Chen,)f
(and)h(Gang)f(Chen.)78 b(Guarded)36 b(recursi)n(v)o(e)2181
2134 y(datatype)23 b(constructors.)34 b(In)20 b Fb(POPL:)e(30th)j(A)n
(CM)e(SIGA)n(CT)-5 b(-SIGPLAN)20 b(Sym-)2181 2208 y(posium)e(on)f
(Principles)i(of)e(Pr)m(o)o(gr)o(amming)h(Langua)o(g)o(es)p
Fc(,)g(2003.)p Black 2042 2308 a
SDict begin H.S end
 2042 2308 a Fc([44])2152
2308 y
SDict begin 9 H.A end
 2152 2308 a 2152 2308 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Xi:1998:EAB) cvn /DEST pdfmark
end
 2152 2308 a Black 29 w
Fc(Hongwei)k(Xi)f(and)h(Frank)f(Pfenning.)38 b(Eliminating)23
b(array)f(bound)g(checking)2181 2383 y(through)28 b(dependent)h(types.)
56 b Fb(A)n(CM)26 b(SIGPLAN)g(Notices)p Fc(,)i(33\(5\):249\226257,)2181
2457 y(May)18 b(1998.)p Black 2042 2557 a
SDict begin H.S end
 2042 2557 a
Fc([45])2152 2557 y
SDict begin 9 H.A end
 2152 2557 a 2152 2557 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Xi:1999:DTP) cvn /DEST pdfmark
end
 2152 2557
a Black 29 w Fc(Hongwei)24 b(Xi)e(and)h(Frank)g(Pfenning.)43
b(Dependent)24 b(types)f(in)g(practical)j(pro-)2181 2632
y(gramming.)i(In)18 b(A)m(CM,)g(editor)m(,)h Fb(POPL)d('99.)i(Pr)m
(oceedings)i(of)e(the)g(26th)h(A)n(CM)2181 2707 y(SIGPLAN-SIGA)n(CT)c
(on)g(Principles)h(of)f(pr)m(o)o(gr)o(amming)h(langua)o(g)o(es,)h(J)n
(anuary)2181 2781 y(20\22622,)j(1999,)f(San)g(Antonio,)h(TX)p
Fc(,)d(A)m(CM)j(SIGPLAN)e(Notices,)i(pages)f(214\226)2181
2856 y(227,)e(Ne)n(w)h(Y)-7 b(ork,)16 b(NY)-9 b(,)17
b(USA,)f(1999.)h(A)m(CM)g(Press.)p Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
