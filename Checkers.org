# Introduction

We are inspired by http://bentnib.org 's idea of equational theories for type checking. There he derives type checker objects.
At the same time adding the idea of located trees and references (into the same subtree or even outside, c.f. =letrec=).

# Stuff and checkers


Profunctor? <image>

<image> (a hole in a context)
<image> l, l.0, l.1 are compositional type checkers (Atkey)

<image> =Z= is a reference to a constructor defined elsewhere under int.0 Similarly =succ= under int.0

int.0 translates into a typechecker <image>

int-2 translates into a type checker <image>
