% minimal + latex + comments

metavar termvar, x ::= {{ tex \mathit{[[termvar]]} }} {{ com term variable }}

metavar typvar, X ::= {{ com type variable }}

metavar levar, l {{ tex \ell }} ::= {{ com level variable }}

grammar

  t :: t_ ::= {{ com term }}

  v :: v_ ::= {{ com value }}
    | constr              ::   :: Con                     {{ com constructor }}
    | \ x . t             ::   :: Lam                     {{ com abstraction }}

  nat :: n_ ::= {{ com natural }}
      | 0     ::   :: zero {{ com zero }}
      | S nat ::   :: succ {{ com successor }}

  cnat :: cn_ ::= {{ com compact natural }}
      | 0      ::   :: zero {{ com zero }}
      | S cnat ::   :: succ {{ com successor }}
      | utmost ::   :: inf  {{ com infinity }}

  lev :: lev_ ::= {{ com level }}
      | l             ::   :: lvar      {{ com variable }}
      | utmost        ::   :: Utmost    {{ com sky }}
      | nat           ::   :: explicit  {{ com finite }}
      | S lev         ::   :: raise     {{ com raise }}
      | lev '..' lev' ::   :: range     {{ com ranged }}

  T :: T_ ::= {{ com type }}
    | *         ::   :: star  {{ com star }}
    | X         ::   :: var   {{ com variable }}
    | v o T     ::   :: tower {{ com tower }}
    | T -> T'   ::   :: arrow {{ com arrow }}

  G {{ tex \Gamma }} :: G_ ::= {{ com type environment }}
    | empty               ::   :: em     {{ com empty }}
    | G , x : T           ::   :: vn     {{ com extension }}
    | G' o G              ::   :: refin  {{ com tower }}

terminals :: 'terminals_' ::=
    | *    ::  :: star   {{ tex \star }}            {{ com kind star }}
    | empty :: :: emptycontext {{ tex \emptyset }}  {{ com empty set }}
    | o    ::  :: degree {{ tex ^\circ }}           {{ com type refinement }}
    | '::' ::  :: ann    {{ tex :: }}               {{ com type annotation }}
    | ->   ::  :: arrow  {{ tex \rightsquigarrow }} {{ com level arrow }}
    | \    ::  :: lambda {{ tex \lambda }}          {{ com lambda }}
    | utmost :: :: utmost {{ tex ^\infty }}         {{ com sky high }}
    | '|-' ::   :: turnstile {{ tex \vdash }}       {{ com in context }}
    | ^    ::   :: rises {{ tex \Rsh }}             {{ com reaches up }}

subrules
  nat <:: cnat

defns Jlev :: '' ::=

defn
   lev ^ lev' :: :: rises :: rises_ {{ com [[lev]] reach up to [[lev']] }} by

   --------------------------- :: skyscraper
   l .. utmost ^ S l .. utmost

   --------------------- :: finite
   l .. S l' ^ S l .. l'


defns Jtype :: '' ::=

defn

    G |- t : T :: :: GtT :: GtT_ by
