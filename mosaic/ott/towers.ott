% minimal + latex + comments

metavar termvar, x ::= {{ tex \mathit{[[termvar]]} }} {{ com term variable }}

metavar typvar, X ::= {{ com type variable }}

metavar levar, l {{ tex \ell }} ::= {{ com level variable }}

metavar natvar, n {{ tex \imath }} ::= {{ com natural variable }}

grammar

  t :: t_ ::= {{ com term }}

  v :: v_ ::= {{ com value }}
    | constr              ::   :: Con                     {{ com constructor }}
    | \ x . t             ::   :: Lam                     {{ com abstraction }}

  nat :: n_ ::= {{ com natural }}
      | 0     ::   :: zero {{ com zero }}
      | S nat ::   :: succ {{ com successor }}

  cnat :: cn_ ::= {{ com compact natural }}
      | n      ::   :: nvar {{ com variable }}
      | 0      ::   :: zero {{ com zero }}
      | S cnat ::   :: succ {{ com successor }}
      | utmost ::   :: inf  {{ com infinity }}

  lev :: lev_ ::= {{ com level }}
      | l             ::   :: lvar      {{ com variable }}
      | 0             ::   :: zero      {{ com zero }}
      | S lev         ::   :: raise     {{ com raise }}
      | utmost        ::   :: Utmost    {{ com sky }}
      | n             ::   :: nvar      {{ com nat variable }}

  levs :: ls_ ::= {{ com level tower }}
      | lev / cnat    ::   :: steps     {{ com stepped }}
      | lev '..' lev' :: S :: range     {{ com ranged }}
      | lev           :: S :: fromUp    {{ com from to the sky }}

  T :: T_ ::= {{ com type }}
    | *         ::   :: star  {{ com star }}
    | X         ::   :: var   {{ com variable }}
    | X1 X2     ::   :: appl  {{ com application }}
    | T0 o T1   ::   :: tower {{ com tower }}
    | T -> T'   ::   :: arrow {{ com arrow }}
    | T _ levs  ::   :: level {{ com levelled }} {{ tex [[T]]_{[[levs]]} }}
    | ( T )     :: S :: parens {{ com grouping }}

  G {{ tex \Gamma }} :: G_ ::= {{ com type environment }}
    | empty               ::   :: em     {{ com empty }}
    | G , x : T           ::   :: vn     {{ com extension }}
    | G' o G              ::   :: refin  {{ com tower }}

terminals :: 'terminals_' ::=
    | *    ::  :: star   {{ tex \star }}            {{ com kind star }}
    | empty :: :: emptycontext {{ tex \emptyset }}  {{ com empty set }}
    | o    ::  :: degree {{ tex ^\circ }}           {{ com type refinement }}
    | '::' ::  :: ann    {{ tex :: }}               {{ com type annotation }}
    | ->   ::  :: arrow  {{ tex \rightsquigarrow }} {{ com level arrow }}
    | \    ::  :: lambda {{ tex \lambda }}          {{ com lambda }}
    | utmost :: :: utmost {{ tex ^\infty }}         {{ com sky high }}
    | '|-' ::   :: turnstile {{ tex \vdash }}       {{ com in context }}
    | ^    ::   :: rises {{ tex \Rsh }}             {{ com reaches up }}
    | /    ::   :: steps {{ tex \shortmid }}        {{ com steps }}

subrules
  nat <:: cnat

  cnat <:: lev


defns Jlev :: '' ::=

defn
   levs ^ levs' :: :: rises :: rises_ {{ com [[levs]] reach up to [[levs']] }} by

   --------------------------- :: skyscraper
   l / utmost ^ S l / utmost

   --------------------- :: finite
   l / S n ^ S l / n


defns Jtype :: '' ::=

defn

    G |- T : T1 :: :: GtT :: GtT_ by

    --------------- :: star
    empty |- * _ S S n : * _ S S S n


    G |- X : T _ l / n
    G |- X' : T' _ l / n'
    ------------------------ :: arrow
    G |- X -> X' : * _ S l

    G |- X : X1 _ l / n
    G |- X' : ( X1 -> X2 ) _ l / n'
    --------------------------- :: application
    G |- X' X : X2 _ l / n'
